<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git小白成长记</title>
      <link href="/2025/04/26/Git%E5%B0%8F%E7%99%BD%E6%88%90%E9%95%BF%E8%AE%B0/"/>
      <url>/2025/04/26/Git%E5%B0%8F%E7%99%BD%E6%88%90%E9%95%BF%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>Git 是现在最火的版本控制工具，开发合作时几乎人人都离不开它。但用着用着，什么工作区、暂存区、本地仓库、远程仓库就容易搞混；<code>git checkout</code>、<code>git reset</code>、<code>git revert</code> 这些命令也常常傻傻分不清。别担心，今天这篇文章就来帮你把 Git 理个明明白白，一次性搞懂它的运行逻辑和常用命令！</p><h1 id="git-的四个核心区域一次说清"><a class="markdownIt-Anchor" href="#git-的四个核心区域一次说清"></a> 🚧 Git 的四个核心区域，一次说清！</h1><p>在使用 Git 时，最容易混淆的就是它那几个「区」：工作区、暂存区、本地仓库、远程仓库。别急，我们一个个来认识它们。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20250426082223309.png" alt="image-20250426082223309" /></p><hr /><h2 id="️-1-工作区working-directory"><a class="markdownIt-Anchor" href="#️-1-工作区working-directory"></a> 🗂️ 1. 工作区（Working Directory）</h2><p>这是你<strong>每天打开编辑器写代码的地方</strong>，也就是项目文件所在的真实目录。</p><p>📍 特点：</p><ul><li>你看到的源代码文件就存在这里；</li><li>任何新增、修改、删除的文件都会首先出现在工作区；</li><li>还没被 Git 跟踪或提交。</li></ul><p>🧠 可以理解为：你的“写字台”，你在上面涂涂改改，但 Git 还不知道你要保存哪些。</p><hr /><h2 id="️-2-暂存区staging-area-index"><a class="markdownIt-Anchor" href="#️-2-暂存区staging-area-index"></a> 🗃️ 2. 暂存区（Staging Area / Index）</h2><p>暂存区是一个中转站，<strong>告诉 Git 哪些改动你准备好了，要提交</strong>。</p><p>📍 特点：</p><ul><li>通过 <code>git add</code> 把工作区的改动放进来；</li><li>是提交之前的“打包清单”；</li><li>没有 <code>add</code> 的改动不会被提交。</li></ul><p>🧠 就像你整理好文件，先放进了“待归档盒子”，准备打包。</p><hr /><h2 id="3-本地仓库local-repository"><a class="markdownIt-Anchor" href="#3-本地仓库local-repository"></a> 📦 3. 本地仓库（Local Repository）</h2><p>本地仓库就是 Git 真正保存你提交记录的地方。</p><p>📍 特点：</p><ul><li>通过 <code>git commit</code> 把暂存区的内容提交进来；</li><li>保存在 <code>.git</code> 文件夹中；</li><li>可以随时回退、查看历史记录。</li></ul><p>🧠 它是你电脑上的“版本时光机”。</p><hr /><h2 id="4-远程仓库remote-repository"><a class="markdownIt-Anchor" href="#4-远程仓库remote-repository"></a> 🌐 4. 远程仓库（Remote Repository）</h2><p>远程仓库是你和其他人协作的地方，通常在 GitHub、GitLab、Gitee 等平台上。</p><p>📍 特点：</p><ul><li>通过 <code>git push</code> 把本地仓库的提交上传；</li><li>通过 <code>git pull</code> 拉取远程的最新更新；</li><li>多人协作的核心所在。</li></ul><p>🧠 就像是“云端备份中心”，你可以和小伙伴一起同步代码。</p><h1 id="git-核心命令全面理解"><a class="markdownIt-Anchor" href="#git-核心命令全面理解"></a> 🚀Git 核心命令全面理解</h1><p>在掌握了 Git 的四大区域后，接下来我们要通过五个非常重要的命令：<strong>merge</strong>、<strong>rebase</strong>、<strong>reset</strong>、<strong>revert</strong> 和 <strong>checkout</strong>，彻底揭开 Git 版本控制的本质，其中merge和rebase为一组，是涉及分支合并的命令，reset、revert和checkout为一组，是涉及commit操作的命令。</p><hr /><h2 id="1-git-merge-合并分支"><a class="markdownIt-Anchor" href="#1-git-merge-合并分支"></a> 1. <code>git merge</code> — 合并分支 🔀</h2><p><code>git merge</code> 用于将两个分支的历史结合在一起，产生一次新的合并提交（merge commit）。</p><h3 id="️-使用场景"><a class="markdownIt-Anchor" href="#️-使用场景"></a> ✏️ 使用场景：</h3><ul><li>当你在开发分支上完成了功能，想要把它合并到主分支时。</li></ul><p>可以看到，merge有一个显著特征，就是<code>合并分支，然后产生了一个新的提交（commit），这与rebase存在很大的区别</code>。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20250426214021207.png" alt="image-20250426214021207" /></p><h3 id="️-典型命令"><a class="markdownIt-Anchor" href="#️-典型命令"></a> 🛠️ 典型命令：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout main</span><br><span class="line">git merge feature-branch</span><br></pre></td></tr></table></figure><p>这会把 <code>feature-branch</code> 的修改合并到 <code>main</code>。</p><h3 id="特点"><a class="markdownIt-Anchor" href="#特点"></a> ⚡ 特点：</h3><ul><li><strong>保留分支历史</strong>。</li><li>可能出现冲突，需要手动解决。</li></ul><hr /><h2 id="2-git-rebase-变基操作"><a class="markdownIt-Anchor" href="#2-git-rebase-变基操作"></a> 2. <code>git rebase</code> — 变基操作 🌱</h2><p><code>git rebase</code> 的作用是把一系列提交“搬家”，重新应用到另一条分支线的后面。简单来说，就是<strong>让提交历史看起来像一条直线</strong>。</p><h3 id="️-使用场景-2"><a class="markdownIt-Anchor" href="#️-使用场景-2"></a> ✏️ 使用场景：</h3><ul><li>想让提交历史更清晰简洁。</li><li>需要在合并代码前清理提交记录。</li></ul><p>rebase命令“人如其名“，变基命令通过将<code>feature分支直接移动到main分支后面实现合并，在此过程中也不会产生新的提交记录</code>，虽然merge和rebase的处理逻辑不同，但本质上两个命令都完成了对分支的合并，这是值得注意的。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20250426214133974.png" alt="image-20250426214133974" /></p><h3 id="️-典型命令-2"><a class="markdownIt-Anchor" href="#️-典型命令-2"></a> 🛠️ 典型命令：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout feature-branch</span><br><span class="line">git rebase main</span><br></pre></td></tr></table></figure><p>这表示：把 <code>feature-branch</code> 的提交放到 <code>main</code> 最新提交之后。</p><h3 id="特点-2"><a class="markdownIt-Anchor" href="#特点-2"></a> ⚡ 特点：</h3><ul><li><strong>历史更干净</strong>。</li><li>改变提交历史（⚠️ 不建议在公共分支上做 rebase）。</li></ul><hr /><h2 id="3-git-reset-回退操作"><a class="markdownIt-Anchor" href="#3-git-reset-回退操作"></a> 3. <code>git reset</code> — 回退操作 ⏪</h2><p><code>git reset</code> 用来移动当前分支的指针（HEAD）到一个指定的提交，并且根据参数（<code>--soft</code>、<code>--mixed</code>、<code>--hard</code>）决定如何处理暂存区和工作区。</p><h3 id="️-使用场景-3"><a class="markdownIt-Anchor" href="#️-使用场景-3"></a> ✏️ 使用场景：</h3><ul><li>想撤销最近的提交或取消暂存某些文件。</li><li>清除错误提交，重新整理提交记录。</li></ul><p>使用reset的过程中必须了解工作区、暂存区和本地仓库的变化情况，但reset时不管使用哪个参数，本地仓库的提交一定是会被移除的。在实际情况中，使用reset往往是为了彻底的回到某个状态，所以往往搭配<code>--hard</code>参数使用。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20250426220217412.png" alt="image-20250426220217412" /></p><p>如果我们使用reset之后想要本地仓库恢复到reset之前的文件内容<code>（这里仅仅指恢复文件内容，而不是恢复提交记录）</code></p><ul><li>soft：因为soft命令在工作目录和暂存区中都保有文件内容，所以直接<code>git commit</code>就可以恢复本地仓库的文件内容</li><li>mixed：mixed在工作目录中保有文件内容，可以先<code>git add</code>然后<code>git commit</code>恢复本地仓库的文件内容</li><li>hard：通过对soft和mixed的分析，我们知道无论是soft还是mixed，在工作区中原来的文件内容依然是存在且未被修改的，但是hard修改了从工作区到本地仓库的全部内容，所以说hard参数是危险的。但是，Git实际上还留了一手，在我们使用这些命令时，Git本地额外保存了一个<code>reflog</code>，通过<code>reflog</code>，我们可以找回reset之前的内容。</li></ul><h3 id="️-常见命令"><a class="markdownIt-Anchor" href="#️-常见命令"></a> 🛠️ 常见命令：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git reset --soft HEAD~1   <span class="comment"># 回退一个提交，但保留改动</span></span><br><span class="line">git reset --mixed HEAD~1  <span class="comment"># 回退并取消暂存，但保留工作区</span></span><br><span class="line">git reset --hard HEAD~1   <span class="comment"># 全面回退（提交+暂存区+工作区）</span></span><br></pre></td></tr></table></figure><h3 id="特点-3"><a class="markdownIt-Anchor" href="#特点-3"></a> ⚡ 特点：</h3><ul><li><strong>本地修改风险大，慎用 <code>--hard</code>！</strong></li><li>只影响本地仓库，不自动影响远程分支。</li></ul><hr /><h2 id="4-git-revert-撤销提交但保留历史"><a class="markdownIt-Anchor" href="#4-git-revert-撤销提交但保留历史"></a> 4. <code>git revert</code> — 撤销提交但保留历史 🔄</h2><p><code>git revert</code> 用于生成一条新的提交，这条提交<strong>会抵消指定提交的更改</strong>。和 <code>reset</code> 不同，它不会修改历史记录，而是通过新增提交来“反转”旧提交的效果。</p><h3 id="️-使用场景-4"><a class="markdownIt-Anchor" href="#️-使用场景-4"></a> ✏️ 使用场景：</h3><ul><li>在公共分支上需要撤销某次提交，但不能破坏历史记录。</li></ul><p>关于revert，你需要知道的是，revert是通过新建一个commit来撤销之前commit的<code>内容</code>，在commit 6中，<code>反转</code>了commit 3的内容，从而实现撤销。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20250426221746181.png" alt="image-20250426221746181" /></p><h3 id="️-典型命令-3"><a class="markdownIt-Anchor" href="#️-典型命令-3"></a> 🛠️ 典型命令：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git revert &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h3 id="特点-4"><a class="markdownIt-Anchor" href="#特点-4"></a> ⚡ 特点：</h3><ul><li><strong>安全撤销</strong>，不会引起历史断裂。</li><li>适合多人协作项目。</li></ul><hr /><h2 id="5-git-checkout-切换与恢复"><a class="markdownIt-Anchor" href="#5-git-checkout-切换与恢复"></a> 5. <code>git checkout</code> — 切换与恢复 🧳</h2><p><code>git checkout</code> 是一个超级常用的命令，可以用来：</p><ul><li><strong>切换分支</strong></li><li><strong>还原文件</strong></li><li><strong>检出特定版本的内容</strong></li></ul><h3 id="️-使用场景-5"><a class="markdownIt-Anchor" href="#️-使用场景-5"></a> ✏️ 使用场景：</h3><ul><li>切换到其他分支开发新功能。</li><li>恢复单个文件到历史版本。</li></ul><p>在具体介绍之前，我需要提及一个概念——HEAD指针，在Git中，HEAD指针永远指向我们正在操作的commit，在上面关于reset和revert的命令图片中，我省略了HEAD，下面是一个完整图片。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20250426221331988.png" alt="image-20250426221331988" /></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20250426221852532.png" alt="image-20250426221852532" /></p><p>为什么要提及HEAD的概念呢，因为你可以这样理解，<code>git checkout就是git reset --hard</code>，区别是<code>git reset --hard会同时移动head和main，但是git checkout只移动head</code>。正因如此，我们只移动了head，所以checkout后可以随时回到原来的commit，而对于<code>git reset --hard</code>而言，因为永久移动了head和main，不再有任何指针指向原来的commit，我们也就无法再回到原来的commit了。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20250426222348728.png" alt="image-20250426222348728" /></p><p>此外，值得注意的是，在上面的内容中，我提到了<code>checkout</code>的本质与<code>reset --hard</code>是存在相似之处的，在checkout之后我们会丢失所有原来的文件内容，只是因为checkout保留了main指针，所以我们可以回到main所在的位置，但是<code>工作目录和暂存区的内容并不会保存</code>，所在在checkout之前，我们需要保存好工作目录和暂存区的内容，你可以通过直接commit提交当前内容或者使用git stash的方式保存工作目录和暂存区的内容。</p><h3 id="️-典型命令-4"><a class="markdownIt-Anchor" href="#️-典型命令-4"></a> 🛠️ 典型命令：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout HEAD~2 file.txt  <span class="comment"># 把 file.txt 还原到两次提交前的版本</span></span><br></pre></td></tr></table></figure><h3 id="特点-5"><a class="markdownIt-Anchor" href="#特点-5"></a> ⚡ 特点：</h3><ul><li>结合 <code>stash</code> 使用，可以灵活管理修改。</li><li>小心使用，不要覆盖了工作区的改动。</li></ul><hr /><h1 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 🏁 小结</h1><table><thead><tr><th>命令</th><th>作用</th><th>关键词</th></tr></thead><tbody><tr><td><code>merge</code></td><td>合并分支，保留完整历史</td><td>合并、冲突处理</td></tr><tr><td><code>rebase</code></td><td>变基操作，整理提交</td><td>整洁、线性历史</td></tr><tr><td><code>reset</code></td><td>回退提交或取消暂存</td><td>指针移动、风险操作</td></tr><tr><td><code>revert</code></td><td>撤销某次提交并生成新的提交</td><td>安全撤销、多人协作</td></tr><tr><td><code>checkout</code></td><td>切换分支或恢复文件</td><td>分支管理、文件恢复</td></tr></tbody></table><p>掌握了这五大命令之后，你就真正理解了 Git 的“时间线操作艺术”！🎨✨<br />接下来，你可以结合实际案例，进一步演练这些命令，体验 Git 的强大与灵活。</p><p>最后，在这里，我推荐你一个练习Git的好平台：</p><ul><li><a href="https://learngitbranching.js.org/?locale=zh_CN">Learn Git Branching</a></li></ul><p>希望对你有所帮助</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Ubuntu24安装搜狗输入法失败</title>
      <link href="/2025/03/09/%E8%A7%A3%E5%86%B3Ubuntu24%E5%AE%89%E8%A3%85%E6%90%9C%E7%8B%90%E8%BE%93%E5%85%A5%E6%B3%95%E5%A4%B1%E8%B4%A5/"/>
      <url>/2025/03/09/%E8%A7%A3%E5%86%B3Ubuntu24%E5%AE%89%E8%A3%85%E6%90%9C%E7%8B%90%E8%BE%93%E5%85%A5%E6%B3%95%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<p>​新安装了Ubuntu24之后，无法成功安装搜狐输入法，原因是Ubuntu24使用的是fcitx5，版本过新，最简单的办法就是卸载fcitx5，安装老fcitx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt remove fcitx5 fcitx5-chinese-addons fcitx5-module-chttrans fcitx5-module-fullwidth fcitx5-module-punctuation</span><br><span class="line"><span class="built_in">sudo</span> apt install fcitx fcitx-data</span><br></pre></td></tr></table></figure><p>然后剩下的内容按照搜狐官网的安装教程安装即可</p><p><a href="https://pinyin.sogou.com/linux/help.php">https://pinyin.sogou.com/linux/help.php</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo环境配置记录</title>
      <link href="/2025/03/09/hexo%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"/>
      <url>/2025/03/09/hexo%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>该博客用于记录如何快速恢复博客环境</p><h1>配置node</h1><h3 id="安装node环境">安装node环境</h3><p><a href="https://nodejs.cn/download/">https://nodejs.cn/download/</a></p><p>安装最新版node，解压后配置环境变量，进入node的bin目录后链接npm和node到<code>/usr/local/bin</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s $(<span class="built_in">pwd</span>)/node /usr/local/bin/node</span><br><span class="line"><span class="built_in">ln</span> -s $(<span class="built_in">pwd</span>)/npm /usr/local/bin/npm</span><br></pre></td></tr></table></figure><p>然后配置<code>lib/node_modules</code>到环境变量，<code>node -g</code>安装的应用会安装到这里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export \&quot;PATH=\$PATH:<span class="subst">$(pwd)</span>\&quot;&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>如果没有梯子可以安装一下cnpm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm -registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h1>配置Github SSH</h1><p>非常简单，本地生成公钥私钥之后将公钥放在Github SSH中即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;xxx@xxx.com&quot;</span></span><br></pre></td></tr></table></figure><p>然后找到<code>id_rsa.pub</code>放到Github的ssh配置中</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20250309112054425.png" alt="image-20250309112054425"></p><h1>配置PicGo</h1><p>安装PicGo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g picgo</span><br></pre></td></tr></table></figure><p>配置阿里云图床，在<code>~/.picgo/config.json</code>里填入对应信息就可，华东一填入<code>oss-cn-hangzhou</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aliyun&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aliyun&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aliyun&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;accessKeyId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;accessKeySecret&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;bucket&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;area&quot;</span><span class="punctuation">:</span> <span class="string">&quot;oss-cn-hangzhou&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;customUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改<code>插入图片时</code>为<code>上传图片</code>，设置<code>上传服务</code>是<code>PicGo-Core</code>，这里typora可能会报错找不到PicGo-Core，我们根据报错将PicGo链接到目标目录即可</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20250309111834795.png" alt="image-20250309111834795"></p><h1>安装hexo</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>我们从github仓库中下载之前的blog，获取main分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b main https://github.com/jking412/jking412.github.io.git</span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20250309112249369.png" alt="image-20250309112249369"></p><p>进入文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> jking412.github.io</span><br><span class="line">npm install</span><br><span class="line"><span class="built_in">cp</span> -r butterfly themes</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>即可配置好本地hexo环境</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>openssl生成自签名证书</title>
      <link href="/2024/01/27/openssl%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
      <url>/2024/01/27/openssl%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<p>使用openssl可以方便的生成自签名证书，步骤如下</p><ol><li>创建私钥</li></ol><p>由于是自签名，该私钥会同时用于签名和服务器本身，采用如下命令生成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out my.key 2048</span><br></pre></td></tr></table></figure><ol start="2"><li>基于私钥创建csr（证书请求签名），csr中包含服务器公钥</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key my.key -out my.csr -subj <span class="string">&quot;/C=CN/ST=shanghai/L=shanghai/O=example/OU=it/CN=domain1/CN=domain2&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/C= Country 国家</span><br><span class="line">/ST= State or Province 省</span><br><span class="line">/L= Location or City 城市</span><br><span class="line">/O= Organization 组织或企业</span><br><span class="line">/OU= Organization Unit 部门</span><br><span class="line">/CN= Common Name 域名或IP</span><br></pre></td></tr></table></figure><ol start="3"><li>最后使用csr和key来生成证书</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -<span class="keyword">in</span> my.csr -out my.crt -signkey my.key -days 3650</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lab1-添加内核模块</title>
      <link href="/2023/10/17/lab1-%E6%B7%BB%E5%8A%A0%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97/"/>
      <url>/2023/10/17/lab1-%E6%B7%BB%E5%8A%A0%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<p>以题目一为例进行内核模块编程：</p><blockquote><p>题目1：</p><ol><li>设计一个模块，要求列出系统中所有内核线程的程序名、PID、进程状态、进程优先级、父进程的PID。</li><li>设计一个带参数的模块，其参数为某个进程的PID号，模块的功能是列出该进程的家族信息，包括父进程、兄弟进程和子进程的程序名、PID号、进程状态。具体参见教材P336</li></ol></blockquote><p>环境: <code>ubuntu22</code></p><h1 id="认识内核模块编程的基本框架"><a class="markdownIt-Anchor" href="#认识内核模块编程的基本框架"></a> 认识内核模块编程的基本框架</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/init.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/kernel.h&gt;</span></span></span><br><span class="line"><span class="comment">// 初始化函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">hello_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 清理函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">hello_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数注册</span></span><br><span class="line">module_init(hello_init);  </span><br><span class="line">module_exit(hello_exit);  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 模块许可申明</span></span><br><span class="line">MODULE_LICENSE(<span class="string">&quot;GPL&quot;</span>);  </span><br></pre></td></tr></table></figure><p>有下述几个问题需要注意：</p><ol><li>三个头文件必须引入</li><li>必须注册初始化和退出函数</li><li>必须有模块许可申明</li></ol><p>此外，需要注意的是在内核中<code>我们不能使用用户态函数，也就是说我们不能适用诸如printf,strlen等函数，需要使用专门的内核函数</code></p><p>下面是Makefile模板，下面是最基本，也是最常用的模板，其中为一要注意的问题是<code>obj-m的名字需要与编写内核代码文件的名字对应，也就是说这里obj-m是module1.o，你的.c文件的名字应该是module1.c</code></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">obj-m:=module1.o    </span></span><br><span class="line">KDIR:= /lib/modules/<span class="variable">$(<span class="built_in">shell</span> uname -r)</span>/build</span><br><span class="line">PWD:= <span class="variable">$(<span class="built_in">shell</span> pwd)</span> </span><br><span class="line"></span><br><span class="line"><span class="section">default:</span></span><br><span class="line"><span class="variable">$(MAKE)</span> -C <span class="variable">$(KDIR)</span> M=<span class="variable">$(PWD)</span> modules  </span><br><span class="line"><span class="section">clean:</span></span><br><span class="line"><span class="variable">$(MAKE)</span> -C <span class="variable">$(KDIR)</span> M=<span class="variable">$(PWD)</span> clean</span><br></pre></td></tr></table></figure><h1 id="编程打印进程信息"><a class="markdownIt-Anchor" href="#编程打印进程信息"></a> 编程打印进程信息</h1><h2 id="第一小题"><a class="markdownIt-Anchor" href="#第一小题"></a> 第一小题</h2><p>代码比较简单，先放在这里</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/init.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/kernel.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/sched.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/init_task.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">hello_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    pr_alert(<span class="string">&quot;list start !\n&quot;</span>);</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">task_struct</span> *<span class="title">p</span>;</span></span><br><span class="line">    printk(KERN_ALERT<span class="string">&quot;名称\t进程号\t状态\t优先级\t父进程号&quot;</span>);</span><br><span class="line">    <span class="type">int</span> kernel_thread_num = <span class="number">0</span>;</span><br><span class="line">    for_each_process(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;mm == <span class="literal">NULL</span>)&#123; <span class="comment">//内核线程的mm成员为空</span></span><br><span class="line">            kernel_thread_num++;</span><br><span class="line">            pr_info(<span class="string">&quot;%s\t%d\t%ld\t%d\n&quot;</span>,p-&gt;comm,p-&gt;pid, p-&gt;stats,p-&gt;rt_priority,p-&gt;parent-&gt;pid);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    pr_info(<span class="string">&quot;kernel thread num is %d\n&quot;</span>,kernel_thread_num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 清理函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">hello_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数注册</span></span><br><span class="line">module_init(hello_init);  </span><br><span class="line">module_exit(hello_exit);  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 模块许可申明</span></span><br><span class="line">MODULE_LICENSE(<span class="string">&quot;GPL&quot;</span>);  </span><br></pre></td></tr></table></figure><p>介绍一下一些函数:</p><ol><li>pr_info,pr_alert…：用于内核打印</li><li>for_each_process：通过遍历init_task(0号进程对应的进程标识符)来遍历所有内核线程</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> for_each_process(p) \</span></span><br><span class="line"><span class="meta">    for (p = &amp;init_task ; (p = next_task(p)) != &amp;init_task ; )</span></span><br></pre></td></tr></table></figure><p>这里最后打印了内核线程的数量，我们可以通过linux命令简单验证，我们通过内核线程的组id为0这一特点计算内核线程数量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ps -e -o pgid | awk <span class="string">&#x27;$1 == 0&#x27;</span> | <span class="built_in">wc</span> -l</span></span><br></pre></td></tr></table></figure><p>易比较得到一致的结果</p><h2 id="第二小题"><a class="markdownIt-Anchor" href="#第二小题"></a> 第二小题</h2><p>第二小题也不难，主要是对内核提供的一些宏的应用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/init.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/kernel.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/sched.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/init_task.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">pid_t</span>  pid = <span class="number">1</span>;</span><br><span class="line">module_param(pid,<span class="type">int</span>,<span class="number">0644</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">hello_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    pr_alert(<span class="string">&quot;list start !\n&quot;</span>);</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">task_struct</span> *<span class="title">task</span> =</span> pid_task(find_get_pid(pid), PIDTYPE_PID);</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">task_struct</span> *<span class="title">parent</span> =</span> task-&gt;parent;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">task_struct</span> *<span class="title">sibling</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">list_head</span> *<span class="title">list</span>;</span></span><br><span class="line">    <span class="comment">// List it own process</span></span><br><span class="line">    pr_info(<span class="string">&quot;Root: Name: %s, PID: %d, State: %ld\n&quot;</span>,task-&gt;comm,task-&gt;pid,task-&gt;stats);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// List parent process</span></span><br><span class="line">    pr_info(<span class="string">&quot;Parent: Name: %s, PID: %d, State: %ld\n&quot;</span>, parent-&gt;comm, parent-&gt;pid, parent-&gt;stats);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// List child processes</span></span><br><span class="line">    list_for_each(<span class="built_in">list</span>, &amp;task-&gt;children) &#123;</span><br><span class="line">        sibling = list_entry(<span class="built_in">list</span>, <span class="keyword">struct</span> task_struct, sibling);</span><br><span class="line">        pr_info(<span class="string">&quot;Child: Name: %s, PID: %d, State: %ld\n&quot;</span>, sibling-&gt;comm, sibling-&gt;pid, sibling-&gt;stats);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// List sibling processes</span></span><br><span class="line">    list_for_each(<span class="built_in">list</span>, &amp;parent-&gt;children) &#123;</span><br><span class="line">        sibling = list_entry(<span class="built_in">list</span>, <span class="keyword">struct</span> task_struct, sibling);</span><br><span class="line">        <span class="keyword">if</span> (sibling != task) &#123;</span><br><span class="line">            pr_info(<span class="string">&quot;Sibling: Name: %s, PID: %d, State: %ld\n&quot;</span>, sibling-&gt;comm, sibling-&gt;pid, sibling-&gt;stats);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 清理函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">hello_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数注册</span></span><br><span class="line">module_init(hello_init);  </span><br><span class="line">module_exit(hello_exit);  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 模块许可申明</span></span><br><span class="line">MODULE_LICENSE(<span class="string">&quot;GPL&quot;</span>);  </span><br></pre></td></tr></table></figure><p>还是简单介绍一下：</p><ol><li>module_param(name,type,perm)：声明模块的名字，分别为变量名，变量类型和权限</li><li>list_for_each：一个用于帮助遍历的宏</li><li>list_entry：用于帮助类型转换</li></ol>]]></content>
      
      
      <categories>
          
          <category> hdu-os-lab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在linux上安装wireshark</title>
      <link href="/2023/10/10/%E5%9C%A8linux%E4%B8%8A%E5%AE%89%E8%A3%85wireshark/"/>
      <url>/2023/10/10/%E5%9C%A8linux%E4%B8%8A%E5%AE%89%E8%A3%85wireshark/</url>
      
        <content type="html"><![CDATA[<p>wireshark是一款很好用的抓包工具，它可以安装在windows,linux,macos等平台上，在这个教程中，会告诉你如何安装wireshark在ubuntu上</p><h1 id="用apt安装wireshark"><a class="markdownIt-Anchor" href="#用apt安装wireshark"></a> 用apt安装wireshark</h1><p>可以直接使用apt安装wireshark，但是这样无法安装新版本，所以最好先手动添加仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> add-apt-repository ppa:wireshark-dev/stable</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt update</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install wireshark</span></span><br></pre></td></tr></table></figure><p>安装时你可能会遇到这个选项，让你是否允许非root用户抓包，选择&quot;是&quot;</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/20231010103445.png" alt="20231010103445" /></p><p>如果没有这个选项出现，可以执行一下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> dpkg-reconfigure wireshark-common</span></span><br></pre></td></tr></table></figure><p>之后我们需要把我们的用户添加到wireshark用户组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> usermod -aG wireshark $(<span class="built_in">whoami</span>)</span></span><br></pre></td></tr></table></figure><p>然后重启机器就可以使用wireshark了</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> wireshark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kube-proxy工作机制浅析</title>
      <link href="/2023/10/09/kube-proxy%E5%B7%A5%E4%BD%9C%E6%9C%BA%E5%88%B6%E6%B5%85%E6%9E%90/"/>
      <url>/2023/10/09/kube-proxy%E5%B7%A5%E4%BD%9C%E6%9C%BA%E5%88%B6%E6%B5%85%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>kube-proxy是k8s中的重要组件，在k8s的整个网络模型中有着重要的作用，kube-proxy有着多种工作模式，本博客只考虑在<code>iptables</code>模式下工作的kube-proxy</p><h1 id="iptables"><a class="markdownIt-Anchor" href="#iptables"></a> iptables</h1><p>iptables是linux中著名的防火墙，有着过滤，转发等多种功能，iptables中有多张table，每张table有着不同的功能，一张table由多条chain组成，chain中的规则决定了包最后的走向</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/20231009135911.png" alt="20231009135911" /></p><p>nat table有PREROUTING，OUTPUT，POSTROUTING等chains，这些chains中有若干rules，chains中的rules会决定流入的包的走向，特殊的，本地进程发出的包会走向OUTPUT，而外部的包不会</p><h1 id="kube-proxy的工作机制"><a class="markdownIt-Anchor" href="#kube-proxy的工作机制"></a> kube-proxy的工作机制</h1><p>kube-proxy接受api-server的信息，接收到地址的映射信息以后修改iptables的内容，通过linux的iptables实现kubernetes的网络</p><p>可以通过下面的命令查看kube-proxy的工作模式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl localhost:10249/proxyMode</span></span><br></pre></td></tr></table></figure><p>返回的内容就是kube-proxy的工作模式</p><h2 id="kube-proxy-工作实例"><a class="markdownIt-Anchor" href="#kube-proxy-工作实例"></a> kube-proxy 工作实例</h2><p>先创建一个deployment和service</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ngx-conf</span></span><br><span class="line"></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">default.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    server &#123;</span></span><br><span class="line"><span class="string">      listen 80;</span></span><br><span class="line"><span class="string">      location / &#123;</span></span><br><span class="line"><span class="string">        default_type text/plain;</span></span><br><span class="line"><span class="string">        return 200</span></span><br><span class="line"><span class="string">          &#x27;srv : $server_addr:$server_port\nhost: $hostname\nuri : $request_method $host $request_uri\ndate: $time_iso8601\n&#x27;;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ngx-dep</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">ngx-dep</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">ngx-dep</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ngx-conf-vol</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">ngx-conf</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx:alpine</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">      </span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/nginx/conf.d</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">ngx-conf-vol</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ngx-svc</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">ngx-dep</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubectl apply -f ngx.yaml</span></span><br></pre></td></tr></table></figure><p>创建完成我们查看service的clusterIP和两个pod的ip</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubectl get svc</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">kubernetes   ClusterIP   10.43.0.1       &lt;none&gt;        443/TCP        2d15h</span><br><span class="line">ngx-svc      NodePort    10.43.120.124   &lt;none&gt;        80/TCP         4s</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubectl get pod -o wide</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NAME                      READY   STATUS    RESTARTS   AGE   IP            NODE    NOMINATED NODE   READINESS GATES</span><br><span class="line">ngx-dep-9bf586b97-kshgd   1/1     Running   0          98s   10.42.0.148   honor   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">ngx-dep-9bf586b97-zbwww   1/1     Running   0          98s   10.42.0.149   honor   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><h2 id="查看kube-proxy在iptables中创建的rules"><a class="markdownIt-Anchor" href="#查看kube-proxy在iptables中创建的rules"></a> 查看kube-proxy在iptables中创建的rules</h2><p>现在可以通过service的固定ip访问到pod，那么iptables中的规则是怎么样的呢，我们一步步查看包在chains中的流向，<code>-L可以选择显示的chain</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> iptables -t nat -L PREROUTING</span></span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Chain PREROUTING (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line">KUBE-SERVICES  all  --  anywhere             anywhere             /* kubernetes service portals */</span><br><span class="line">DOCKER     all  --  anywhere             anywhere             ADDRTYPE match dst-type LOCAL</span><br><span class="line">CNI-HOSTPORT-DNAT  all  --  anywhere             anywhere             ADDRTYPE match dst-type LOCAL</span><br></pre></td></tr></table></figure><p>我们可以看到kube-proxy在iptables中创建了<code>KUBE-SERVICES</code>的chain target，我们继续跟踪这个chain</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> iptables -t nat -L KUBE-SERVICES</span></span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Chain KUBE-SERVICES (2 references)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line">KUBE-SVC-NPX46M4PTMTKRN6Y  tcp  --  anywhere             10.43.0.1            /* default/kubernetes:https cluster IP */ tcp dpt:https</span><br><span class="line">KUBE-SVC-DQYKF4NVSQPF2JO7  tcp  --  anywhere             10.43.120.124        /* default/ngx-svc cluster IP */ tcp dpt:http</span><br><span class="line">KUBE-NODEPORTS  all  --  anywhere             anywhere             /* kubernetes service nodeports; NOTE: this must be the last rule in this chain */ ADDRTYPE match dst-type LOCAL</span><br></pre></td></tr></table></figure><p>可以看到，在这里的<code>KUBE-SVC-DQYKF4NVSQPF2JO7</code>指定了目标为<code>10.43.120.124</code>的包，这也是service的ip，继续跟踪这条chains</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> iptables -t nat -L KUBE-SVC-DQYKF4NVSQPF2JO7</span></span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Chain KUBE-SVC-DQYKF4NVSQPF2JO7 (2 references)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line">KUBE-MARK-MASQ  tcp  -- !10.42.0.0/16         10.43.120.124        /* default/ngx-svc cluster IP */ tcp dpt:http</span><br><span class="line">KUBE-SEP-WHP752REJFIVTA3A  all  --  anywhere             anywhere             /* default/ngx-svc -&gt; 10.42.0.148:80 */ statistic mode random probability 0.50000000000</span><br><span class="line">KUBE-SEP-KOUJFWPU7NB2K4H6  all  --  anywhere             anywhere             /* default/ngx-svc -&gt; 10.42.0.149:80 */</span><br></pre></td></tr></table></figure><p>最终，我们发现这个包会被转发到<code>10.42.0.148:80或者10.42.0.149:80</code>，也就是两个pod所在的ip和port，最后查看这两个chain</p><p>output:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Chain KUBE-SEP-WHP752REJFIVTA3A (1 references)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line">KUBE-MARK-MASQ  all  --  10.42.0.148          anywhere             /* default/ngx-svc */</span><br><span class="line">DNAT       tcp  --  anywhere             anywhere             /* default/ngx-svc */ tcp to:10.42.0.148:80</span><br><span class="line"></span><br><span class="line">Chain KUBE-SEP-KOUJFWPU7NB2K4H6 (1 references)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line">KUBE-MARK-MASQ  all  --  10.42.0.149          anywhere             /* default/ngx-svc */</span><br><span class="line">DNAT       tcp  --  anywhere             anywhere             /* default/ngx-svc */ tcp to:10.42.0.149:80</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go init函数分析</title>
      <link href="/2023/10/05/Go-init%E5%87%BD%E6%95%B0%E5%88%86%E6%9E%90/"/>
      <url>/2023/10/05/Go-init%E5%87%BD%E6%95%B0%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>Go的所有init函数会在main函数执行之前运行，init的执行是runtime帮助我们完成的，我们来看看init的运行机制。</p><h1 id="init函数的编译处理"><a class="markdownIt-Anchor" href="#init函数的编译处理"></a> init函数的编译处理</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> initTask <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> pack the first 3 fields more tightly?</span></span><br><span class="line">state <span class="type">uintptr</span> <span class="comment">// 0 = uninitialized, 1 = in progress, 2 = done</span></span><br><span class="line">ndeps <span class="type">uintptr</span></span><br><span class="line">nfns  <span class="type">uintptr</span></span><br><span class="line"><span class="comment">// followed by ndeps instances of an *initTask, one per package depended on</span></span><br><span class="line"><span class="comment">// followed by nfns pcs, one per init function to run</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>initTask是init初始化工作的关键结构体，一个包会有一个对应的initTask:</p><ol><li><p>state: 该包的初始化函数是否被执行</p><ul><li>0: 未执行</li><li>1: 正在执行</li><li>2: 执行完成</li></ul></li><li><p>ndeps: 该包有几个依赖的包</p></li><li><p>nfns: 包中的初始化函数数量</p></li></ol><p>虽然每个包都有一个对应的initTask，但是Go在<code>编译中只会为main包生成一个initTask符号main..initTask，并将其中的init函数命名为包名.init.0，包名.init.1...，其他包的initTask的位置我们可以通过main包的initTask的位置找到，具体如何寻找的会在第二部分中说明</code>，我们来看一段代码</p><p><code>main.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;awesomeProject/test&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">100</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="number">200</span></span><br><span class="line">b = a</span><br><span class="line">a = b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">200</span></span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(test.A)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>test/test.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> A <span class="type">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">100</span></span><br><span class="line">fmt.Println(b)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们在编译以后查看符号表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">readelf -s main | grep -E <span class="string">&#x27;main|test&#x27;</span></span></span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> 658: 0000000000433180   816 FUNC    GLOBAL DEFAULT    1 runtime.main</span><br><span class="line"> 659: 00000000004334c0    53 FUNC    GLOBAL DEFAULT    1 runtime.main.func2</span><br><span class="line"> 822: 0000000000441780   500 FUNC    GLOBAL DEFAULT    1 runtime.testAtomic64</span><br><span class="line">1021: 0000000000458140    58 FUNC    GLOBAL DEFAULT    1 runtime.main.func1</span><br><span class="line">1300: 0000000000463560  1279 FUNC    GLOBAL DEFAULT    1 strconv.roundShortest</span><br><span class="line">1517: 00000000004805c0    58 FUNC    GLOBAL DEFAULT    1 main.init.0</span><br><span class="line">1518: 0000000000480600   179 FUNC    GLOBAL DEFAULT    1 main.init.1</span><br><span class="line">1519: 00000000004806c0   171 FUNC    GLOBAL DEFAULT    1 main.main</span><br><span class="line">1520: 0000000000514de0    56 OBJECT  GLOBAL DEFAULT    9 main..inittask</span><br><span class="line">1522: 0000000000558e58     8 OBJECT  GLOBAL DEFAULT   12 awesomeProject/test.A</span><br><span class="line">1716: 000000000052b148     8 OBJECT  GLOBAL DEFAULT   11 runtime.main_ini[...]</span><br><span class="line">1717: 0000000000558dec     1 OBJECT  GLOBAL DEFAULT   12 runtime.mainStarted</span><br><span class="line">1748: 0000000000558fb8     8 OBJECT  GLOBAL DEFAULT   12 runtime.test_z64</span><br><span class="line">1749: 0000000000558fb0     8 OBJECT  GLOBAL DEFAULT   12 runtime.test_x64</span><br><span class="line">1779: 000000000052b188     8 OBJECT  GLOBAL DEFAULT   11 runtime.testSigtrap</span><br><span class="line">1780: 000000000052b190     8 OBJECT  GLOBAL DEFAULT   11 runtime.testSigusr1</span><br><span class="line">1821: 0000000000514020    32 OBJECT  GLOBAL DEFAULT    9 internal/testlog[...]</span><br><span class="line">2110: 00000000004b5d20     8 OBJECT  GLOBAL DEFAULT    2 runtime.mainPC</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到<code>main..inittask</code>，<code>main.init.0</code>，<code>main.init.1</code>，go在执行所有包init函数的过程中，会以<code>main包中的init为起点，通过依赖关系遍历到所有的包</code></p><h1 id="深入init函数的执行流程"><a class="markdownIt-Anchor" href="#深入init函数的执行流程"></a> 深入init函数的执行流程</h1><p>go version: 1.20</p><p>我们先来找到runtime中调用init的部分<br /><code>runtime/proc.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//go:linkname main_inittask main..inittask</span></span><br><span class="line"><span class="keyword">var</span> main_inittask initTask</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  ...</span><br><span class="line">  doInit(&amp;main_inittask) <span class="comment">// Must be before defer.</span></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过观察我们发现<code>main_inittask这个变量链接的就是main..inittask，也就是main包的inittask</code></p><p>现在我们已经得到了main的inittask，接下来我们深入看看doInit是如何运行的<br /><code>runtime/proc.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">doInit</span><span class="params">(t *initTask)</span></span> &#123;</span><br><span class="line"><span class="keyword">switch</span> t.state &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: <span class="comment">// fully initialized</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: <span class="comment">// initialization in progress</span></span><br><span class="line">throw(<span class="string">&quot;recursive call during initialization - linker skew&quot;</span>)</span><br><span class="line"><span class="keyword">default</span>: <span class="comment">// not initialized yet</span></span><br><span class="line">t.state = <span class="number">1</span> <span class="comment">// initialization in progress</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="type">uintptr</span>(<span class="number">0</span>); i &lt; t.ndeps; i++ &#123;</span><br><span class="line">p := add(unsafe.Pointer(t), (<span class="number">3</span>+i)*goarch.PtrSize)</span><br><span class="line">t2 := *(**initTask)(p)</span><br><span class="line">doInit(t2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> t.nfns == <span class="number">0</span> &#123;</span><br><span class="line">t.state = <span class="number">2</span> <span class="comment">// initialization done</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">firstFunc := add(unsafe.Pointer(t), (<span class="number">3</span>+t.ndeps)*goarch.PtrSize)</span><br><span class="line"><span class="keyword">for</span> i := <span class="type">uintptr</span>(<span class="number">0</span>); i &lt; t.nfns; i++ &#123;</span><br><span class="line">p := add(firstFunc, i*goarch.PtrSize)</span><br><span class="line">f := *(*<span class="function"><span class="keyword">func</span><span class="params">()</span></span>)(unsafe.Pointer(&amp;p))</span><br><span class="line">f()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">t.state = <span class="number">2</span> <span class="comment">// initialization done</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在开始解读这一段代码之前，需要再次认识一次initTask结构体，你在go1.20中看到的initTask是被优化过的，实际内容如下:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> initTask <span class="keyword">struct</span> &#123;</span><br><span class="line">    state <span class="type">uintptr</span> <span class="comment">// 当前包在程序运行时的初始化状态： 0 = uninitialized, 1 = in progress, 2 = done</span></span><br><span class="line">    ndeps <span class="type">uintptr</span> <span class="comment">// 当前包的依赖包的数量</span></span><br><span class="line">    nfns  <span class="type">uintptr</span> <span class="comment">// 当前包的初始化函数数量</span></span><br><span class="line">    deps  [ndeps]*initTask <span class="comment">// 当前包的依赖包的initTask指针数组（不是slice）</span></span><br><span class="line">    fns   [nfns]<span class="function"><span class="keyword">func</span> <span class="params">()</span></span>    <span class="comment">// 当前包的初始化函数指针数组（不是slice）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过这个展开以后的initTask和doInit函数，我们可以分析出init函数执行的流程如下:</p><ol><li>先找到main包对应的initTask</li><li>递归先执行依赖包的initTask，因为结构体中没有显示声明出对应的字段，所以需要自己运算出字段所在的位置</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ndeps是依赖包的数量，也就是需要执行的initTask的数量</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="type">uintptr</span>(<span class="number">0</span>); i &lt; t.ndeps; i++ &#123;</span><br><span class="line">  <span class="comment">// (3+i)*goarch.PtrSize，3是跳过initTask的前三个字段</span></span><br><span class="line">  p := add(unsafe.Pointer(t), (<span class="number">3</span>+i)*goarch.PtrSize)</span><br><span class="line">  t2 := *(**initTask)(p)</span><br><span class="line">  doInit(t2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>最后再执行自己的包中的init函数</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 跳过state，ndeps，nfns和deps</span></span><br><span class="line">firstFunc := add(unsafe.Pointer(t), (<span class="number">3</span>+t.ndeps)*goarch.PtrSize)</span><br><span class="line"><span class="comment">// 执行每个init函数</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="type">uintptr</span>(<span class="number">0</span>); i &lt; t.nfns; i++ &#123;</span><br><span class="line">  p := add(firstFunc, i*goarch.PtrSize)</span><br><span class="line">  f := *(*<span class="function"><span class="keyword">func</span><span class="params">()</span></span>)(unsafe.Pointer(&amp;p))</span><br><span class="line">  f()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>重新认识C指针</title>
      <link href="/2023/10/03/%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86C%E6%8C%87%E9%92%88/"/>
      <url>/2023/10/03/%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86C%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<p>指针是C语言中的难点，但其本质和其他类型并无不同，下面我们从几个方面来重新认识指针。</p><p>在这个过程中，我需要你先抛去对指针类型的认识，先忘掉指针的类型，认识纯粹的指针，然后再重新认识带着类型的指针。</p><h1 id="认识纯粹的指针"><a class="markdownIt-Anchor" href="#认识纯粹的指针"></a> 认识纯粹的指针</h1><p>我们<code>先抛开指针的类型</code>，看看指针是什么</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    <span class="type">int</span> c;</span><br><span class="line">    <span class="type">int</span> d;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> *a;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> *b;</span><br><span class="line">    <span class="type">double</span> *c;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * <span class="title">d</span>;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;int pointer = %d bytes\n&quot;</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;unsigned int pointer = %d bytes\n&quot;</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;double pointer = %d bytes\n&quot;</span>,<span class="keyword">sizeof</span>(c));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;struct pointer = %d bytes\n&quot;</span>,<span class="keyword">sizeof</span>(d));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>output:</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int pointer = 8 bytes</span><br><span class="line">unsigned int pointer = 8 bytes</span><br><span class="line">double pointer = 8 bytes</span><br><span class="line">struct pointer = 8 bytes</span><br></pre></td></tr></table></figure><p>可以看到<code>不管什么类型的指针的都是占用8个字节</code>(这个结果在64位机器上都是一致的)，这种结果是容易理解的，我们知道，指针存储的是一个地址，所以不管什么类型的指针都必须要能够表示这台机器上所有的地址，所以对于32位的机器，指针需要4个字节，同理，如果是64位机器，指针就是8个字节。</p><blockquote><p>64位机器中的64表示该机器有着64位的地址空间</p></blockquote><p>为什么要讲上述这些内容呢，因为上述内容表达了一个重要信息，<code>所谓指针，就是一个8个字节的数值，更具体一点的说，这个数值，其内涵是一个地址</code>。</p><p>对于指针的使用来说，既然其本质是一个值，也就意味着我们可以对它任意的赋值，至少在语法上我们不需要受到任何限制。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> *a;</span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    a = <span class="number">100000000</span>;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    a = &amp;b;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="认识引用"><a class="markdownIt-Anchor" href="#认识引用"></a> 认识引用(&amp;)</h1><p>对于引用的本质其实相当的简单，我们起初接触<code>&amp;</code>时可能是在下面两种情景中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> *a;</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="comment">// 配合scanf</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b);</span><br><span class="line"><span class="comment">// 配合指针使用</span></span><br><span class="line">a = &amp;b;</span><br></pre></td></tr></table></figure><p>上面我们提到了指针其实就是一个8字节的值，那么<code>引用一个变量其实也是一个8字节的值</code>,也就是<code>&amp;b与1,2,3...这样的数值并无不同</code>。</p><p>那么我们可以进一步认识到，scanf中第二个参数接受的是一个变量的地址，这种用法并不与<code>&amp;</code>绑定，我们可以看下面的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> a;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> b;</span><br><span class="line">    b = &amp;a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %lld\n&quot;</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = 1</span><br></pre></td></tr></table></figure><p>通过上面的代码，不知道你是否可以认识到<code>指针和引用其实就是一个值这一本质</code>。</p><h1 id="指针的类型与解引用"><a class="markdownIt-Anchor" href="#指针的类型与解引用"></a> 指针的类型与解引用(*)</h1><p>上面的内容都试图让你忘记指针的类型，理解指针就是一个值这个概念，那么指针的类型对于指针来说到底是什么呢，我们先来看一个简单的例子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0x12345678</span>;</span><br><span class="line">    <span class="type">int</span> *p = &amp;a;</span><br><span class="line">    <span class="type">char</span> *q = &amp;a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*p = 0x%x\n&quot;</span>,*p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*q = 0x%x\n&quot;</span>,*q);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看着下面的图，猜猜上面的输出是什么</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/%E6%97%A0%E6%A0%87%E9%A2%98-2023-09-19-2047.png" alt="无标题-2023-09-19-2047" /></p><p>output:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*p = 0x12345678</span><br><span class="line">*q = 0x78</span><br></pre></td></tr></table></figure><p>看到这里，应该意识到了一点，<code>指针的类型决定了指针在解引用获取多少字节的数据</code>，因为char类型占用一个字节，所以解引用时指针会向上看一个字节，同理，int类型占用四个字节，所以解引用时会向上看四个字节</p><p>那么现在我们可以先总结一下，指针可以分为两个部分看:</p><ol><li>其本身是一个8字节的值，表示一个地址</li><li>指针的类型表示指针在解引用时获取多少字节的数据</li></ol><h1 id="指针的声明"><a class="markdownIt-Anchor" href="#指针的声明"></a> 指针的声明</h1><p>如果理解了上面的内容，那么你对指针已经足够清楚了，但是实际上对于C初学者而言，指针最难的部分不在于理解它本身，而是在解读指针的声明，上这个部分与指针关系并不大，但是往往令人费解</p><p>比如我们早期遇到的指针数组和数组指针，不知道你现在看到是否可以分清楚，是有技巧还是靠记忆</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> *p[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> (*p)[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><p>关于这一块的内容，详见我的另一博客，我就不赘述了:  <a href="/2023/01/04/C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%A3%B0%E6%98%8E/" title="C语言声明">C语言声明</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一次双系统linux未删除干净导致系统无法正常启动</title>
      <link href="/2023/09/21/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E5%8F%8C%E7%B3%BB%E7%BB%9Flinux%E6%9C%AA%E5%88%A0%E9%99%A4%E5%B9%B2%E5%87%80%E5%AF%BC%E8%87%B4%E7%B3%BB%E7%BB%9F%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%90%AF%E5%8A%A8/"/>
      <url>/2023/09/21/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E5%8F%8C%E7%B3%BB%E7%BB%9Flinux%E6%9C%AA%E5%88%A0%E9%99%A4%E5%B9%B2%E5%87%80%E5%AF%BC%E8%87%B4%E7%B3%BB%E7%BB%9F%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p>由于自己电脑的磁盘总共只有512G，能分配给双系统linux的空间实际上不会太多，所以我决定将其删除，安装到1T大小SSD的U盘上，但是删除以后由于linux的分区信息还存在，所以开机以后将进入grub，正常开机只能通过进入BIOS，或许也可以调正分区的启动顺序，但是我的电脑并不可以。</p><p>下面记录一下如何彻底删除linux信息。</p><h1 id="通过diskpart彻底删除linux"><a class="markdownIt-Anchor" href="#通过diskpart彻底删除linux"></a> 通过diskpart彻底删除linux</h1><p>先通过命令行打开diskpart</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">diskpart</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">list disk</span></span><br></pre></td></tr></table></figure><p>选择<code>windows所在的磁盘</code>，然后查看分区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ select disk 0 # 根据你的具体情况选择</span><br><span class="line">$ list partition</span><br></pre></td></tr></table></figure><p>然后选择<code>system</code>分区，把他挂载出来</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="keyword">select</span> partition 1</span></span><br><span class="line">assign letter=J</span><br></pre></td></tr></table></figure><p>然后我们就可以在<code>我的电脑</code>中打开，找到<code>J盘</code>,进入到其中，删除linux的文件夹即可。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Dockerfile中CMD和ENTRYPOINT的区别</title>
      <link href="/2023/09/14/Dockerfile%E4%B8%ADCMD%E5%92%8CENTRYPOINT%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2023/09/14/Dockerfile%E4%B8%ADCMD%E5%92%8CENTRYPOINT%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>CMD和ENTRYPOINT的功能看起来比较类似，但是两者还是存在一些区别。</p><h1 id="容器启动命令的构成"><a class="markdownIt-Anchor" href="#容器启动命令的构成"></a> 容器启动命令的构成</h1><p>我们可以通过<code>docker ps</code>查看容器的启动信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CONTAINER ID   IMAGE            COMMAND      CREATED       STATUS               PORTS     NAMES</span><br><span class="line">e77a3d7d7014   helloworld:1.0   &quot;/app/web&quot;   2 hours ago   Exited (2) 2 hours ago             competent_wescoff</span><br></pre></td></tr></table></figure><p>可以通过<code>COMMAND</code>字段查看到容器的启动命令为<code>/app/web</code></p><p>实际上<code>COMMAND由ENTRYPOINT+CMD</code>构成</p><p>我们在<code>docker run</code>后默认跟随的参数为<code>CMD</code>的部分，如果要修改<code>ENTRYPOINT</code>需要显式增加<code>--entrypoint</code>参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run --entrypoint <span class="built_in">ls</span> helloworld -a</span></span><br><span class="line">CONTAINER ID   IMAGE        COMMAND   CREATED          STATUS                      PORTS     NAMES</span><br><span class="line">106fc4a8833b   helloworld   &quot;ls -a&quot;   22 seconds ago   Exited (0) 22 seconds ago             boring_feynman</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到启动命令被更改</p><h1 id="通过dockerfile配置启动命令"><a class="markdownIt-Anchor" href="#通过dockerfile配置启动命令"></a> 通过Dockerfile配置启动命令</h1><p>ENTRYPOINT和CMD除了可以在启动时配置以外，我们还可以在Dockerfile中配置，但是<code>命令行的优先级是大于Dockerfile</code>的</p><p>配置的方式有两种</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> alpine</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> web /app/web</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;ls&quot;</span>]</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;-a&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>我们运行上述镜像，可以发现启动命令为<code>ls -a</code>，我们可以通过命令行替换ENTRYPOINT或者CMD部分</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run helloworld -l</span></span><br></pre></td></tr></table></figure><p>可以发现启动命令为<code>ls -l</code>，ENTRYPOINT的替换就不再演示</p><p>第二种和第一种类似，主要是说明exec和Shell执行方式的区别</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> alpine</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> web /app/web</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> <span class="built_in">ls</span> -a</span></span><br></pre></td></tr></table></figure><p>如果我们执行上面的镜像，我们会发现启动命令变成了<code>/bin/sh -c ls -a</code></p><p>也就说如果我们不使用<code>[]</code>，那么docker会用<code>/bin/sh -c</code>的方式执行，也就是shell执行，但是如果加上[]，会通过exec系统调用执行，<code>在大多数情况下，推荐使用第一种，也就是exec方式</code></p><h1 id="结合使用cmd和entrypoint"><a class="markdownIt-Anchor" href="#结合使用cmd和entrypoint"></a> 结合使用CMD和ENTRYPOINT</h1><p>可以发现ENTRYPOINT通常指定核心命令，也是我们不希望用户修改的部分，而CMD则通常配置成参数部分，合理配合这两个部分可以让Docker镜像更加灵活</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>记录一次Go打包Docker镜像的问题</title>
      <link href="/2023/09/14/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1Go%E6%89%93%E5%8C%85Docker%E9%95%9C%E5%83%8F%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2023/09/14/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1Go%E6%89%93%E5%8C%85Docker%E9%95%9C%E5%83%8F%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>在Linux环境下编译好Go源文件以后我尝试将最后的可执行文件复制到Docker镜像<code>alpine</code>中。<br />这是一个最简单的Go Web代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> r = gin.Default()</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/ping&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(http.StatusOK, <span class="string">&quot;pong&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/produce&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;msg&quot;</span>:   <span class="string">&quot;ok&quot;</span>,</span><br><span class="line"><span class="string">&quot;goods&quot;</span>: <span class="string">&quot;apple&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := r.Run(<span class="string">&quot;:3000&quot;</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;start error&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以及对应的Dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> alpine</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> web /app/web</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;/app/web&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>在最后运行容器时始终出现了<code>file not found</code>的警告，容器一直启动失败，我尝试通过exec进入到容器内部查看文件，发现文件确实拷贝到了正确的位置，但是我在容器中无法使用<code>./web</code>之类的方式启动。</p><p>那看来是可执行文件本身的问题，很快发现默认情况下Go编译处的可执行文件是需要动态链接，而<code>alpine是一个相当轻量的Linux，其本身并不包括动态链接所需要的文件，所以我们要使用静态链接</code></p><p>找到问题之后我们只要静态编译即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">CGO_ENABLED=0 go build -a -ldflags <span class="string">&#x27;-extldflags &quot;-static&quot;&#x27;</span> .</span></span><br></pre></td></tr></table></figure><p>最后再次重新构建发现问题果然解决</p>]]></content>
      
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go切片扩容</title>
      <link href="/2023/09/09/Go%E5%88%87%E7%89%87%E6%89%A9%E5%AE%B9/"/>
      <url>/2023/09/09/Go%E5%88%87%E7%89%87%E6%89%A9%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<p>以下的内容为Go1.20.2版本的扩容方式</p><p>Go数组的扩容机制简单来说分为两种情况</p><ul><li><p>一种是原来的容量小于256，此时会将原来的容量翻倍作为新的容量</p></li><li><p>一种是容量大于等于256，会按照以下方式扩容直至可以满足需求</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>n</mi><mi>e</mi><mi>w</mi><mi>c</mi><mi>a</mi><mi>p</mi><mo>+</mo><mo>=</mo><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>c</mi><mi>a</mi><mi>p</mi><mo>+</mo><mn>3</mn><mtext>∗</mtext><mn>256</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>4</mn></mrow><annotation encoding="application/x-tex">newcap+=(newcap+3∗256)/4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">p</span><span class="mord">+</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">∗</span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">4</span></span></span></span></span></p></li></ul><p>这是大致的分配方式，实际上情况还要更复杂一些，接下来通过切片扩容的代码来分析一些细节</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">newcap := oldCap</span><br><span class="line">doublecap := newcap + newcap</span><br><span class="line"><span class="keyword">if</span> newLen &gt; doublecap &#123;</span><br><span class="line">    newcap = newLen</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> threshold = <span class="number">256</span></span><br><span class="line">    <span class="keyword">if</span> oldCap &lt; threshold &#123;</span><br><span class="line">        newcap = doublecap</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Check 0 &lt; newcap to detect overflow</span></span><br><span class="line">        <span class="comment">// and prevent an infinite loop.</span></span><br><span class="line">        <span class="keyword">for</span> <span class="number">0</span> &lt; newcap &amp;&amp; newcap &lt; newLen &#123;</span><br><span class="line">            <span class="comment">// Transition from growing 2x for small slices</span></span><br><span class="line">            <span class="comment">// to growing 1.25x for large slices. This formula</span></span><br><span class="line">            <span class="comment">// gives a smooth-ish transition between the two.</span></span><br><span class="line">            newcap += (newcap + <span class="number">3</span>*threshold) / <span class="number">4</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Set newcap to the requested cap when</span></span><br><span class="line">        <span class="comment">// the newcap calculation overflowed.</span></span><br><span class="line">        <span class="keyword">if</span> newcap &lt;= <span class="number">0</span> &#123;</span><br><span class="line">            newcap = newLen</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>暂时得到的容量结果</p><table><thead><tr><th>情况</th><th>newcap</th><th></th></tr></thead><tbody><tr><td>容量翻倍后不能满足需求</td><td>newcap = newLen</td><td></td></tr><tr><td>容量翻倍可以满足需求，原容量小于256</td><td>newcap = 2 * oldcap</td><td></td></tr><tr><td>容量翻倍可以满足需求，原容量大于等于256</td><td>newcap += (newcap + 3*256) / 4直至大于newLen</td><td></td></tr></tbody></table><p>我们暂时得到了一个newcap，但实际上最后扩容的过程中还要对这个newcap做一步最后的处理</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lenmem = <span class="type">uintptr</span>(oldLen) * et.size</span><br><span class="line">newlenmem = <span class="type">uintptr</span>(newLen) * et.size</span><br><span class="line">capmem, overflow = math.MulUintptr(et.size, <span class="type">uintptr</span>(newcap))</span><br><span class="line">capmem = roundupsize(capmem)</span><br><span class="line">newcap = <span class="type">int</span>(capmem / et.size)</span><br><span class="line">capmem = <span class="type">uintptr</span>(newcap) * et.size</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>核心在这个roundupsize函数，至于下面的魔法数组如何得到就不深入探究了</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> class_to_size = [_NumSizeClasses]<span class="type">uint16</span>&#123;<span class="number">0</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">24</span>, <span class="number">32</span>, <span class="number">48</span>, <span class="number">64</span>, <span class="number">80</span>, <span class="number">96</span>, <span class="number">112</span>, <span class="number">128</span>, <span class="number">144</span>, <span class="number">160</span>, <span class="number">176</span>, <span class="number">192</span>, <span class="number">208</span>, <span class="number">224</span>, <span class="number">240</span>, <span class="number">256</span>, <span class="number">288</span>, <span class="number">320</span>, <span class="number">352</span>, <span class="number">384</span>, <span class="number">416</span>, <span class="number">448</span>, <span class="number">480</span>, <span class="number">512</span>, <span class="number">576</span>, <span class="number">640</span>, <span class="number">704</span>, <span class="number">768</span>, <span class="number">896</span>, <span class="number">1024</span>, <span class="number">1152</span>, <span class="number">1280</span>, <span class="number">1408</span>, <span class="number">1536</span>, <span class="number">1792</span>, <span class="number">2048</span>, <span class="number">2304</span>, <span class="number">2688</span>, <span class="number">3072</span>, <span class="number">3200</span>, <span class="number">3456</span>, <span class="number">4096</span>, <span class="number">4864</span>, <span class="number">5376</span>, <span class="number">6144</span>, <span class="number">6528</span>, <span class="number">6784</span>, <span class="number">6912</span>, <span class="number">8192</span>, <span class="number">9472</span>, <span class="number">9728</span>, <span class="number">10240</span>, <span class="number">10880</span>, <span class="number">12288</span>, <span class="number">13568</span>, <span class="number">14336</span>, <span class="number">16384</span>, <span class="number">18432</span>, <span class="number">19072</span>, <span class="number">20480</span>, <span class="number">21760</span>, <span class="number">24576</span>, <span class="number">27264</span>, <span class="number">28672</span>, <span class="number">32768</span>&#125;</span><br><span class="line"><span class="keyword">var</span> size_to_class8 = [smallSizeMax/smallSizeDiv + <span class="number">1</span>]<span class="type">uint8</span>&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">23</span>, <span class="number">23</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">24</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">26</span>, <span class="number">26</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">27</span>, <span class="number">27</span>, <span class="number">27</span>, <span class="number">27</span>, <span class="number">27</span>, <span class="number">27</span>, <span class="number">27</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">29</span>, <span class="number">29</span>, <span class="number">29</span>, <span class="number">29</span>, <span class="number">29</span>, <span class="number">29</span>, <span class="number">29</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">30</span>, <span class="number">30</span>, <span class="number">30</span>, <span class="number">30</span>, <span class="number">30</span>, <span class="number">30</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">32</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">roundupsize</span><span class="params">(size <span class="type">uintptr</span>)</span></span> <span class="type">uintptr</span> &#123;</span><br><span class="line"><span class="keyword">if</span> size &lt; _MaxSmallSize &#123;</span><br><span class="line"><span class="keyword">if</span> size &lt;= smallSizeMax<span class="number">-8</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="type">uintptr</span>(class_to_size[size_to_class8[divRoundUp(size, smallSizeDiv)]])</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="type">uintptr</span>(class_to_size[size_to_class128[divRoundUp(size-smallSizeMax, largeSizeDiv)]])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> size+_PageSize &lt; size &#123;</span><br><span class="line"><span class="keyword">return</span> size</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> alignUp(size, _PageSize)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们来看一段示例代码说明这个函数是如何工作的</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := []<span class="type">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>&#125;</span><br><span class="line">s = <span class="built_in">append</span>(s,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;len=%d, cap=%d&quot;</span>,<span class="built_in">len</span>(s),<span class="built_in">cap</span>(s))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>切片</th><th>len</th><th>cap</th></tr></thead><tbody><tr><td>s</td><td>2</td><td>2</td></tr></tbody></table><p>现在我们将容量翻倍得到4，但是现在需求的长度是5，所以翻倍不能满足要求，最后newcap直接更新为5。</p><p>这个数组要40个字节的空间，传入参数size为40，然后我们计算通过roundupsize得到最终结果</p><table><thead><tr><th>处理过程</th><th>结果</th></tr></thead><tbody><tr><td>divRoundUp(size, smallSizeDiv)</td><td>40 / 8 = 5</td></tr><tr><td>size_to_class8[5]</td><td>5</td></tr><tr><td>class_to_size[5]</td><td>48</td></tr></tbody></table><p>我们可以分析出最后得到的cap空间大小是48字节，也就是cap为6，所以扩容的结果最后为6</p><p>我们得到整个扩容过程</p><ol><li>看看翻倍原容量能否满足需求<ol><li>不能，则先得到初步容量为需求的长度</li><li>能<ol><li>原容量小于256，初步容量为原容量翻倍</li><li>原容量大于等于256，按照公式扩容直至满足需求</li></ol></li></ol></li><li>最后将容量roundupsize</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>xv6中创建syscall</title>
      <link href="/2023/09/08/xv6%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E2%80%94%E2%80%94bootloader/"/>
      <url>/2023/09/08/xv6%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E2%80%94%E2%80%94bootloader/</url>
      
        <content type="html"><![CDATA[<p>xv6的启动过程大致可以分为BIOS-&gt;bootloader-&gt;kernel，三个环节，本小节主要讲述bootloader的相关内容。</p><p>BIOS的作用是将磁盘的第一个扇区的内容移入到地址为0x7c00的位置，然后把控制权交给这份内容。这一份内容就是bootloader。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%97%A0%E6%A0%87%E9%A2%98-2023-05-02-1258.png" alt="无标题-2023-05-02-1258" /></p><p>bootloader由bootasm.S和bootmain.c组成，所以接下来主要分析这两个文件的代码。</p><h1 id="bootasms"><a class="markdownIt-Anchor" href="#bootasms"></a> bootasm.S</h1><p>代码不算长，我们先贴上完整的代码：</p><p><code>bootasm.S</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;asm.h&quot;</span><br><span class="line">#include &quot;memlayout.h&quot;</span><br><span class="line">#include &quot;mmu.h&quot;</span><br><span class="line"></span><br><span class="line"># Start the first CPU: switch to 32-bit protected mode, jump into C.</span><br><span class="line"># The BIOS loads this code from the first sector of the hard disk into</span><br><span class="line"># memory at physical address 0x7c00 and starts executing in real mode</span><br><span class="line"># with %cs=0 %ip=7c00.</span><br><span class="line"></span><br><span class="line">.code16                       # Assemble for 16-bit mode</span><br><span class="line">.globl start</span><br><span class="line">start:</span><br><span class="line">  cli                         # BIOS enabled interrupts; disable</span><br><span class="line"></span><br><span class="line">  # Zero data segment registers DS, ES, and SS.</span><br><span class="line">  xorw    %ax,%ax             # Set %ax to zero</span><br><span class="line">  movw    %ax,%ds             # -&gt; Data Segment</span><br><span class="line">  movw    %ax,%es             # -&gt; Extra Segment</span><br><span class="line">  movw    %ax,%ss             # -&gt; Stack Segment</span><br><span class="line"></span><br><span class="line">  # Physical address line A20 is tied to zero so that the first PCs </span><br><span class="line">  # with 2 MB would run software that assumed 1 MB.  Undo that.</span><br><span class="line">seta20.1:</span><br><span class="line">  inb     $0x64,%al               # Wait for not busy</span><br><span class="line">  testb   $0x2,%al</span><br><span class="line">  jnz     seta20.1</span><br><span class="line"></span><br><span class="line">  movb    $0xd1,%al               # 0xd1 -&gt; port 0x64</span><br><span class="line">  outb    %al,$0x64</span><br><span class="line"></span><br><span class="line">seta20.2:</span><br><span class="line">  inb     $0x64,%al               # Wait for not busy</span><br><span class="line">  testb   $0x2,%al</span><br><span class="line">  jnz     seta20.2</span><br><span class="line"></span><br><span class="line">  movb    $0xdf,%al               # 0xdf -&gt; port 0x60</span><br><span class="line">  outb    %al,$0x60</span><br><span class="line"></span><br><span class="line">  # Switch from real to protected mode.  Use a bootstrap GDT that makes</span><br><span class="line">  # virtual addresses map directly to physical addresses so that the</span><br><span class="line">  # effective memory map doesn&#x27;t change during the transition.</span><br><span class="line">  lgdt    gdtdesc</span><br><span class="line">  movl    %cr0, %eax</span><br><span class="line">  orl     $CR0_PE, %eax</span><br><span class="line">  movl    %eax, %cr0</span><br><span class="line"></span><br><span class="line">//PAGEBREAK!</span><br><span class="line">  # Complete the transition to 32-bit protected mode by using a long jmp</span><br><span class="line">  # to reload %cs and %eip.  The segment descriptors are set up with no</span><br><span class="line">  # translation, so that the mapping is still the identity mapping.</span><br><span class="line">  ljmp    $(SEG_KCODE&lt;&lt;3), $start32</span><br><span class="line"></span><br><span class="line">.code32  # Tell assembler to generate 32-bit code now.</span><br><span class="line">start32:</span><br><span class="line">  # Set up the protected-mode data segment registers</span><br><span class="line">  movw    $(SEG_KDATA&lt;&lt;3), %ax    # Our data segment selector</span><br><span class="line">  movw    %ax, %ds                # -&gt; DS: Data Segment</span><br><span class="line">  movw    %ax, %es                # -&gt; ES: Extra Segment</span><br><span class="line">  movw    %ax, %ss                # -&gt; SS: Stack Segment</span><br><span class="line">  movw    $0, %ax                 # Zero segments not ready for use</span><br><span class="line">  movw    %ax, %fs                # -&gt; FS</span><br><span class="line">  movw    %ax, %gs                # -&gt; GS</span><br><span class="line"></span><br><span class="line">  # Set up the stack pointer and call into C.</span><br><span class="line">  movl    $start, %esp</span><br><span class="line">  call    bootmain</span><br><span class="line"></span><br><span class="line">  # If bootmain returns (it shouldn&#x27;t), trigger a Bochs</span><br><span class="line">  # breakpoint if running under Bochs, then loop.</span><br><span class="line">  movw    $0x8a00, %ax            # 0x8a00 -&gt; port 0x8a00</span><br><span class="line">  movw    %ax, %dx</span><br><span class="line">  outw    %ax, %dx</span><br><span class="line">  movw    $0x8ae0, %ax            # 0x8ae0 -&gt; port 0x8a00</span><br><span class="line">  outw    %ax, %dx</span><br><span class="line">spin:</span><br><span class="line">  jmp     spin</span><br><span class="line"></span><br><span class="line"># Bootstrap GDT</span><br><span class="line">.p2align 2                                # force 4 byte alignment</span><br><span class="line">gdt:</span><br><span class="line">  SEG_NULLASM                             # null seg</span><br><span class="line">  SEG_ASM(STA_X|STA_R, 0x0, 0xffffffff)   # code seg</span><br><span class="line">  SEG_ASM(STA_W, 0x0, 0xffffffff)         # data seg</span><br><span class="line"></span><br><span class="line">gdtdesc:</span><br><span class="line">  .word   (gdtdesc - gdt - 1)             # sizeof(gdt) - 1</span><br><span class="line">  .long   gdt                             # address gdt</span><br></pre></td></tr></table></figure><p>接下来我们大致分析一下：</p><ol><li><p>先是关闭了中断，定义了下面的函数名（start），然后做了一些初始化工作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.code16                       # Assemble for 16-bit mode</span><br><span class="line">.globl start</span><br><span class="line">start:</span><br><span class="line">  cli                         # BIOS enabled interrupts; disable</span><br><span class="line"></span><br><span class="line">  # Zero data segment registers DS, ES, and SS.</span><br><span class="line">  xorw    %ax,%ax             # Set %ax to zero</span><br><span class="line">  movw    %ax,%ds             # -&gt; Data Segment</span><br><span class="line">  movw    %ax,%es             # -&gt; Extra Segment</span><br><span class="line">  movw    %ax,%ss             # -&gt; Stack Segment</span><br></pre></td></tr></table></figure></li><li><p>接下来是和IO端口做一些交互，因为一些历史原因，此时的CPU只能访问1M的地址空间，我们需要通过下面的操作打开A20地址线，才可以访问高于1M的物理空间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">seta20.1:</span><br><span class="line">  inb     $0x64,%al               # Wait for not busy</span><br><span class="line">  testb   $0x2,%al</span><br><span class="line">  jnz     seta20.1</span><br><span class="line"></span><br><span class="line">  movb    $0xd1,%al               # 0xd1 -&gt; port 0x64</span><br><span class="line">  outb    %al,$0x64</span><br><span class="line"></span><br><span class="line">seta20.2:</span><br><span class="line">  inb     $0x64,%al               # Wait for not busy</span><br><span class="line">  testb   $0x2,%al</span><br><span class="line">  jnz     seta20.2</span><br><span class="line"></span><br><span class="line">  movb    $0xdf,%al               # 0xdf -&gt; port 0x60</span><br><span class="line">  outb    %al,$0x60</span><br></pre></td></tr></table></figure></li><li><p>下一步载入<code>GDT（全局表示符表）</code>并且开启保护模式，我简单介绍一下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230502211630082.png" alt="image-20230502211630082" /></p></li></ol><p>这是<code>CR0</code>寄存器，<code>第0位为1</code>是表示开启保护模式，下面这三行汇编将最低为置1，开始保护模式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">movl    %cr0, %eax</span><br><span class="line">orl     $CR0_PE, %eax</span><br><span class="line">movl    %eax, %cr0</span><br></pre></td></tr></table></figure><p>其中<code>$CR0_PE</code>在<code>mmu.h</code>中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> CR0_PE          0x00000001      <span class="comment">// Protection Enable</span></span></span><br></pre></td></tr></table></figure><p>关于保护模式的具体细节请自己了解，下面继续分析GDT。</p><p>可以看到下面一行汇编将GDT的信息装载到GDTR这个寄存器中，这个寄存器低16位存储段长，高32位存储GDT的起始地址。我们结合下面的gdtdesc，发现这一段内容首先定义了一个word，用两个字节表示段长，后面又定义了一个long，保存GDT的地址，即符号gdt所在的位置。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230502212421240.png" alt="image-20230502212421240" /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gdt:</span><br><span class="line">  SEG_NULLASM                             # null seg</span><br><span class="line">  SEG_ASM(STA_X|STA_R, 0x0, 0xffffffff)   # code seg</span><br><span class="line">  SEG_ASM(STA_W, 0x0, 0xffffffff)         # data seg</span><br><span class="line"></span><br><span class="line">gdtdesc:</span><br><span class="line">  .word   (gdtdesc - gdt - 1)             # sizeof(gdt) - 1</span><br><span class="line">  .long   gdt                             # address gdt</span><br></pre></td></tr></table></figure><p>我们再继续看SEG_NULLASM和下面的内容，从注释可以发现这一段内容定义了三个段描述符，第一个是空段，后面分别是代码段和数据段。上面用到的宏定义在<code>asm.h</code>中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#define SEG_NULLASM                                             \</span><br><span class="line">        .word 0, 0;                                             \</span><br><span class="line">        .byte 0, 0, 0, 0</span><br><span class="line"></span><br><span class="line">// The 0xC0 means the limit is in 4096-byte units</span><br><span class="line">// and (for executable segments) 32-bit mode.</span><br><span class="line">#define SEG_ASM(type,base,lim)                                  \</span><br><span class="line">        .word (((lim) &gt;&gt; 12) &amp; 0xffff), ((base) &amp; 0xffff);      \</span><br><span class="line">        .byte (((base) &gt;&gt; 16) &amp; 0xff), (0x90 | (type)),         \</span><br><span class="line">                (0xC0 | (((lim) &gt;&gt; 28) &amp; 0xf)), (((base) &gt;&gt; 24) &amp; 0xff)</span><br><span class="line">                </span><br><span class="line">#define STA_X     0x8       // Executable segment</span><br><span class="line">#define STA_W     0x2       // Writeable (non-executable segments)</span><br><span class="line">#define STA_R     0x2       // Readable (executable segments)</span><br></pre></td></tr></table></figure><p>在分析之前，我们先看看段描述符的结构：</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230502213642606.png" alt="image-20230502213642606" /></p><p>SEG_NULL很简单，定义了一个空段，内容都是0，我们再来看看SEG_ASM。首先后面跟着两个word的内容，可以发现分别对应着段描述符的低32位，分别是段限长的前16位（lim的高20位为段限长）和段基址的前16位。后面则分开定义了4个字节的内容，第一个字节是段基址的第二部分，第二个字节指定了type，并将P和S赋值为1，第三个字节指定段限长的高4位的同时将G和X赋值为1，这将启动大页模式，最后一个字节则指定剩余的段基址部分。</p><ol start="4"><li><p>下一步是一个跳转指令，也是完成了16位到32位的转换的一步，跳转指令的第一个部分指定段寄存器cs的值，第二个部分指定ip寄存器的值，其中<code>SEG_KCODE</code>定义在<code>mmu.h</code>，表示代码段,这里的值将作为GDT的索引，在使用时要将该值左移三位，因为段寄存器的低三位表示其它信息，后面的<code>start32</code>则是一个标号，在跳转指令下方。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// various segment selectors.</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SEG_KCODE 1  <span class="comment">// kernel code</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SEG_KDATA 2  <span class="comment">// kernel data+stack</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SEG_UCODE 3  <span class="comment">// user code</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SEG_UDATA 4  <span class="comment">// user data+stack</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SEG_TSS   5  <span class="comment">// this process&#x27;s task state</span></span></span><br></pre></td></tr></table></figure></li><li><p>接下来是在32位模式下设置各个段的值，其中<code>ds</code>，<code>es</code>，<code>ss</code>设置为数据段，<code>fs</code>和<code>gs</code>则设置为空段（它们的索引是0，在GDT中第0个段是空段），最后将栈基址寄存器<code>esp</code>设置为<code>start</code>，也就是bootasm.S装载的位置，即<code>0x7c00</code>，最后跳转到<code>bootmain.c</code>。</p></li></ol><p>到现在<code>bootasm.S</code>的部分就完成了，现在内存中的情况如下图所示：</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230503075033430.png" alt="image-20230503075033430" /></p><h1 id="bootmainc"><a class="markdownIt-Anchor" href="#bootmainc"></a> bootmain.c</h1><p>相较于bootasm.S，bootmain.c所做的事并没有那么多，说的简单一点就是一节事——将内核载入到内存中。内核文件是一个elf文件，载入内核实际上就是载入elf文件，所以这一部分内容要求对ELF格式的文件有一定的了解，下面是完整的代码和ELF文件格式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Boot loader.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Part of the boot block, along with bootasm.S, which calls bootmain().</span></span><br><span class="line"><span class="comment">// bootasm.S has put the processor into protected 32-bit mode.</span></span><br><span class="line"><span class="comment">// bootmain() loads an ELF kernel image from the disk starting at</span></span><br><span class="line"><span class="comment">// sector 1 and then jumps to the kernel entry routine.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;elf.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;x86.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;memlayout.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SECTSIZE  512</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">readseg</span><span class="params">(uchar*, uint, uint)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">bootmain</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">elfhdr</span> *<span class="title">elf</span>;</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">proghdr</span> *<span class="title">ph</span>, *<span class="title">eph</span>;</span></span><br><span class="line">  <span class="type">void</span> (*entry)(<span class="type">void</span>);</span><br><span class="line">  uchar* pa;</span><br><span class="line"></span><br><span class="line">  elf = (<span class="keyword">struct</span> elfhdr*)<span class="number">0x10000</span>;  <span class="comment">// scratch space</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Read 1st page off disk</span></span><br><span class="line">  readseg((uchar*)elf, <span class="number">4096</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Is this an ELF executable?</span></span><br><span class="line">  <span class="keyword">if</span>(elf-&gt;magic != ELF_MAGIC)</span><br><span class="line">    <span class="keyword">return</span>;  <span class="comment">// let bootasm.S handle error</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Load each program segment (ignores ph flags).</span></span><br><span class="line">  ph = (<span class="keyword">struct</span> proghdr*)((uchar*)elf + elf-&gt;phoff);</span><br><span class="line">  eph = ph + elf-&gt;phnum;</span><br><span class="line">  <span class="keyword">for</span>(; ph &lt; eph; ph++)&#123;</span><br><span class="line">    pa = (uchar*)ph-&gt;paddr;</span><br><span class="line">    readseg(pa, ph-&gt;filesz, ph-&gt;off);</span><br><span class="line">    <span class="keyword">if</span>(ph-&gt;memsz &gt; ph-&gt;filesz)</span><br><span class="line">      stosb(pa + ph-&gt;filesz, <span class="number">0</span>, ph-&gt;memsz - ph-&gt;filesz);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Call the entry point from the ELF header.</span></span><br><span class="line">  <span class="comment">// Does not return!</span></span><br><span class="line">  entry = (<span class="type">void</span>(*)(<span class="type">void</span>))(elf-&gt;entry);</span><br><span class="line">  entry();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">waitdisk</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// Wait for disk ready.</span></span><br><span class="line">  <span class="keyword">while</span>((inb(<span class="number">0x1F7</span>) &amp; <span class="number">0xC0</span>) != <span class="number">0x40</span>)</span><br><span class="line">    ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Read a single sector at offset into dst.</span></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">readsect</span><span class="params">(<span class="type">void</span> *dst, uint offset)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// Issue command.</span></span><br><span class="line">  waitdisk();</span><br><span class="line">  outb(<span class="number">0x1F2</span>, <span class="number">1</span>);   <span class="comment">// count = 1</span></span><br><span class="line">  outb(<span class="number">0x1F3</span>, offset);</span><br><span class="line">  outb(<span class="number">0x1F4</span>, offset &gt;&gt; <span class="number">8</span>);</span><br><span class="line">  outb(<span class="number">0x1F5</span>, offset &gt;&gt; <span class="number">16</span>);</span><br><span class="line">  outb(<span class="number">0x1F6</span>, (offset &gt;&gt; <span class="number">24</span>) | <span class="number">0xE0</span>);</span><br><span class="line">  outb(<span class="number">0x1F7</span>, <span class="number">0x20</span>);  <span class="comment">// cmd 0x20 - read sectors</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Read data.</span></span><br><span class="line">  waitdisk();</span><br><span class="line">  insl(<span class="number">0x1F0</span>, dst, SECTSIZE/<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Read &#x27;count&#x27; bytes at &#x27;offset&#x27; from kernel into physical address &#x27;pa&#x27;.</span></span><br><span class="line"><span class="comment">// Might copy more than asked.</span></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">readseg</span><span class="params">(uchar* pa, uint count, uint offset)</span></span><br><span class="line">&#123;</span><br><span class="line">  uchar* epa;</span><br><span class="line"></span><br><span class="line">  epa = pa + count;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Round down to sector boundary.</span></span><br><span class="line">  pa -= offset % SECTSIZE;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Translate from bytes to sectors; kernel starts at sector 1.</span></span><br><span class="line">  offset = (offset / SECTSIZE) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If this is too slow, we could read lots of sectors at a time.</span></span><br><span class="line">  <span class="comment">// We&#x27;d write more to memory than asked, but it doesn&#x27;t matter --</span></span><br><span class="line">  <span class="comment">// we load in increasing order.</span></span><br><span class="line">  <span class="keyword">for</span>(; pa &lt; epa; pa += SECTSIZE, offset++)</span><br><span class="line">    readsect(pa, offset);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230503155720201.png" alt="image-20230503155720201" /></p><p>下面就主要介绍bootmain这个函数。</p><ol><li>先读入除了第一个扇区以外的前八个扇区。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readseg((uchar*)elf, <span class="number">4096</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li>然后检查文件是否是elf格式。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(elf-&gt;magic != ELF_MAGIC)</span><br><span class="line">  <span class="keyword">return</span>;  <span class="comment">// let bootasm.S handle error</span></span><br></pre></td></tr></table></figure><ol start="3"><li>然后找到程序头的位置，并根据程序头载入全部的段。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ph = (<span class="keyword">struct</span> proghdr*)((uchar*)elf + elf-&gt;phoff);</span><br><span class="line">eph = ph + elf-&gt;phnum;</span><br><span class="line"><span class="keyword">for</span>(; ph &lt; eph; ph++)&#123;</span><br><span class="line">  pa = (uchar*)ph-&gt;paddr;</span><br><span class="line">  readseg(pa, ph-&gt;filesz, ph-&gt;off);</span><br><span class="line">  <span class="keyword">if</span>(ph-&gt;memsz &gt; ph-&gt;filesz)</span><br><span class="line">    stosb(pa + ph-&gt;filesz, <span class="number">0</span>, ph-&gt;memsz - ph-&gt;filesz);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>最后找到入口函数，执行入口函数，自此开始，控制权交给内核。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">entry = (<span class="type">void</span>(*)(<span class="type">void</span>))(elf-&gt;entry);</span><br><span class="line">entry();</span><br></pre></td></tr></table></figure><p>bootloader的工作到这里就完成了，接下来就是kernel的天下了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>xv6系统启动——bootloader</title>
      <link href="/2023/09/08/xv6%E4%B8%AD%E5%88%9B%E5%BB%BAsyscall/"/>
      <url>/2023/09/08/xv6%E4%B8%AD%E5%88%9B%E5%BB%BAsyscall/</url>
      
        <content type="html"><![CDATA[<p>我们以在xv6中添加一个date系统调用为例，介绍在xv6中添加系统调用的方法和原理。</p><h1 id="date-syscall介绍"><a class="markdownIt-Anchor" href="#date-syscall介绍"></a> date syscall介绍</h1><p>date系统调用可以获取系统当前的UTC时间。</p><p>在我们完成date系统调用后，我们利用这个系统调用做一个小小的工具，可以打印当前的系统时间，工具代码如下：</p><p><code>date.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;date.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span></span><br><span class="line"><span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">rtcdate</span> <span class="title">r</span>;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (date(&amp;r)) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="number">2</span>, <span class="string">&quot;date failed\n&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// your code to print the time in any format you like...</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变量<code>r</code>是我们获取到的时间，我们可以通过r打印我们想要的时间格式，结构体r的内容如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">rtcdate</span> &#123;</span></span><br><span class="line">  uint second;</span><br><span class="line">  uint minute;</span><br><span class="line">  uint hour;</span><br><span class="line">  uint day;</span><br><span class="line">  uint month;</span><br><span class="line">  uint year;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="添加系统调用"><a class="markdownIt-Anchor" href="#添加系统调用"></a> 添加系统调用</h1><p>首先要注意的是，我们要添加一个系统调用，我们需要在好多地方添加对应的代码，我们很容易遗忘。因此，我们可以借鉴xv6中已经写好的系统调用，<code>uptime</code>系统调用是一个很好的例子。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">grep -n <span class="built_in">uptime</span> *.[hcS]</span></span><br><span class="line">syscall.c:105:extern int sys_uptime(void);</span><br><span class="line">syscall.c:121:[SYS_uptime]  sys_uptime,</span><br><span class="line">syscall.h:15:#define SYS_uptime 14</span><br><span class="line">sysproc.c:83:sys_uptime(void)</span><br><span class="line">user.h:25:int uptime(void);</span><br><span class="line">usys.S:31:SYSCALL(uptime)</span><br></pre></td></tr></table></figure><p>我们不难发现我们要在六个地方添加对应的代码，那么加下来的事情就是照葫芦画瓢即可。</p><ol><li><pre class="highlight"><code class="c"><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sys_uptime</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sys_date</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;&lt;!--code￼<span class="hljs-number">3</span>--&gt;</code></pre></li><li><pre class="highlight"><code class="c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> SYS_close  21</span><span class="hljs-meta">#<span class="hljs-keyword">define</span> SYS_date   22</span>&lt;!--code￼<span class="hljs-number">4</span>--&gt;</code></pre></li><li><pre class="highlight"><code class="">SYSCALL(uptime)SYSCALL(date)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">第四部分的内容是系统调用的具体实现，我们在这里需要借助于系统`lapic.c`中给我们提供的`cmostime`函数，这个函数接受一个 `struct rtcdate`指针，将时间赋值到其中，此外，参数我们也需要借助于xv6提供的argptr来获取。</span><br><span class="line"></span><br><span class="line">```c</span><br><span class="line">int</span><br><span class="line">date(void)</span><br><span class="line">&#123;</span><br><span class="line">    struct rtcdate *r;</span><br><span class="line">    if(argptr(0, (void*)&amp;r, sizeof(struct rtcdate)) &lt; 0)</span><br><span class="line">        return -1;</span><br><span class="line">    cmostime(r);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li></ol><h1 id="执行过程分析"><a class="markdownIt-Anchor" href="#执行过程分析"></a> 执行过程分析</h1><ol><li><p>我们在使用这个系统调用在用户态的形式，这个函数被定义在<code>user.h</code>中。只需要引入<code>user.h</code>我们就可以使用系统调用。</p></li><li><p>这个系统调用使用汇编实现的，当然，这个实现比较简单，我们在传入参数之后，我们在<code>%eax</code>寄存器中传入我们需要使用的系统调用号，然后使用<code>int</code>指令即可。这个实现在<code>usys.S</code>中。</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> SYSCALL(name) \</span></span><br><span class="line"><span class="meta">  .globl name; \</span></span><br><span class="line"><span class="meta">  name: \</span></span><br><span class="line"><span class="meta">    movl $SYS_ ## name, %eax; \</span></span><br><span class="line"><span class="meta">    int $T_SYSCALL; \</span></span><br><span class="line"><span class="meta">    ret</span></span><br><span class="line"></span><br><span class="line">SYSCALL(fork)</span><br><span class="line">SYSCALL(<span class="built_in">exit</span>)</span><br><span class="line">SYSCALL(wait)</span><br><span class="line">SYSCALL(pipe)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><ol start="3"><li>关于<code>movl $SYS_ ## name, %eax;</code>在C语言中，两个<code>#</code>表示字符串拼接，以fork为例，这里的指令实际上是<code>movl $SYS_ fork, %eax;</code>，还记得我说<code>%eax</code>要传入系统调用号吗，那么<code>SYS_fork</code>是怎么转变成正确的系统调用号的呢，在<code>syscall.h</code>中：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> SYS_fork    1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SYS_exit    2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SYS_wait    3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SYS_pipe    4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SYS_read    5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SYS_kill    6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SYS_exec    7</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SYS_fstat   8</span></span><br></pre></td></tr></table></figure><p>这样，在预编译后，指令就是（fork为例），<code>movl 1,%eax</code>。</p><ol start="4"><li>然后，<code>int</code>指令会陷入内核，具体的细节我们暂不关系，接下来，我们会执行<code>syscall.c</code>中的<code>syscall</code>函数</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">syscall</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> num;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">proc</span> *<span class="title">curproc</span> =</span> myproc();</span><br><span class="line"></span><br><span class="line">  num = curproc-&gt;tf-&gt;eax;</span><br><span class="line">  <span class="keyword">if</span>(num &gt; <span class="number">0</span> &amp;&amp; num &lt; NELEM(syscalls) &amp;&amp; syscalls[num]) &#123;</span><br><span class="line">    curproc-&gt;tf-&gt;eax = syscalls[num]();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    cprintf(<span class="string">&quot;%d %s: unknown sys call %d\n&quot;</span>,</span><br><span class="line">            curproc-&gt;pid, curproc-&gt;name, num);</span><br><span class="line">    curproc-&gt;tf-&gt;eax = <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到核心函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curproc-&gt;tf-&gt;eax = syscalls[num]();</span><br></pre></td></tr></table></figure><p>其中num是系统调用号，那么syscalls是什么呢，也是在这个文件中，内容如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="title function_">int</span> <span class="params">(*syscalls[])</span><span class="params">(<span class="type">void</span>)</span> = &#123;</span><br><span class="line">[SYS_fork]    sys_fork,</span><br><span class="line">[SYS_exit]    sys_exit,</span><br><span class="line">...</span><br><span class="line">[SYS_write]   sys_write,</span><br><span class="line">[SYS_mknod]   sys_mknod,</span><br><span class="line">[SYS_unlink]  sys_unlink,</span><br><span class="line">[SYS_link]    sys_link,</span><br><span class="line">[SYS_mkdir]   sys_mkdir,</span><br><span class="line">[SYS_close]   sys_close,</span><br><span class="line">[SYS_date]    sys_date,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>是不是巧妙地利用了C语言的宏。</p><ol start="5"><li>最后，（还是以fork为例），我们会发现系统会执行<code>sys_fork</code>函数，这个函数被定义在<code>sysproc.c</code>中（事实上可以被定义在任何位置）</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span></span><br><span class="line"><span class="title function_">sys_fork</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> fork();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现有意思的一点，系统调用调用到最后竟然还是调用<code>fork</code>？！这个fork已经和前面的fork完全不同了，现在的fork是一个内核中的函数，被定义在<code>proc.c</code>中，前面的过程事实上都可以理解为对内核函数的包装，通过上面的一系列过程，我们最终实现了在用户态<code>&quot;调用&quot;</code>内核中函数。</p><blockquote><p>可以发现date也是同理，date系统调用最终是调用了<code>cmostime</code>函数。不过看起来fork系统调用由于用户态和内核态有着相同的名字看起来更加有趣。</p></blockquote><h1 id="将date工具加入到xv6中"><a class="markdownIt-Anchor" href="#将date工具加入到xv6中"></a> 将date工具加入到xv6中</h1><p>我们现在已经完成了我们的系统调用，最后我们只需要<code>make</code>编译即可，<code>make</code>会帮助我们把<code>date.c</code>编译成<code>_date</code>二进制文件。最后，在编译之前，我们需要把<code>_date</code>加入到<code>Makefile</code>的<code>UPROGS</code>中，这样命令才能生效。</p><p>到这里我们就成功为xv6添加了一个系统调用，用利用这个系统调用制作了一个打印的时间的工具。</p><blockquote><p>tips：分清楚系统调用和shell 命令</p><p><code>date.c和_date</code>是我们利用date系统调用制作的，我们要注意我们在xv6 shell中使用的date命令是<code>_date</code>二进制文件调用的结果，而不是直接使用系统调用</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">UPROGS=\</span><br><span class="line">_cat\</span><br><span class="line">_echo\</span><br><span class="line">_forktest\</span><br><span class="line">_grep\</span><br><span class="line">_init\</span><br><span class="line">_kill\</span><br><span class="line">_ln\</span><br><span class="line">_ls\</span><br><span class="line">_mkdir\</span><br><span class="line">_rm\</span><br><span class="line">_sh\</span><br><span class="line">_stressfs\</span><br><span class="line">_usertests\</span><br><span class="line">_wc\</span><br><span class="line">_zombie\</span><br><span class="line">_date\</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make qemu</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ssh的原理</title>
      <link href="/2023/09/08/ssh%E7%9A%84%E5%8E%9F%E7%90%86/"/>
      <url>/2023/09/08/ssh%E7%9A%84%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>SSH是一种网络协议，用于计算机间的加密登录。</p><h1 id="ssh保证安全的原理"><a class="markdownIt-Anchor" href="#ssh保证安全的原理"></a> ssh保证安全的原理</h1><p>SSH之所以能够保证安全，原因在于它采用了公钥加密。</p><p>整个过程是这样的：</p><ol><li>远程主机收到用户的登录请求，把自己的公钥发给用户。</li><li>用户使用这个公钥，将登录密码加密后，发送回来。</li><li>远程主机用自己的私钥，解密登录密码，如果密码正确，就同意用户登录。</li></ol><p>这个过程本身是安全的，但是实施的时候存在一个风险：如果有人截获了登录请求，然后冒充远程主机，将伪造的公钥发给用户，那么用户很难辨别真伪。因为不像https协议，SSH协议的公钥是没有证书中心（CA）公证的，也就是说，都是自己签发的。</p><p>可以设想，如果攻击者插在用户与远程主机之间（比如在公共的wifi区域），用伪造的公钥，获取用户的登录密码。再用这个密码登录远程主机，那么SSH的安全机制就荡然无存了。这种风险就是著名的&quot;中间人攻击&quot;（Man-in-the-middle attack）。</p><p>SSH协议是如何应对的呢？</p><p>如果你是第一次登录对方主机，系统会出现下面的提示：</p><blockquote><p>$ ssh user@host</p><p>The authenticity of host ‘host (12.18.429.21)’ can’t be established.</p><p>RSA key fingerprint is 98:2e:d7:e0🇩🇪9f:ac:67:28:c2:42:2d:37:16:58:4d.</p><p>Are you sure you want to continue connecting (yes/no)?</p></blockquote><p>这段话的意思是，无法确认host主机的真实性，只知道它的公钥指纹，问你还想继续连接吗？</p><p>所谓&quot;公钥指纹&quot;，是指公钥长度较长（这里采用RSA算法，长达1024位），很难比对，所以对其进行MD5计算，将它变成一个128位的指纹。上例中是98:2e:d7:e0🇩🇪9f:ac:67:28:c2:42:2d:37:16:58:4d，再进行比较，就容易多了。</p><p>很自然的一个问题就是，用户怎么知道远程主机的公钥指纹应该是多少？回答是没有好办法，远程主机必须在自己的网站上贴出公钥指纹，以便用户自行核对。</p><p>假定经过风险衡量以后，用户决定接受这个远程主机的公钥。</p><blockquote><p>Are you sure you want to continue connecting (yes/no)? yes</p></blockquote><p>系统会出现一句提示，表示host主机已经得到认可。</p><blockquote><p>Warning: Permanently added ‘host,12.18.429.21’ (RSA) to the list of known hosts.</p></blockquote><p>然后，会要求输入密码。</p><blockquote><p>Password: (enter password)</p></blockquote><p>如果密码正确，就可以登录了。</p><p>当远程主机的公钥被接受以后，它就会被保存在文件$HOME/.ssh/known_hosts之中。下次再连接这台主机，系统就会认出它的公钥已经保存在本地了，从而跳过警告部分，直接提示输入密码。</p><p>每个SSH用户都有自己的known_hosts文件，此外系统也有一个这样的文件，通常是/etc/ssh/ssh_known_hosts，保存一些对所有用户都可信赖的远程主机的公钥。</p><h1 id="ssh免密登录"><a class="markdownIt-Anchor" href="#ssh免密登录"></a> ssh免密登录</h1><p>使用密码登录，每次都必须输入密码，非常麻烦。好在SSH还提供了公钥登录，可以省去输入密码的步骤。</p><p>所谓&quot;公钥登录&quot;，原理很简单，步骤如下</p><ol><li>用户将自己的公钥储存在远程主机上</li><li>登录的时候，远程主机会向用户发送一段随机字符串</li><li>用户用自己的私钥加密后，再发回来</li><li>远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mapreduce简介</title>
      <link href="/2023/09/08/mapreduce%E7%AE%80%E4%BB%8B/"/>
      <url>/2023/09/08/mapreduce%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<p>MapReduce是一个编程模型，用于处理和生成大数据。用户通过编写Map函数处理输入键值对生成中间键值对，通过编写Reduce函数来合并所有的中间键值对并生成结果。在我们的日常生活中，大部分的任务都可以被抽象成一个MapReduce模型，并通过这个模型解决问题。</p><h1 id="mapreduce介绍"><a class="markdownIt-Anchor" href="#mapreduce介绍"></a> MapReduce介绍</h1><p>我们所遇到的大多数计算问题都很直观，但是当计算的数量十分庞大时，我们往往要借助于成百上千的机器共同计算来加速这个过程，但在从一个机器拓展到一个集群时我们会遇到比原来多得多的问题。比如我们该如何并行化计算，如何把数据分发到机器中，如何处理机器宕机带来的问题，毫无疑问，这是一个复杂的问题。</p><p>分布式的计算带来了各种各样复杂的问题，但MapReduce的出现给解决分布式计算带来了一个足够简洁的解决方案。</p><h2 id="编程模型"><a class="markdownIt-Anchor" href="#编程模型"></a> 编程模型</h2><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Untitled%20(1).png" alt="Untitled (1)" />整个计算过程接受一组输入键值对，并输出一组键值对。我们需要为这个计算过程提供两个函数，<code>Map</code>和<code>Reduce</code>。</p><p>Map函数接受一组键值对输入并生产一组中间键值对，然后按照一定的标准把这些键值对分组并传输给Reduce函数。</p><p>Reduce函数接受中间键值对作为输入，合并这些数据并产生一组键值对作为最终输出。</p><h2 id="一个简单的案例"><a class="markdownIt-Anchor" href="#一个简单的案例"></a> 一个简单的案例</h2><p>下面是一个MapReduce实现的伪代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">map(String key, String value):</span><br><span class="line">    // key: document name</span><br><span class="line">    // value: document contents</span><br><span class="line">    for each word w in value:</span><br><span class="line">EmitIntermediate(w, &quot;1&quot;);</span><br><span class="line"></span><br><span class="line">reduce(String key, Iterator values):</span><br><span class="line">    // key: a word</span><br><span class="line">    // values: a list of counts</span><br><span class="line">    int result = 0;</span><br><span class="line">    for each v in values:</span><br><span class="line">    result += ParseInt(v);</span><br><span class="line">    Emit(AsString(result));</span><br></pre></td></tr></table></figure><p>map函数获取文章中的每个单词，并简单的给每个key赋值为1，然后把这些结果提交给reduce函数，reduce函数合并相同的key，输出最终结果。</p><h2 id="常见应用场景"><a class="markdownIt-Anchor" href="#常见应用场景"></a> 常见应用场景</h2><ol><li><p>Distributed Grep：在大规模文本数据中查找指定的字符串，并输出匹配的行。Map 阶段将每个输入文件分割为多个块，Reduce 阶段将匹配的行进行汇总。</p></li><li><p>Count of URL Access Frequency：统计 Web 日志中每个 URL 的访问频率，用于分析用户行为和网站性能。Map 阶段将每个日志文件解析为键值对，其中键为 URL，值为 1，Reduce 阶段将相同 URL 的值相加并输出。</p></li><li><p>Reverse Web-Link Graph：将 Web 页面之间的链接关系转化为反向的页面到链接的关系，用于搜索引擎排名等应用。Map 阶段将每个页面解析为键值对，其中键为页面 URL，值为与该页面相连的 URL，Reduce 阶段将相同 URL 的值进行合并。</p></li><li><p>Term-Vector per Host：为每个主机计算其包含的文本数据中每个单词的频率向量，用于文本分类和信息检索。Map 阶段将每个文档解析为键值对，其中键为主机名，值为单词和出现次数的列表，Reduce 阶段将相同主机名的列表进行合并。</p></li><li><p>Inverted Index：为大规模文本数据建立倒排索引，用于支持全文搜索和相关性排序等应用。Map 阶段将每个文档解析为键值对，其中键为单词，值为文档 ID 和出现次数的列表，Reduce 阶段将相同单词的列表进行合并。</p></li><li><p>Distributed Sort：对大规模数据进行排序，用于数据清洗、数据分析等应用。Map 阶段将输入数据分割为多个块，并对每个块进行内部排序，Reduce 阶段将多个有序块进行归并排序。</p></li></ol><h1 id="mapreduce实现"><a class="markdownIt-Anchor" href="#mapreduce实现"></a> MapReduce实现</h1><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20230402194955138.png" alt="image-20230402194955138" /></p><h2 id="执行流程"><a class="markdownIt-Anchor" href="#执行流程"></a> 执行流程</h2><p>我们把输入分成M份的split，然后分配给worker执行map，在worker执行完毕后，我们整理worker的输出的中间键值对，根据Reduce分区的数量分为R份，然后再交给Reduce函数执行。</p><p>下面是具体的流程：</p><ol><li>首先我们把输入分成M份，每一份的大小通常在16~64M范围内，这由用户设置。</li><li>然后master节点分配未完成的任务给空闲的节点。</li><li>被分配到map任务的节点处理输出的键值对，并将中间键值对保存在本地缓存中。</li><li>然后执行map任务的节点会定期将缓存中的内容写到磁盘，并将这些内容分成R个区域，然后将它们的位置发送给master。</li><li>当reduce节点被通知这些文件的位置，它会通过RPC来读取文件的内容从map节点中，等reduce节点读取完所有需要的内容，它会对中间键值对进行排序。</li><li>然后reduce节点会迭代这些键值对，并将它们合并，最终生成一个结果文件。</li><li>最后当所有的任务完成，master节点会通知用户程序并返回。</li></ol><p>在成功的结束执行以后，我们会获得R份的输出文件，一般来说，我们不需要去合并这R份文件，因为它们往往是其它分布式计算的输入或者它们可以被其它的分布式应用处理。</p><h2 id="主节点数据结构"><a class="markdownIt-Anchor" href="#主节点数据结构"></a> 主节点数据结构</h2><p>Master节点需要维护一些数据结构以保证整个过程的正确执行，下面是部分数据结构：</p><ol><li>Job 完成状态：记录每个 map 任务和 reduce 任务的完成状态，状态包括未执行，正在处理和已完成。</li><li>资源分配表：记录每个 worker 节点的负载状况和可用资源，以便于进行任务调度和资源分配。</li><li>中间结果信息表：记录每个 map 任务产生的中间结果文件的位置和大小，以便于 reduce 任务能够访问和处理中间结果。</li></ol><h2 id="容错"><a class="markdownIt-Anchor" href="#容错"></a> 容错</h2><p>这里我们仅仅讨论Worker Failure的情况，对于Master节点的容错我们不予讨论。</p><p>首先，master节点会定时去ping工作节点，假如在一段预先设定好的时间内没有收到回复，master会认为该工作节点已经宕机，所有由该节点完成的map任务都会被设置为空闲状态，由该节点正在执行的map或reduce任务都会被设置为未完成，这些被重新设置为未完成的任务会被重新执行。</p><p>正在执行的任务需要重新执行很容易理解，这里解释一下为什么所有被该节点执行完成的map节点都需要重新执行。这是因为在MapReduce模型中，map函数执行的结果会被放在本机的本地磁盘中，而reduce函数的执行结果会被放置在远程文件系统中，如何执行map的机器宕机，那么执行的结果将无法被访问，所以必须重新执行，而reduce函数的执行结果由于保存在远程，所以无需重新执行。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言的内存模型</title>
      <link href="/2023/09/08/C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/"/>
      <url>/2023/09/08/C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<ul><li>程序为什么要被编译器编译之后才可以运行</li><li>编译器在把C语言转换成机器码的过程中做了什么</li><li>最后编译出来的可执行文件里面是什么，除了机器码还有什么，是如何组织的</li><li>#include&lt;stdio.h&gt;是什么意思，这意味着什么，C语言库是如何实现的</li><li>不同编译器和不同硬件平台以及不同的操作系统，最终编译出来的结果相同吗，为什么</li><li>HelloWorld是如何运行起来的，操作系统如何装载它，它从哪开始，从哪结束</li><li>如果没有操作系统我们如何实现HelloWorld，我们需要什么，如何实现</li><li>printf是怎么实现的，它为什么可以有不定数量的参数，为什么最后可以在终端上输出字符串</li><li>HelloWorld程序运行时在内存中是怎么样的</li></ul><h1 id="c语言的编译过程"><a class="markdownIt-Anchor" href="#c语言的编译过程"></a> C语言的编译过程</h1><p>复习大一</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/20180415062914966.png" alt="" /></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>https简述</title>
      <link href="/2023/09/08/https%E7%AE%80%E8%BF%B0/"/>
      <url>/2023/09/08/https%E7%AE%80%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<p>在了解https之前，我们先来了解一下非对称加密。</p><h1 id="非对称加密的数学原理"><a class="markdownIt-Anchor" href="#非对称加密的数学原理"></a> 非对称加密的数学原理</h1><p>非对称加密，就是加密和解密用到的不是一个密钥，一般来说，我们用公钥加密，私钥解密。</p><p>下面我们来介绍非对称加密的数学原理，我们来举一个简单的例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 ^ 2 mod 7 = 25 mod 7 = x</span><br></pre></td></tr></table></figure><p>易知x = 4，然后，我们将x的位置切换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 ^ x mod 7 = 4</span><br></pre></td></tr></table></figure><p>我们通过枚举，似乎也可以得到答案，x  = 2，但是如何模数字变得很大呢？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 ^ x mod 56374677648 = 4</span><br></pre></td></tr></table></figure><p>此时的计算量会变得非常巨大，即使是计算机也要花费数年的时间才能计算得出，我们可以认为这是无法计算的。</p><p>上面的计算我们可以认为就是将5（原文）加密成了4（密文），我们在已知x的情况下，很容易就可以加密，但是反之，我们在仅知道5（原文）和4（密文）的情况下，我们很难推出x的值，我们认为这是一个不可逆的过程。</p><p>那么，我们接下来把x分成p和q</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 ^ (p * q) mod 56374677648 = 4</span><br></pre></td></tr></table></figure><p>也就是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(原文) ^ (p * q) mod N = 密文</span><br></pre></td></tr></table></figure><p>接下来，最重要的一步是结合欧拉公式，可以得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(原文) ^ (p) mod N = 密文</span><br><span class="line">(密文) ^ (q) mod N = 原文</span><br></pre></td></tr></table></figure><p>p和q就是我们说的公钥和密钥，我们可以发现，公钥和密钥事实上是可以互换的，我们可以公钥加密，私钥解密，也可会反过来私钥加密，公钥解密。</p><p>与此同时，通过上面的说明，我们可以发现，拥有公钥的一方如果解密了密文，同时拥有原文和密文，也是几乎不可能解出私钥的。</p><h1 id="https的原理"><a class="markdownIt-Anchor" href="#https的原理"></a> https的原理</h1><p>​https即在http之上添加一个tls层，目前常用的tls版本为1.2版本。</p><h2 id="https加密过程"><a class="markdownIt-Anchor" href="#https加密过程"></a> https加密过程</h2><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/6401.png" alt="6401" /></p><p>加密过程分为两个阶段：</p><ol><li>第一阶段是TLS四次握手，双方交换一些信息，最后会得到一个<code>会话密钥</code></li><li>第二阶段是双方利用<code>会话密钥</code>通信</li></ol><p>我们先来看看TLS四次握手的过程</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/640.png" alt="640" /></p><p>第一次握手：</p><p>客户端发送给服务端：TLS版本+加密套件+<code>客户端随机数</code></p><p>第二次握手：</p><p>服务端发送给客户端：TLS版本+服务器证书+<code>服务端随机数</code></p><p>第三次握手：</p><ol><li>此时客户端再次生成一个随机数，叫做<code>pre_master_key</code>，从服务器证书中取出公钥，用公钥加密<code>pre_master_key</code>，发送给服务端</li><li>客户端此时已经拥有三个随机数，客户端随机数+服务端随机数+pre_master_key，客户端会把这三个随机数计算得到一个<code>会话密钥</code>，此时客户端通知服务端，后面会采用这个会话密钥进行通信</li><li>客户端会把迄今为止的所有通信内容生成一个摘要，用<code>会话密钥</code>加密发给服务器校验，客户端这边的握手流程到这里就结束了，因此也叫做<code>Finished报文</code></li></ol><p>第四次握手：</p><ol><li>服务端通过同样方法把三个随机数计算得到<code>会话密钥</code>，此时服务端告诉客户端，后面会用这个会话密钥进行通信。</li><li>服务端和客户端一样，将迄今为止的通信内容生成一个摘要，发给客户端校验，此时服务端的握手流程也结束了，因此这也是<code>Finished报文</code></li></ol><p>在握手结束以后，我们发现客户端和服务端拥有同一个<code>会话密钥</code>，也就是说两者在通信阶段使用的是对称加密而不是非对称加密。</p><h2 id="为什么通信阶段要使用对称加密"><a class="markdownIt-Anchor" href="#为什么通信阶段要使用对称加密"></a> 为什么通信阶段要使用对称加密</h2><p>因为对称加密的速度要快于非对称加密</p><h2 id="服务器证书是什么"><a class="markdownIt-Anchor" href="#服务器证书是什么"></a> 服务器证书是什么</h2><p>首先我们可以知道，客户端和服务端发送的随机数都是明文的，所有很容易被获取，关键就在于<code>pre_master_key</code>，那么我们要如何保证这个<code>pre_master_key</code>的安全性呢，关键在于客户端要确保服务器公钥是真正来自服务器的。</p><p>如果黑客在这个过程中替换了服务器的公钥，那么我们的<code>pre_master_key</code>将会被截取。那么客户端是如何保证公钥来自服务器呢，实际上如果只依靠服务端和客户端本身，这是一个无解的问题，因为双方在真正加密通信之前，双方是互相不信任的，但是我们又需要一次受信任的通信来开启加密通信（这次受信任的通信建立在服务器和客户端不信任的前提下），在https的加密过程中，这次受信任的通信就是客户端接受服务端的服务证书，从这一次通信过后，客户端可以加密出<code>pre_master_key</code>，这个加密后的<code>pre_master_key</code>只有服务端可以解密，所有客户端可以放心的发送给服务端，之后的过程中，双方的通信都是可以信任的。</p><p>这个问题的解决仅仅依赖客户端和服务端两方是不可行的，那么怎么解决双方互相不信任的问题呢，这个时候我们引入一个客户端和服务端都信任的第三方机构**权威数字证书机构（CA）**来解决，CA机构用自己的私钥加密服务器公钥，得到服务器证书，服务器把这个服务器证书发送给客户端，客户端拿着CA的公钥解密服务器证书然后获取服务器公钥，这样就解决了双方不信任的问题，因为客户端对CA机构是信任的，所以客户端会信任由CA私钥加密的服务器证书。</p><p>所有服务器证书就是用私钥加密的服务器公钥，当然，这个证书中还有其它内容，包括服务器域名。</p><h2 id="如何获取ca公钥"><a class="markdownIt-Anchor" href="#如何获取ca公钥"></a> 如何获取CA公钥</h2><p>上面我们提到了客户端用CA公钥解密服务器证书获得服务器公钥，那么客户端怎么获得CA公钥呢，我们知道CA是公开的，而CA机构的数量又不是太多，所以这些CA公钥会提前预装在操作系统或者浏览器中。</p><h2 id="为什么要用三个随机数"><a class="markdownIt-Anchor" href="#为什么要用三个随机数"></a> 为什么要用三个随机数</h2><p>因为只生成一个随机数重复的概率比较大，而三个随机数会大大增加<code>会话密钥</code>的随机度</p><h2 id="为什么要给出摘要"><a class="markdownIt-Anchor" href="#为什么要给出摘要"></a> 为什么要给出摘要</h2><p>避免交流的内容被篡改</p><h2 id="整个过程涉及几对公钥和私钥"><a class="markdownIt-Anchor" href="#整个过程涉及几对公钥和私钥"></a> 整个过程涉及几对公钥和私钥</h2><ol><li>服务器公钥和私钥</li><li>CA公钥和私钥</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>80386内存管理</title>
      <link href="/2023/09/08/80386%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
      <url>/2023/09/08/80386%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>80386转换逻辑地址到物理地址经过下面的两步：</p><ol><li>段翻译，把一个逻辑地址（包含一个段选择子和段偏移量）转换成一个线性地址</li><li>页翻译，把一个线性地址准换成一个物理地址，这一步是可选的，取决于系统软件的设计者，在保护模式下段翻译是必须的而页翻译是可选的</li></ol><p>这些转换对应用程序而言都是不可见的，下图描述了两种翻译的过程。<img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/%E6%97%A0%E6%A0%87%E9%A2%98-2023-04-02-2158.png" alt="无标题-2023-04-02-2158" /></p><h1 id="段翻译"><a class="markdownIt-Anchor" href="#段翻译"></a> 段翻译</h1><p>下图展现了段翻译的细节，显示了处理器如何把一个逻辑地址转换成一个线性地址</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/%E6%97%A0%E6%A0%87%E9%A2%98-2023-04-02-2243.png" alt="无标题-2023-04-02-2243" /></p><p>为了执行段翻译，处理器需要使用下面这些数据结构</p><ul><li>段描述符</li><li>段描述符表</li><li>段选择子</li><li>段寄存器</li></ul><h2 id="段描述符"><a class="markdownIt-Anchor" href="#段描述符"></a> 段描述符</h2><p>段描述符提供了提供了段翻译所需要的数据，段段描述符由编译器，链接器，装载器或者操作系统创建，不能由应用程序编写者创建，下图是一个段段描述符的常见结构。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/%E6%97%A0%E6%A0%87%E9%A2%98-2023-04-03-1003.png" alt="无标题-2023-04-03-1003" /></p><p>可以看到DPL之后的一位把段描述符分为了两种类型，第一种用于存放代码段和数据段，第二种用于系统段。</p><p>接下来解释一些比较重要的位：</p><ol><li>BASE：由三个部分组成，表示4GB空间内段的位置。</li><li>LIMIT：指定了端的大小，由两部分组成了一个20位大小的数字。具体表示的大小还要根据G（granularity，粒度）位来决定。</li><li>G（granularity）：如果该位被设置为0，LIMIT的一个单元大小为一个字节，也就是表示0~1MB大小的空间，如果该位被设置为1，LIMIT一个单元大小为4KB，表示0 ~ 4GB大小的空间。</li><li>TYPE：区分各种类型的段描述符</li><li>DPL（descriptor privilege level）：被用作保护模式</li><li>P（present）：表示段描述符是否有效，下图描述了一个无效的段段描述符，其中被标记为AVAIABLE的位置可以被操作系统修改。</li></ol><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/%E6%97%A0%E6%A0%87%E9%A2%98-2023-04-03-1036.png" alt="无标题-2023-04-03-1036" /></p><ol start="7"><li>A（accessed）：表示段描述符是否可以被访问</li></ol><h2 id="段描述符表"><a class="markdownIt-Anchor" href="#段描述符表"></a> 段描述符表</h2><p>段描述符储存在下面两种段描述符表中：</p><ul><li>The global descriptor table（GDT）</li><li>A local descriptortable （LDT）</li></ul><p>一个段描述符表的每一个元素是一个8字节的段描述符，一个段段描述符表最多可以有8192（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>13</mn></msup></mrow><annotation encoding="application/x-tex">2^{13}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span>）个元素，同时要注意的是全局段段描述符表的第一个元素对处理器来说是不可用的。</p><p>那么处理器怎么知道段描述符表所在的位置的呢，操作系统把GDT和LDT的地址装在一个<code>GDTR</code>和<code>LDTR</code>寄存器中，这个寄存器存放着段描述符表的地址和段描述表的长度。我们可以通过指令LGDT和SGDT把给定的数据装载到GDT寄存器中，通过LLDT和SLDT把给定的数据装载到LDT寄存器中。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/%E6%97%A0%E6%A0%87%E9%A2%98-2023-04-03-1718.png" alt="无标题-2023-04-03-1718" /></p><h2 id="段选择子"><a class="markdownIt-Anchor" href="#段选择子"></a> 段选择子</h2><p>段选择子储存了段描述符表的索引选择段描述符的类型。段选择子在指针变量中对于应用程序可能是可见的，但是它的值往往由链接器指定，下图展示了段选择子的结构。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/%E6%97%A0%E6%A0%87%E9%A2%98-2023-04-03-1736.png" alt="无标题-2023-04-03-1736" /></p><ul><li>index：段描述符表的索引（下标），用于指定选择段描述符表中哪个元素，因为index是一个13位的数字，所以一个段描述符最多可以有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>13</mn></msup></mrow><annotation encoding="application/x-tex">2^{13}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span>个元素。</li><li>TI（table indicator），用于指定从GDT还是LDT中选择，0选择GDT，1选择LDT。</li><li>RPL（Requested Privilege Level），用于保护模式。</li></ul><p>由于全局段描述符表的第一个元素不可用，所以当INDEX和TI都被设置为0时我们认为这是一个空段选择子。</p><h2 id="段寄存器"><a class="markdownIt-Anchor" href="#段寄存器"></a> 段寄存器</h2><p>80386会把段寄存器对应的段描述符信息储存在段寄存器中，这避免了频繁访问内存，下面是段寄存器的结构，应用程序可见和可操控的实际上只有16位，剩下的位由处理器处理，会把段寄存器对应的信息储存在段寄存器中，由于这种机制的存在，所以我们实际上访问数据的效率还是相当高的。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/%E6%97%A0%E6%A0%87%E9%A2%98-2023-04-03-17.png" alt="无标题-2023-04-03-17" /></p><h1 id="页翻译"><a class="markdownIt-Anchor" href="#页翻译"></a> 页翻译</h1><p>在第一个阶段，80386把一个逻辑地址通过段翻译转换成了一个线性地址，在第二个阶段，80386会通过也页翻译把一个线性地址翻译成真实的物理地址。</p><h2 id="页帧"><a class="markdownIt-Anchor" href="#页帧"></a> 页帧</h2><p>页帧是在地址上连续的4KB大小的单元。</p><h2 id="线性地址"><a class="markdownIt-Anchor" href="#线性地址"></a> 线性地址</h2><p>如下图所示，线性地址会被拆分成三个部分，第一个部分的值被用作页目录的索引，第二个部分的值被用作页表的索引，第三个值被用作页的偏移量。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%97%A0%E6%A0%87%E9%A2%98-2023-04-04-0108.png" alt="无标题-2023-04-04-0108" /></p><p>整个翻译的过程由下图所示：</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%97%A0%E6%A0%87%E9%A2%98-2023-04-04-0111.png" alt="无标题-2023-04-04-0111" /></p><h2 id="页目录"><a class="markdownIt-Anchor" href="#页目录"></a> 页目录</h2><p>页目录是一个长度的1K的32位的数组，总共占用4KB的空间，正好是一页。页目录的每个元素定位了一个页表所在的位置，页表也是一个长度为1K的32位数组，一个页表总共占用4KB空间，定位了一个页所在的位置。在一个32位虚拟地址中前10位表示页目录的索引，中间10位表示页表的索引，最后12位表示页内偏移量，正好表示32位空间。</p><p>32位的虚拟地址分成了三个部分，但是这三个部分并没有页目录的地址，所以硬件是怎么知道页目录的地址的呢。硬件依赖的是CR3寄存器，也叫做page directory base register(PDBR)，这个寄存器存放了页目录的首地址，借助于这个寄存器我们可以完成整个翻译操作。</p><p>页目录的结构和页表类似，可以在页表部分找到页表的结构。</p><h2 id="页表"><a class="markdownIt-Anchor" href="#页表"></a> 页表</h2><p>页表的结构和页目录相似，都是占用一页的空间，是一个长度为1K的32位数组。</p><p>下图是一个页表实体有效和无效时的格式。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%97%A0%E6%A0%87%E9%A2%98-2023-04-14-2104.png" alt="无标题-2023-04-14-2104" /></p><ul><li><p>P：最低1位表示存在位Presnt，当该位为1时表示该页表实体存在，当该位1为0时表示页表实体不存在。</p></li><li><p>R/W：读写权限</p></li><li><p>U/S：权限等级</p></li><li><p>D：dirty，脏页</p></li><li><p>A：access，是否可以被访问</p></li><li><p>AVAILABLE：可以被操作系统修改的部分</p></li></ul><h2 id="页翻译缓存"><a class="markdownIt-Anchor" href="#页翻译缓存"></a> 页翻译缓存</h2><h2 id="tlb"><a class="markdownIt-Anchor" href="#tlb"></a> TLB</h2><p>还是仰赖于局部性原理，页翻译缓存TLB（translation look-aside buffer）的存在大大加速了页翻译的过程。</p><h1 id="结合段翻译和页翻译机制"><a class="markdownIt-Anchor" href="#结合段翻译和页翻译机制"></a> 结合段翻译和页翻译机制</h1><p>了解了段翻译和页翻译的机制之后，我们来看看整体的翻译过程。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%97%A0%E6%A0%87%E9%A2%98-2023-04-14-2105.png" alt="无标题-2023-04-14-2105" /></p><p>最后，我们需要把两种机制结合起来，我们有多种架构可以选择。</p><h2 id="平坦架构"><a class="markdownIt-Anchor" href="#平坦架构"></a> 平坦架构</h2><p>这是一种简单的架构，在平坦架构中，我们不使用段，仅仅通过32位的偏移量来表示地址。在80386中我们不能禁止段机制，但是我们可以通过把段全部设置为0实现相同的效果。</p><h2 id="一个段跨越多个页"><a class="markdownIt-Anchor" href="#一个段跨越多个页"></a> 一个段跨越多个页</h2><p>80386允许一个段大小或者小于一个页，举个例子，当我们使用了一个占用空间大小为132KB的数据结构时，我们显然无法在1个页内放下如此多的数据，我们需要133个页才能放下全部的内容。</p><h2 id="一个页跨越多个段"><a class="markdownIt-Anchor" href="#一个页跨越多个段"></a> 一个页跨越多个段</h2><p>从另一个方面来说，段也可以比页小，比如我们可以考虑一个比较小的数据结构——信号，因为段的保护和共享机制，所以我们可能要为每个信号都去分配一个段，但是如果我们为每一个段都分配一个页，可能会有较大的空间浪费，所以在这种情况下把多个段分配在一个页中是比较合适的选择。</p><h2 id="非对齐的页边界和段边界"><a class="markdownIt-Anchor" href="#非对齐的页边界和段边界"></a> 非对齐的页边界和段边界</h2><p>80386不强制页和段的边界对齐，也就是说一个页可能同时包含一个段的开始和一个段的结束。</p><h2 id="对齐的页边界和段边界"><a class="markdownIt-Anchor" href="#对齐的页边界和段边界"></a> 对齐的页边界和段边界</h2><p>但是对齐的边界会让软件设计更加简单，举个例子，我们可以给每个段分配一个固定大小的页，这样页和段的关系就很非常清晰。</p><h2 id="一个段对应一整个页表"><a class="markdownIt-Anchor" href="#一个段对应一整个页表"></a> 一个段对应一整个页表</h2><p>这种方式采用了一个更加简单的映射机制，我们为每一个段创建一个对应的描述符，这样一个段就可以对应一个页表，这样的段最大可以拥有1K个数的页，也就是4MB大小的空间，这在很多情况下是足够的。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%97%A0%E6%A0%87%E9%A2%98-2023-04-15-2313.png" alt="无标题-2023-04-15-2313" /></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>制作iso镜像文件</title>
      <link href="/2023/08/15/%E5%88%B6%E4%BD%9Ciso%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6/"/>
      <url>/2023/08/15/%E5%88%B6%E4%BD%9Ciso%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>本教程会遵照<strong>El-Torito</strong>标准生成ISO文件。</p><h1 id="编写内核文件"><a class="markdownIt-Anchor" href="#编写内核文件"></a> 编写内核文件</h1><p>这里我们简单的写一个打印helloworld的汇编即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#define print(x) movb $0x0E, %ah; \</span><br><span class="line">                 movb $(x), %al; \</span><br><span class="line">                 int $0x10</span><br><span class="line"></span><br><span class="line">.globl start</span><br><span class="line">start:</span><br><span class="line">    .code16</span><br><span class="line">    cli</span><br><span class="line">    cld</span><br><span class="line"></span><br><span class="line">    print(&#x27;H&#x27;)</span><br><span class="line">    print(&#x27;e&#x27;)</span><br><span class="line">    print(&#x27;l&#x27;)</span><br><span class="line">    print(&#x27;l&#x27;)</span><br><span class="line">    print(&#x27;o&#x27;)</span><br><span class="line">    print(&#x27; &#x27;)</span><br><span class="line">    print(&#x27;W&#x27;)</span><br><span class="line">    print(&#x27;o&#x27;)</span><br><span class="line">    print(&#x27;r&#x27;)</span><br><span class="line">    print(&#x27;l&#x27;)</span><br><span class="line">    print(&#x27;d&#x27;)</span><br><span class="line">    print(&#x27;!&#x27;)</span><br></pre></td></tr></table></figure><p>我们编译上述文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gcc -nostdinc -c -o boot.o boot.S</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ld -N -e start -Ttext 0x7C00 -o boot.out boot.o</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">objcopy -S -O binary -j .text boot.out boot.out</span></span><br></pre></td></tr></table></figure><p>然后我们将内容放在新的位置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> -p prepared_for_iso/boot</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> boot.out prepared_for_iso/boot/loader.sys</span> </span><br></pre></td></tr></table></figure><h1 id="创建iso文件"><a class="markdownIt-Anchor" href="#创建iso文件"></a> 创建iso文件</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">xorriso -as mkisofs -R -J -c boot/bootcat \</span></span><br><span class="line"><span class="language-bash">          -b boot/loader.sys -no-emul-boot -boot-load-size 4 \</span></span><br><span class="line"><span class="language-bash">          -o ./bootable.iso ./prepared_for_iso</span></span><br></pre></td></tr></table></figure><p>最后我们可以用qemu或者vmware启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">qemu-system-i386 -cdrom bootable.iso</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络笔记</title>
      <link href="/2023/08/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/08/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="12-因特网概述"><a class="markdownIt-Anchor" href="#12-因特网概述"></a> 1.2 因特网概述</h1><h2 id="网络互联网和因特网"><a class="markdownIt-Anchor" href="#网络互联网和因特网"></a> 网络，互联网和因特网</h2><ul><li>网络由若干<code>节点</code>和连接这些节点的<code>链路</code>组成</li><li>多个网络可以由路由器互连起来，这样就构成了范围更大的网络，即互联网</li><li>因特网是全球最大的计算机网络</li></ul><h2 id="因特网的组成"><a class="markdownIt-Anchor" href="#因特网的组成"></a> 因特网的组成</h2><ul><li>边缘部分<ul><li>由所有连接在因特网上的主机组成</li></ul></li><li>核心部分<ul><li>由大量网络和连接这些网络的路由器组成</li></ul></li></ul><h1 id="13-三种交换方式"><a class="markdownIt-Anchor" href="#13-三种交换方式"></a> 1.3 三种交换方式</h1><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230812093319695.png" alt="image-20230812093319695" /></p>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lab-2(mit-6.828)</title>
      <link href="/2023/07/16/lab-2-mit-6-828/"/>
      <url>/2023/07/16/lab-2-mit-6-828/</url>
      
        <content type="html"><![CDATA[<h1 id="exercise-1"><a class="markdownIt-Anchor" href="#exercise-1"></a> Exercise 1</h1><p>要求完成的函数内容如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">void</span> *</span><br><span class="line"><span class="title function_">boot_alloc</span><span class="params">(<span class="type">uint32_t</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">char</span> *nextfree;<span class="comment">// virtual address of next byte of free memory</span></span><br><span class="line"><span class="type">char</span> *result;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Initialize nextfree if this is the first time.</span></span><br><span class="line"><span class="comment">// &#x27;end&#x27; is a magic symbol automatically generated by the linker,</span></span><br><span class="line"><span class="comment">// which points to the end of the kernel&#x27;s bss segment:</span></span><br><span class="line"><span class="comment">// the first virtual address that the linker did *not* assign</span></span><br><span class="line"><span class="comment">// to any kernel code or global variables.</span></span><br><span class="line"><span class="keyword">if</span> (!nextfree) &#123;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">char</span> end[];</span><br><span class="line">nextfree = ROUNDUP((<span class="type">char</span> *) end, PGSIZE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Allocate a chunk large enough to hold &#x27;n&#x27; bytes, then update</span></span><br><span class="line"><span class="comment">// nextfree.  Make sure nextfree is kept aligned</span></span><br><span class="line"><span class="comment">// to a multiple of PGSIZE.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// LAB 2: Your code here.</span></span><br><span class="line">result = nextfree;</span><br><span class="line">nextfree += ROUNDUP(n, PGSIZE);</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">mem_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint32_t</span> cr0;</span><br><span class="line"><span class="type">size_t</span> n;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Find out how much memory the machine has (npages &amp; npages_basemem).</span></span><br><span class="line">i386_detect_memory();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Remove this line when you&#x27;re ready to test this function.</span></span><br><span class="line"><span class="comment">// panic(&quot;mem_init: This function is not finished\n&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// create initial page directory.</span></span><br><span class="line">kern_pgdir = (<span class="type">pde_t</span> *) boot_alloc(PGSIZE);</span><br><span class="line"><span class="built_in">memset</span>(kern_pgdir, <span class="number">0</span>, PGSIZE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// Recursively insert PD in itself as a page table, to form</span></span><br><span class="line"><span class="comment">// a virtual page table at virtual address UVPT.</span></span><br><span class="line"><span class="comment">// (For now, you don&#x27;t have understand the greater purpose of the</span></span><br><span class="line"><span class="comment">// following line.)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Permissions: kernel R, user R</span></span><br><span class="line">kern_pgdir[PDX(UVPT)] = PADDR(kern_pgdir) | PTE_U | PTE_P;</span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// Allocate an array of npages &#x27;struct PageInfo&#x27;s and store it in &#x27;pages&#x27;.</span></span><br><span class="line"><span class="comment">// The kernel uses this array to keep track of physical pages: for</span></span><br><span class="line"><span class="comment">// each physical page, there is a corresponding struct PageInfo in this</span></span><br><span class="line"><span class="comment">// array.  &#x27;npages&#x27; is the number of physical pages in memory.  Use memset</span></span><br><span class="line"><span class="comment">// to initialize all fields of each struct PageInfo to 0.</span></span><br><span class="line"><span class="comment">// Your code goes here:</span></span><br><span class="line">pages = (<span class="keyword">struct</span> PageInfo*)boot_alloc(npages * <span class="keyword">sizeof</span>(<span class="keyword">struct</span> PageInfo));</span><br><span class="line"><span class="built_in">memset</span>(pages,<span class="number">0</span>,npages * <span class="keyword">sizeof</span>(<span class="keyword">struct</span> PageInfo));</span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// Now that we&#x27;ve allocated the initial kernel data structures, we set</span></span><br><span class="line"><span class="comment">// up the list of free physical pages. Once we&#x27;ve done so, all further</span></span><br><span class="line"><span class="comment">// memory management will go through the page_* functions. In</span></span><br><span class="line"><span class="comment">// particular, we can now map memory using boot_map_region</span></span><br><span class="line"><span class="comment">// or page_insert</span></span><br><span class="line">page_init();</span><br><span class="line">check_page_free_list(<span class="number">1</span>);</span><br><span class="line">check_page_alloc();</span><br><span class="line">check_page();</span><br><span class="line">    ...</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">page_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// The example code here marks all physical pages as free.</span></span><br><span class="line"><span class="comment">// However this is not truly the case.  What memory is free?</span></span><br><span class="line"><span class="comment">//  1) Mark physical page 0 as in use.</span></span><br><span class="line"><span class="comment">//     This way we preserve the real-mode IDT and BIOS structures</span></span><br><span class="line"><span class="comment">//     in case we ever need them.  (Currently we don&#x27;t, but...)</span></span><br><span class="line"><span class="comment">//  2) The rest of base memory, [PGSIZE, npages_basemem * PGSIZE)</span></span><br><span class="line"><span class="comment">//     is free.</span></span><br><span class="line"><span class="comment">//  3) Then comes the IO hole [IOPHYSMEM, EXTPHYSMEM), which must</span></span><br><span class="line"><span class="comment">//     never be allocated.</span></span><br><span class="line"><span class="comment">//  4) Then extended memory [EXTPHYSMEM, ...).</span></span><br><span class="line"><span class="comment">//     Some of it is in use, some is free. Where is the kernel</span></span><br><span class="line"><span class="comment">//     in physical memory?  Which pages are already in use for</span></span><br><span class="line"><span class="comment">//     page tables and other data structures?</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Change the code to reflect this.</span></span><br><span class="line"><span class="comment">// NB: DO NOT actually touch the physical memory corresponding to</span></span><br><span class="line"><span class="comment">// free pages!</span></span><br><span class="line"><span class="type">void</span> * kern_used = boot_alloc(<span class="number">0</span>);</span><br><span class="line"><span class="type">size_t</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; npages; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">0</span>)&#123;</span><br><span class="line">pages[i].pp_ref = <span class="number">1</span>;</span><br><span class="line">pages[i].pp_link = <span class="literal">NULL</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(i &lt; npages_basemem || i &lt; IOPHYSMEM &gt;&gt; PGSHIFT)&#123;</span><br><span class="line">pages[i].pp_ref = <span class="number">0</span>;</span><br><span class="line">pages[i].pp_link = page_free_list;</span><br><span class="line">page_free_list = &amp;pages[i];</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(i &gt;= IOPHYSMEM &gt;&gt; PGSHIFT &amp;&amp; i &lt; EXTPHYSMEM &gt;&gt; PGSHIFT)&#123;</span><br><span class="line">pages[i].pp_ref = <span class="number">1</span>;</span><br><span class="line">pages[i].pp_link = <span class="literal">NULL</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(i &lt;= PADDR(kern_used) &gt;&gt; PGSHIFT)&#123;</span><br><span class="line">pages[i].pp_ref = <span class="number">1</span>;</span><br><span class="line">pages[i].pp_link = <span class="literal">NULL</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">pages[i].pp_ref = <span class="number">0</span>;</span><br><span class="line">pages[i].pp_link = page_free_list;</span><br><span class="line">page_free_list = &amp;pages[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> PageInfo *</span><br><span class="line"><span class="title function_">page_alloc</span><span class="params">(<span class="type">int</span> alloc_flags)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Fill this function in</span></span><br><span class="line"><span class="keyword">if</span>(page_free_list == <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PageInfo</span> *<span class="title">pp</span> =</span> page_free_list;</span><br><span class="line"><span class="keyword">if</span>(alloc_flags &amp; ALLOC_ZERO)&#123;</span><br><span class="line"><span class="built_in">memset</span>(page2kva(pp), <span class="number">0</span>, PGSIZE);</span><br><span class="line">&#125;</span><br><span class="line">page_free_list = pp-&gt;pp_link;</span><br><span class="line">pp-&gt;pp_link = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> pp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">page_free</span><span class="params">(<span class="keyword">struct</span> PageInfo *pp)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Fill this function in</span></span><br><span class="line"><span class="comment">// Hint: You may want to panic if pp-&gt;pp_ref is nonzero or</span></span><br><span class="line"><span class="comment">// pp-&gt;pp_link is not NULL.</span></span><br><span class="line"><span class="keyword">if</span>(pp-&gt;pp_ref != <span class="number">0</span> || pp-&gt;pp_link != <span class="literal">NULL</span>)&#123;</span><br><span class="line">panic(<span class="string">&quot;page ref is not null&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">pp-&gt;pp_link = page_free_list;</span><br><span class="line">page_free_list = pp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="exercise-4"><a class="markdownIt-Anchor" href="#exercise-4"></a> Exercise 4</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">pte_t</span> *</span><br><span class="line"><span class="title function_">pgdir_walk</span><span class="params">(<span class="type">pde_t</span> *pgdir, <span class="type">const</span> <span class="type">void</span> *va, <span class="type">int</span> create)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Fill this function in</span></span><br><span class="line"><span class="type">uint32_t</span> pde = pgdir[PDX(va)];</span><br><span class="line"><span class="keyword">if</span>(!(pde &amp; PTE_P))&#123;</span><br><span class="line"><span class="keyword">if</span> (!create)<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PageInfo</span> * <span class="title">page</span> =</span> page_alloc(ALLOC_ZERO);</span><br><span class="line"><span class="keyword">if</span>(page == <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">page-&gt;pp_ref++;</span><br><span class="line">pgdir[PDX(va)] = page2pa(page) | PTE_W | PTE_U | PTE_P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">pte_t</span> * pte = (<span class="type">pte_t</span>*)(KADDR(PTE_ADDR((pgdir[PDX(va)])))) + PTX(va);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> pte;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span></span><br><span class="line"><span class="title function_">boot_map_region</span><span class="params">(<span class="type">pde_t</span> *pgdir, <span class="type">uintptr_t</span> va, <span class="type">size_t</span> size, <span class="type">physaddr_t</span> pa, <span class="type">int</span> perm)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Fill this function in</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">size_t</span> i = <span class="number">0</span>;i &lt; size;i+=PGSIZE)&#123;</span><br><span class="line"><span class="type">pte_t</span> * pte = pgdir_walk(pgdir,(<span class="type">void</span>*)(va+i),<span class="number">1</span>);</span><br><span class="line">*pte = (pa+i)|perm|PTE_P;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span></span><br><span class="line"><span class="title function_">page_insert</span><span class="params">(<span class="type">pde_t</span> *pgdir, <span class="keyword">struct</span> PageInfo *pp, <span class="type">void</span> *va, <span class="type">int</span> perm)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Fill this function in</span></span><br><span class="line"><span class="type">pte_t</span> * pte = pgdir_walk(pgdir,va,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(pte == <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> -E_NO_MEM;</span><br><span class="line">&#125;</span><br><span class="line">pp-&gt;pp_ref++;</span><br><span class="line"><span class="keyword">if</span>((*pte) &amp; PTE_P)&#123;</span><br><span class="line">tlb_invalidate(pgdir,va);</span><br><span class="line">page_remove(pgdir,va);</span><br><span class="line">&#125;</span><br><span class="line">*pte = (page2pa(pp) | perm | PTE_P);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> PageInfo *</span><br><span class="line"><span class="title function_">page_lookup</span><span class="params">(<span class="type">pde_t</span> *pgdir, <span class="type">void</span> *va, <span class="type">pte_t</span> **pte_store)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Fill this function in</span></span><br><span class="line"><span class="type">pte_t</span> * pte = pgdir_walk(pgdir,va,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(pte == <span class="literal">NULL</span> || !(*pte &amp; PTE_P))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(pte_store != <span class="literal">NULL</span>)&#123;</span><br><span class="line">pte_store = &amp;pte;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PageInfo</span> * <span class="title">page</span> =</span> pa2page(PTE_ADDR(*pte));</span><br><span class="line"><span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">page_remove</span><span class="params">(<span class="type">pde_t</span> *pgdir, <span class="type">void</span> *va)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Fill this function in</span></span><br><span class="line"><span class="type">pte_t</span> * pte = pgdir_walk(pgdir,va,<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PageInfo</span> * <span class="title">page</span> =</span> page_lookup(pgdir,va,&amp;pte);</span><br><span class="line"><span class="keyword">if</span>(page == <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">page_decref(page);</span><br><span class="line">tlb_invalidate(pgdir,va);</span><br><span class="line"><span class="keyword">if</span>(pte)&#123;</span><br><span class="line">*pte = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="exercise-5"><a class="markdownIt-Anchor" href="#exercise-5"></a> Exercise 5</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">boot_map_region(kern_pgdir, UPAGES, PTSIZE, PADDR(pages), PTE_U);</span><br><span class="line">boot_map_region(kern_pgdir, KSTACKTOP - KSTKSIZE, KSTKSIZE, PADDR(bootstack), PTE_W);</span><br><span class="line">boot_map_region(kern_pgdir, KERNBASE, (<span class="number">0xffffffff</span> - KERNBASE), <span class="number">0</span>, PTE_W);</span><br></pre></td></tr></table></figure><h2 id="question"><a class="markdownIt-Anchor" href="#question"></a> Question</h2><p>What entries (rows) in the page directory have been filled in at this point? What addresses do they map and where do they point? In other words, fill out this table as much as possible:</p><table><thead><tr><th>Entry</th><th>Base Virtual Address</th><th>Points to (logically):</th></tr></thead><tbody><tr><td>1023</td><td></td><td>Page table for top 4MB of phys memory</td></tr><tr><td>1022</td><td></td><td>KERN</td></tr><tr><td>.</td><td></td><td>以上都是kernel</td></tr><tr><td>960</td><td>0xf0000000</td><td>KERNBASE</td></tr><tr><td>959</td><td>0xefc00000</td><td>kernel stack</td></tr><tr><td>957</td><td>0xef400000</td><td>UVPT</td></tr><tr><td>956</td><td>0xef000000</td><td>UPAGES</td></tr><tr><td>.</td><td>?</td><td>?</td></tr><tr><td>2</td><td>0x00800000</td><td>?</td></tr><tr><td>1</td><td>0x00400000</td><td>?</td></tr><tr><td>0</td><td>0x00000000</td><td>[see next question]</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> mit-6.828 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>lab-1(mit-6.828)</title>
      <link href="/2023/07/15/lab-1-mit-6-828/"/>
      <url>/2023/07/15/lab-1-mit-6-828/</url>
      
        <content type="html"><![CDATA[<h1 id="exercise-3"><a class="markdownIt-Anchor" href="#exercise-3"></a> Exercise 3</h1><ol><li>At what point does the processor start executing 32-bit code? What exactly causes the switch from 16- to 32-bit mode?</li></ol><p>从这一行开始执行32行代码</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715070948942.png" alt="image-20230715070948942" /></p><p>开启保护模式，开启32位模式</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715071443430.png" alt="image-20230715071443430" /></p><ol start="2"><li>What is the <em>last</em> instruction of the boot loader executed, and what is the <em>first</em> instruction of the kernel it just loaded?</li></ol><p>bootloader执行的最后一行代码</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715071644168.png" alt="image-20230715071644168" /></p><p>kernel的第一条指令</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715071742600.png" alt="image-20230715071742600" /></p><ol start="3"><li><em>Where</em> is the first instruction of the kernel?</li></ol><p>同上</p><ol start="4"><li>How does the boot loader decide how many sectors it must read in order to fetch the entire kernel from disk? Where does it find this information?</li></ol><p>bootloader首先读取除了启动扇区（第0扇区）之外的前8个扇区</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715073251117.png" alt="image-20230715073251117" /></p><p>这次读取的大小已经足够了，足够读入内核的ELF header到内存中，有了ELF header之后，可以通过ELF header的信息获取Program header，Program header记录了要读入部分的信息，根据这个信息，bootloader将整个内核装载进入内核</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715073638805.png" alt="image-20230715073638805" /></p><h1 id="exercise-7"><a class="markdownIt-Anchor" href="#exercise-7"></a> Exercise 7</h1><p>目前，还没有开启分页，无法访问<code>0xf0100000</code></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715075107352.png" alt="image-20230715075107352" /></p><p>接下来，我们开启分页，可以看到这两个地址实际映射的内存是一样的</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715075330528.png" alt="image-20230715075330528" /></p><h1 id="exercise-8"><a class="markdownIt-Anchor" href="#exercise-8"></a> Exercise 8</h1><p>这个部分参照其他16进制的实现，我们可以得到以下代码</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715080543059.png" alt="image-20230715080543059" /></p><p>following question:</p><ol><li>Explain the interface between <code>printf.c</code> and <code>console.c</code>. Specifically, what function does <code>console.c</code> export? How is this function used by <code>printf.c</code>?</li></ol><p><code>console.c</code>导出了 <code>putch</code> 这个函数</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715081240430.png" alt="image-20230715081240430" /></p><p><code>printf.c</code>中通过函数指针的方式调用这个函数</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715081507658.png" alt="image-20230715081507658" /></p><ol start="2"><li>Explain the following from<code>console.c</code></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>      <span class="keyword">if</span> (crt_pos &gt;= CRT_SIZE) &#123;</span><br><span class="line"><span class="number">2</span>              <span class="type">int</span> i;</span><br><span class="line"><span class="number">3</span>              memmove(crt_buf, crt_buf + CRT_COLS, (CRT_SIZE - CRT_COLS) * <span class="keyword">sizeof</span>(<span class="type">uint16_t</span>));</span><br><span class="line"><span class="number">4</span>              <span class="keyword">for</span> (i = CRT_SIZE - CRT_COLS; i &lt; CRT_SIZE; i++)</span><br><span class="line"><span class="number">5</span>                      crt_buf[i] = <span class="number">0x0700</span> | <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="number">6</span>              crt_pos -= CRT_COLS;</span><br><span class="line"><span class="number">7</span>      &#125;</span><br></pre></td></tr></table></figure><p>简单来说，这里的代码的作用是当需要显示的内容超过屏幕时，将整体的内容上移一行</p><h2 id="challenge"><a class="markdownIt-Anchor" href="#challenge"></a> Challenge</h2><h2 id="控制命令"><a class="markdownIt-Anchor" href="#控制命令"></a> 控制命令</h2><p>我们常用的<code>printf</code>函数输出来的颜色是终端的配色。如果想要输出不同的颜色进行区分，就需要用到<code>printf</code>的控制命令：<code>\033[m</code>。</p><p>控制命令以<code>\033[</code>开头，以<code>m</code>结尾，而中间则是属性码，属性代码之间使用<code>;</code>分隔，如<code>\033[1;34;42m</code>。而属性代码的含义见下面的表格。</p><h2 id="printf属性代码"><a class="markdownIt-Anchor" href="#printf属性代码"></a> printf属性代码</h2><p>这里列举了三类属性代码，当然这只是一部分。</p><h3 id="通用格式控制"><a class="markdownIt-Anchor" href="#通用格式控制"></a> 通用格式控制</h3><table><thead><tr><th>属性代码</th><th>功能</th></tr></thead><tbody><tr><td>0</td><td>重置所有属性</td></tr><tr><td>1</td><td>高亮/加粗</td></tr><tr><td>2</td><td>暗淡</td></tr><tr><td>4</td><td>下划线</td></tr><tr><td>5</td><td>闪烁</td></tr><tr><td>7</td><td>反转</td></tr><tr><td>8</td><td>隐藏</td></tr></tbody></table><h3 id="前景色"><a class="markdownIt-Anchor" href="#前景色"></a> 前景色</h3><table><thead><tr><th>属性代码</th><th>颜色</th></tr></thead><tbody><tr><td>30</td><td>黑色</td></tr><tr><td>31</td><td>红色</td></tr><tr><td>32</td><td>绿色</td></tr><tr><td>33</td><td>黄色</td></tr><tr><td>34</td><td>蓝色</td></tr><tr><td>35</td><td>品红</td></tr><tr><td>36</td><td>青色</td></tr></tbody></table><h3 id="背景色"><a class="markdownIt-Anchor" href="#背景色"></a> 背景色</h3><table><thead><tr><th>属性代码</th><th>颜色</th></tr></thead><tbody><tr><td>40</td><td>黑色</td></tr><tr><td>41</td><td>红色</td></tr><tr><td>42</td><td>绿色</td></tr><tr><td>43</td><td>黄色</td></tr><tr><td>44</td><td>蓝色</td></tr><tr><td>45</td><td>品红</td></tr><tr><td>46</td><td>青色</td></tr></tbody></table><p>根据如上ANSI转义序列的标准，我实现了部分颜色，修改部分的代码如下</p><p><code>printfmt.c</code>中的<code>vprintfmt</code>函数修改如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> RESET 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BOLD 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FBLACK 30</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FRED  31</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FGREEN  32</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FYELLOW  33</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FBLUE 34</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FDEFAULT 39</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BBLACK 40</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BRED  41</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BGREEN 42</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BYELLOW 43</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BBLUE 44</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BDEFAULT 49</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ESC <span class="string">&#x27;\033&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> START <span class="string">&#x27;[&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> END <span class="string">&#x27;m&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DELIMITER <span class="string">&#x27;;&#x27;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// default black background, white foreground</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> color = <span class="number">0x0700</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span></span><br><span class="line"><span class="title function_">parse_str2int</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> start, <span class="type">int</span> end)</span>&#123;</span><br><span class="line"><span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = start ; i &lt; end ; i++)&#123;</span><br><span class="line">result *= <span class="number">10</span>;</span><br><span class="line">result += s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">set_color</span><span class="params">(<span class="type">int</span> r)</span>&#123;</span><br><span class="line"><span class="comment">// cprintf(&quot;r : %d\n&quot;, r);</span></span><br><span class="line"><span class="keyword">if</span>(r / <span class="number">10</span> == <span class="number">3</span>)&#123;</span><br><span class="line">color &amp;= <span class="number">0xf0ff</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(r / <span class="number">10</span> == <span class="number">4</span>)&#123;</span><br><span class="line">color &amp;= <span class="number">0x0fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (r)&#123;</span><br><span class="line"><span class="keyword">case</span> RESET:</span><br><span class="line">color = <span class="number">0x0700</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> BOLD:</span><br><span class="line">color |= <span class="number">0x0800</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> FBLACK:</span><br><span class="line">color |= <span class="number">0x0000</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> FBLUE:</span><br><span class="line">color |= <span class="number">0x0100</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> FGREEN:</span><br><span class="line">color |= <span class="number">0x0200</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> FRED:</span><br><span class="line">color |= <span class="number">0x0400</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> FYELLOW:</span><br><span class="line">color |= <span class="number">0x0600</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> FDEFAULT:</span><br><span class="line">color |= <span class="number">0x0700</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> BBLACK:</span><br><span class="line">color |= <span class="number">0x0000</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> BBLUE:</span><br><span class="line">color |= <span class="number">0x1000</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> BGREEN:</span><br><span class="line">color |= <span class="number">0x2000</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> BRED:</span><br><span class="line">color |= <span class="number">0x4000</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> BYELLOW:</span><br><span class="line">color |= <span class="number">0x6000</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> BDEFAULT:</span><br><span class="line">color |= <span class="number">0x7000</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// cprintf(&quot;color : %x\n&quot;, color);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">vprintfmt</span><span class="params">(<span class="type">void</span> (*putch)(<span class="type">int</span>, <span class="type">void</span>*), <span class="type">void</span> *putdat, <span class="type">const</span> <span class="type">char</span> *fmt, va_list ap)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="type">const</span> <span class="type">char</span> *p;</span><br><span class="line"><span class="keyword">register</span> <span class="type">int</span> ch, err;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> num;</span><br><span class="line"><span class="type">int</span> base, lflag, width, precision, altflag;</span><br><span class="line"><span class="type">char</span> padc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">while</span> ((ch = *(<span class="type">unsigned</span> <span class="type">char</span> *) fmt++) != <span class="string">&#x27;%&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (ch == ESC) &#123;</span><br><span class="line"><span class="keyword">if</span>(*fmt++ != START)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> * str = fmt;</span><br><span class="line"><span class="type">int</span> startidx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((ch = *(<span class="type">unsigned</span> <span class="type">char</span> *) fmt++) != END)&#123;</span><br><span class="line"><span class="keyword">if</span>(ch == <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> endidx = fmt - str - <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> s = startidx;</span><br><span class="line"><span class="type">int</span> e = endidx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = startidx ; i &lt; endidx ; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(str[i] == DELIMITER)&#123;</span><br><span class="line">e = i;</span><br><span class="line"><span class="type">int</span> result = parse_str2int(str, s, e);</span><br><span class="line">s = i + <span class="number">1</span>;</span><br><span class="line">set_color(result);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> result = parse_str2int(str, s, endidx);</span><br><span class="line">set_color(result);</span><br><span class="line">putch(color, putdat);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">putch(ch, putdat);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Process a %-escape sequence</span></span><br><span class="line">padc = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">width = <span class="number">-1</span>;</span><br><span class="line">precision = <span class="number">-1</span>;</span><br><span class="line">lflag = <span class="number">0</span>;</span><br><span class="line">altflag = <span class="number">0</span>;</span><br><span class="line">reswitch:</span><br><span class="line"><span class="keyword">switch</span> (ch = *(<span class="type">unsigned</span> <span class="type">char</span> *) fmt++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// flag to pad on the right</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">padc = <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line"><span class="keyword">goto</span> reswitch;</span><br><span class="line"></span><br><span class="line"><span class="comment">// flag to pad with 0&#x27;s instead of spaces</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">padc = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">goto</span> reswitch;</span><br><span class="line"></span><br><span class="line"><span class="comment">// width field</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;9&#x27;</span>:</span><br><span class="line"><span class="keyword">for</span> (precision = <span class="number">0</span>; ; ++fmt) &#123;</span><br><span class="line">precision = precision * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">ch = *fmt;</span><br><span class="line"><span class="keyword">if</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">goto</span> process_precision;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">precision = va_arg(ap, <span class="type">int</span>);</span><br><span class="line"><span class="keyword">goto</span> process_precision;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;.&#x27;</span>:</span><br><span class="line"><span class="keyword">if</span> (width &lt; <span class="number">0</span>)</span><br><span class="line">width = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">goto</span> reswitch;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;#&#x27;</span>:</span><br><span class="line">altflag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">goto</span> reswitch;</span><br><span class="line"></span><br><span class="line">process_precision:</span><br><span class="line"><span class="keyword">if</span> (width &lt; <span class="number">0</span>)</span><br><span class="line">width = precision, precision = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">goto</span> reswitch;</span><br><span class="line"></span><br><span class="line"><span class="comment">// long flag (doubled for long long)</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;l&#x27;</span>:</span><br><span class="line">lflag++;</span><br><span class="line"><span class="keyword">goto</span> reswitch;</span><br><span class="line"></span><br><span class="line"><span class="comment">// character</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">putch(va_arg(ap, <span class="type">int</span>), putdat);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// error message</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>:</span><br><span class="line">err = va_arg(ap, <span class="type">int</span>);</span><br><span class="line"><span class="keyword">if</span> (err &lt; <span class="number">0</span>)</span><br><span class="line">err = -err;</span><br><span class="line"><span class="keyword">if</span> (err &gt;= MAXERROR || (p = error_string[err]) == <span class="literal">NULL</span>)</span><br><span class="line">printfmt(putch, putdat, <span class="string">&quot;error %d&quot;</span>, err);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">printfmt(putch, putdat, <span class="string">&quot;%s&quot;</span>, p);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// string</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line"><span class="keyword">if</span> ((p = va_arg(ap, <span class="type">char</span> *)) == <span class="literal">NULL</span>)</span><br><span class="line">p = <span class="string">&quot;(null)&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (width &gt; <span class="number">0</span> &amp;&amp; padc != <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> (width -= strnlen(p, precision); width &gt; <span class="number">0</span>; width--)</span><br><span class="line">putch(padc, putdat);</span><br><span class="line"><span class="keyword">for</span> (; (ch = *p++) != <span class="string">&#x27;\0&#x27;</span> &amp;&amp; (precision &lt; <span class="number">0</span> || --precision &gt;= <span class="number">0</span>); width--)</span><br><span class="line"><span class="keyword">if</span> (altflag &amp;&amp; (ch &lt; <span class="string">&#x27; &#x27;</span> || ch &gt; <span class="string">&#x27;~&#x27;</span>))</span><br><span class="line">putch(<span class="string">&#x27;?&#x27;</span>, putdat);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">putch(ch, putdat);</span><br><span class="line"><span class="keyword">for</span> (; width &gt; <span class="number">0</span>; width--)</span><br><span class="line">putch(<span class="string">&#x27; &#x27;</span>, putdat);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// (signed) decimal</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">num = getint(&amp;ap, lflag);</span><br><span class="line"><span class="keyword">if</span> ((<span class="type">long</span> <span class="type">long</span>) num &lt; <span class="number">0</span>) &#123;</span><br><span class="line">putch(<span class="string">&#x27;-&#x27;</span>, putdat);</span><br><span class="line">num = -(<span class="type">long</span> <span class="type">long</span>) num;</span><br><span class="line">&#125;</span><br><span class="line">base = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">goto</span> number;</span><br><span class="line"></span><br><span class="line"><span class="comment">// unsigned decimal</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;u&#x27;</span>:</span><br><span class="line">num = getuint(&amp;ap, lflag);</span><br><span class="line">base = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">goto</span> number;</span><br><span class="line"></span><br><span class="line"><span class="comment">// (unsigned) octal</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;o&#x27;</span>:</span><br><span class="line"><span class="comment">// Replace this with your code.</span></span><br><span class="line">num = getuint(&amp;ap, lflag);</span><br><span class="line">base = <span class="number">8</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// pointer</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;p&#x27;</span>:</span><br><span class="line">putch(<span class="string">&#x27;0&#x27;</span>, putdat);</span><br><span class="line">putch(<span class="string">&#x27;x&#x27;</span>, putdat);</span><br><span class="line">num = (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)</span><br><span class="line">(<span class="type">uintptr_t</span>) va_arg(ap, <span class="type">void</span> *);</span><br><span class="line">base = <span class="number">16</span>;</span><br><span class="line"><span class="keyword">goto</span> number;</span><br><span class="line"></span><br><span class="line"><span class="comment">// (unsigned) hexadecimal</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;x&#x27;</span>:</span><br><span class="line">num = getuint(&amp;ap, lflag);</span><br><span class="line">base = <span class="number">16</span>;</span><br><span class="line">number:</span><br><span class="line">printnum(putch, putdat, num, base, width, padc);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// escaped &#x27;%&#x27; character</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;%&#x27;</span>:</span><br><span class="line">putch(ch, putdat);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// unrecognized escape sequence - just print it literally</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">putch(<span class="string">&#x27;%&#x27;</span>, putdat);</span><br><span class="line"><span class="keyword">for</span> (fmt--; fmt[<span class="number">-1</span>] != <span class="string">&#x27;%&#x27;</span>; fmt--)</span><br><span class="line"><span class="comment">/* do nothing */</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>console.c</code>的<code>cga_putc</code>函数修改如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">int</span> color = <span class="number">0x0700</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span></span><br><span class="line"><span class="title function_">cga_putc</span><span class="params">(<span class="type">int</span> c)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// if no attribute given, then use black on white</span></span><br><span class="line"><span class="keyword">if</span> (!(c &amp; ~<span class="number">0xFF</span>))&#123;</span><br><span class="line">c |= color;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">color = c;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (c &amp; <span class="number">0xff</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;\b&#x27;</span>:</span><br><span class="line"><span class="keyword">if</span> (crt_pos &gt; <span class="number">0</span>) &#123;</span><br><span class="line">crt_pos--;</span><br><span class="line">crt_buf[crt_pos] = (c &amp; ~<span class="number">0xff</span>) | <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;\n&#x27;</span>:</span><br><span class="line">crt_pos += CRT_COLS;</span><br><span class="line"><span class="comment">/* fallthru */</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;\r&#x27;</span>:</span><br><span class="line">crt_pos -= (crt_pos % CRT_COLS);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;\t&#x27;</span>:</span><br><span class="line">cons_putc(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">cons_putc(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">cons_putc(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">cons_putc(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">cons_putc(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">crt_buf[crt_pos++] = c;<span class="comment">/* write the character */</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// What is the purpose of this?</span></span><br><span class="line"><span class="keyword">if</span> (crt_pos &gt;= CRT_SIZE) &#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">memmove(crt_buf, crt_buf + CRT_COLS, (CRT_SIZE - CRT_COLS) * <span class="keyword">sizeof</span>(<span class="type">uint16_t</span>));</span><br><span class="line"><span class="keyword">for</span> (i = CRT_SIZE - CRT_COLS; i &lt; CRT_SIZE; i++)</span><br><span class="line">crt_buf[i] = <span class="number">0x0700</span> | <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">crt_pos -= CRT_COLS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* move that little blinky thing */</span></span><br><span class="line">outb(addr_6845, <span class="number">14</span>);</span><br><span class="line">outb(addr_6845 + <span class="number">1</span>, crt_pos &gt;&gt; <span class="number">8</span>);</span><br><span class="line">outb(addr_6845, <span class="number">15</span>);</span><br><span class="line">outb(addr_6845 + <span class="number">1</span>, crt_pos);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后测试部分代码和实现效果如下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715125445351.png" alt="image-20230715125445351" /></p><p>打印出红色前景+绿色背景+高亮</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715125504804.png" alt="image-20230715125504804" /></p><h1 id="exercise-9"><a class="markdownIt-Anchor" href="#exercise-9"></a> Exercise 9</h1><p>栈的结束地址是data段的开始，大小为8个页，32KB</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715154242652.png" alt="image-20230715154242652" /></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715154459904.png" alt="image-20230715154459904" /></p><h1 id="exercise-10"><a class="markdownIt-Anchor" href="#exercise-10"></a> Exercise 10</h1><p>下面是C语言函数调用时栈的内存图</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/v2-88c6f207393b2d475335ebe11a32994b.png" alt="v2-88c6f207393b2d475335ebe11a32994b" /></p><h1 id="exercise-11"><a class="markdownIt-Anchor" href="#exercise-11"></a> Exercise 11</h1><p>在<code>entry.S</code>中将ebp初始化为0,说明当ebp为0时栈帧就结束了，根据练习10的模型，可以遍历所有的栈帧</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span></span><br><span class="line"><span class="title function_">mon_backtrace</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv, <span class="keyword">struct</span> Trapframe *tf)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Your code here.</span></span><br><span class="line"><span class="type">uint32_t</span> ebp,eip;</span><br><span class="line"><span class="keyword">for</span>(ebp = read_ebp();ebp != <span class="number">0</span> ; ebp = *((<span class="type">uint32_t</span>*)ebp))&#123;</span><br><span class="line">eip = *(<span class="type">uint32_t</span>*)(ebp + <span class="number">4</span>);</span><br><span class="line">cprintf(<span class="string">&quot;ebp %x eip %x args &quot;</span>,ebp,eip);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt; <span class="number">7</span> ; i++)&#123;</span><br><span class="line">cprintf(<span class="string">&quot;%08x &quot;</span>,*((<span class="type">uint32_t</span>*)(ebp + i * <span class="number">4</span>)));</span><br><span class="line">&#125;</span><br><span class="line">cprintf(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以得到输出如下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230715173226989.png" alt="image-20230715173226989" /></p><h1 id="exercise-12"><a class="markdownIt-Anchor" href="#exercise-12"></a> Exercise 12</h1><p>这个练习只需要添加调试信息的打印即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span></span><br><span class="line"><span class="title function_">mon_backtrace</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv, <span class="keyword">struct</span> Trapframe *tf)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Your code here.</span></span><br><span class="line"><span class="type">uint32_t</span> ebp,eip;</span><br><span class="line"><span class="keyword">for</span>(ebp = read_ebp();ebp != <span class="number">0</span> ; ebp = *((<span class="type">uint32_t</span>*)ebp))&#123;</span><br><span class="line">eip = *(<span class="type">uint32_t</span>*)(ebp + <span class="number">4</span>);</span><br><span class="line">cprintf(<span class="string">&quot;ebp %x eip %x args &quot;</span>,ebp,eip);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt; <span class="number">7</span> ; i++)&#123;</span><br><span class="line">cprintf(<span class="string">&quot;%08x &quot;</span>,*((<span class="type">uint32_t</span>*)(ebp + i * <span class="number">4</span>)));</span><br><span class="line">&#125;</span><br><span class="line">cprintf(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Eipdebuginfo</span> <span class="title">info</span>;</span></span><br><span class="line">debuginfo_eip(eip,&amp;info);</span><br><span class="line">cprintf(<span class="string">&quot;\t%s:%d: %.*s+%d\n&quot;</span>,info.eip_file,info.eip_line,info.eip_fn_namelen,info.eip_fn_name,info.eip_fn_addr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mit-6.828 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux搭建dosbox环境</title>
      <link href="/2023/06/29/linux%E6%90%AD%E5%BB%BAdosbox%E7%8E%AF%E5%A2%83/"/>
      <url>/2023/06/29/linux%E6%90%AD%E5%BB%BAdosbox%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>dosbox能够让我们在现代os上使用早期dos环境。</p><p>dos环境下的汇编是比较友好的，dos本身简单的机制也有利于我们对系统有初步的理解。</p><p>下面我们来在linux环境中搭建dosbox和其汇编环境。</p><h1 id="安装dosbox"><a class="markdownIt-Anchor" href="#安装dosbox"></a> 安装dosbox</h1><p>我们直接使用包管理工具安装dosbox即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install dosbox <span class="comment"># ubuntu</span></span></span><br></pre></td></tr></table></figure><p>安装完成以后我们需要修改一些配置。</p><p>我们需要挂载一个宿主机的位置到dosbox的d盘，这样可以实现两者之间文件的互通。</p><p>我们找到dosbox的配置文件<code>~/.dosbox/dosbox-[version].conf</code>，添加如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount d 需要被挂载的位置</span><br><span class="line">d:    </span><br></pre></td></tr></table></figure><h1 id="汇编环境搭建"><a class="markdownIt-Anchor" href="#汇编环境搭建"></a> 汇编环境搭建</h1><p>在本博客中我们使用nasm来作为编译器。</p><p>我们先下载nasm和debug工具，点击下面的链接下载。</p><p><a href="https://sky-public-resource.oss-cn-hangzhou.aliyuncs.com/nasm-dos.tar.gz">https://sky-public-resource.oss-cn-hangzhou.aliyuncs.com/nasm-dos.tar.gz</a></p><p>下载完成以后我们将压缩包中的内容解压到我们挂载的目录，这样就大功告成了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu美化macos主题</title>
      <link href="/2023/06/08/ubuntu%E7%BE%8E%E5%8C%96macos%E4%B8%BB%E9%A2%98/"/>
      <url>/2023/06/08/ubuntu%E7%BE%8E%E5%8C%96macos%E4%B8%BB%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>最近突然想美化一下自己ubuntu的风格，想试一试macos风格的ubuntu，本博客记录这次的美化过程。</p><p>视频参考：</p><p><a href="https://www.bilibili.com/video/BV1gT411m7FF/?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1gT411m7FF/?spm_id_from=333.337.search-card.all.click</a></p><p>此外先下载一下需要的文件：</p><p><a href="https://sky-public-resource.oss-cn-hangzhou.aliyuncs.com/ubunmac.zip">https://sky-public-resource.oss-cn-hangzhou.aliyuncs.com/ubunmac.zip</a></p><p>下面是美化过程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt update &amp;&amp; <span class="built_in">sudo</span> apt upgrade</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install gnome-tweaks gnome-shell-extensions -y</span></span><br></pre></td></tr></table></figure><p>打开火狐浏览器，在插件搜索<code>gnome shell</code>并安装</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230609082608796.png" alt="image-20230609082608796" /></p><p>然后进入<code>gnome</code>插件下载网址下载gnome插件</p><p><a href="https://extensions.gnome.org/">https://extensions.gnome.org/</a></p><p>下载插件</p><ul><li><code>User Themes</code></li></ul><p>解压之前下载的<code>WhiteSur-gtk-theme-master.zip</code></p><p>进入到目录执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./install.sh -t all -N glassy -s 220</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> ./tweaks.sh -g</span></span><br></pre></td></tr></table></figure><p>然后在家目录下新建<code>.icons</code>目录，将<code>Mkos-Big-Sur-master</code>文件解压到目录下。</p><p>进入到<code>设置外观</code>，修改配置如下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230609085510969.png" alt="image-20230609085510969" /></p><p>然后打开菜单，打开优化，设置如下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230609085931409.png" alt="image-20230609085931409" /></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230609090010154.png" alt="image-20230609090010154" /></p><p>重新回到我们的<code>gnome</code>插件网页，下载如下插件</p><ul><li><p><code>Blur my shell</code></p><p>修改配置如下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230609090224061.png" alt="image-20230609090224061" /></p></li><li><p><code>frippery move clock</code></p></li><li><p><code>lock screen background  </code></p></li></ul><p>再更换桌面壁纸为压缩包中的图片</p><p>接下来执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nautilus</span><br></pre></td></tr></table></figure><p>进入到<code>/usr/share/plymouth/themes</code></p><p>修改<code>default.plymouth</code>中的配置</p><p><code>WatermarkVerticalAlignment=.5</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tmux使用教程</title>
      <link href="/2023/06/07/tmux%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2023/06/07/tmux%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>在传统的终端使用中，一个终端窗口是与一个会话绑定的，会话是与终端中启动的进程是连接在一起，这就意味着如果你关闭了一个终端，那么其内部的进程也会终止，而<code>tmux</code>就是一个可以将终端与会话解绑的工具，在此基础上，<code>tmux</code>可以对终端进行各种各样的操作。</p><h1 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h1><p>Tmux一般需要自己安装，用包管理工具直接安装即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu 或 Debian</span></span><br><span class="line">$ <span class="built_in">sudo</span> apt-get install tmux</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS 或 Fedora</span></span><br><span class="line">$ <span class="built_in">sudo</span> yum install tmux</span><br><span class="line"></span><br><span class="line"><span class="comment"># Mac</span></span><br><span class="line">$ brew install tmux</span><br></pre></td></tr></table></figure><p>我们输入<code>tmux</code>，就可以进入<code>tmux</code>窗口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tmux</span></span><br></pre></td></tr></table></figure><p>按下<code>exit</code>可以退出<code>tmux</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">exit</span></span></span><br></pre></td></tr></table></figure><p>我们在tmux窗口中输入<code>tmux detach</code>可以将会话与终端分离，然后退出tmux</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tmux detach</span></span><br></pre></td></tr></table></figure><p>然后我们可以在需要的时候重新接入会话</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tmux attach -t 0</span></span><br></pre></td></tr></table></figure><h1 id="会话管理"><a class="markdownIt-Anchor" href="#会话管理"></a> 会话管理</h1><h3 id="31-新建会话"><a class="markdownIt-Anchor" href="#31-新建会话"></a> 3.1 新建会话</h3><p>第一个启动的 Tmux 窗口，编号是<code>0</code>，第二个窗口的编号是<code>1</code>，以此类推。这些窗口对应的会话，就是 0 号会话、1 号会话。</p><p>使用编号区分会话，不太直观，更好的方法是为会话起名。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmux new -s &lt;session-name&gt;</span><br></pre></td></tr></table></figure></blockquote><p>上面命令新建一个指定名称的会话。</p><h3 id="32-分离会话"><a class="markdownIt-Anchor" href="#32-分离会话"></a> 3.2 分离会话</h3><p>在 Tmux 窗口中，按下<code>Ctrl+b d</code>或者输入<code>tmux detach</code>命令，就会将当前会话与窗口分离。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmux detach</span><br></pre></td></tr></table></figure></blockquote><p>上面命令执行后，就会退出当前 Tmux 窗口，但是会话和里面的进程仍然在后台运行。</p><p><code>tmux ls</code>命令可以查看当前所有的 Tmux 会话。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ tmux <span class="built_in">ls</span></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">$ tmux list-session</span><br></pre></td></tr></table></figure></blockquote><h3 id="33-接入会话"><a class="markdownIt-Anchor" href="#33-接入会话"></a> 3.3 接入会话</h3><p><code>tmux attach</code>命令用于重新接入某个已存在的会话。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用会话编号</span></span><br><span class="line">$ tmux attach -t 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用会话名称</span></span><br><span class="line">$ tmux attach -t &lt;session-name&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="34-杀死会话"><a class="markdownIt-Anchor" href="#34-杀死会话"></a> 3.4 杀死会话</h3><p><code>tmux kill-session</code>命令用于杀死某个会话。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用会话编号</span></span><br><span class="line">$ tmux kill-session -t 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用会话名称</span></span><br><span class="line">$ tmux kill-session -t &lt;session-name&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="35-切换会话"><a class="markdownIt-Anchor" href="#35-切换会话"></a> 3.5 切换会话</h3><p><code>tmux switch</code>命令用于切换会话。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用会话编号</span></span><br><span class="line">$ tmux switch -t 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用会话名称</span></span><br><span class="line">$ tmux switch -t &lt;session-name&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="36-重命名会话"><a class="markdownIt-Anchor" href="#36-重命名会话"></a> 3.6 重命名会话</h3><p><code>tmux rename-session</code>命令用于重命名会话。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmux rename-session -t 0 &lt;new-name&gt;</span><br></pre></td></tr></table></figure></blockquote><p>上面命令将0号会话重命名。</p><h3 id="37-会话快捷键"><a class="markdownIt-Anchor" href="#37-会话快捷键"></a> 3.7 会话快捷键</h3><p>下面是一些会话相关的快捷键。</p><blockquote><ul><li><code>Ctrl+b d</code>：分离当前会话。</li><li><code>Ctrl+b s</code>：列出所有会话。</li><li><code>Ctrl+b $</code>：重命名当前会话。</li></ul></blockquote><h1 id="窗格管理"><a class="markdownIt-Anchor" href="#窗格管理"></a> 窗格管理</h1><p>Tmux 可以将窗口分成多个窗格（pane），每个窗格运行不同的命令。以下命令都是在 Tmux 窗口中执行。</p><p><code>tmux split-window</code>命令用来划分窗格。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 划分上下两个窗格</span></span><br><span class="line">$ tmux split-window</span><br><span class="line"></span><br><span class="line"><span class="comment"># 划分左右两个窗格</span></span><br><span class="line">$ tmux split-window -h</span><br></pre></td></tr></table></figure></blockquote><h3 id="52-移动光标"><a class="markdownIt-Anchor" href="#52-移动光标"></a> 5.2 移动光标</h3><p><code>tmux select-pane</code>命令用来移动光标位置。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 光标切换到上方窗格</span></span><br><span class="line">$ tmux select-pane -U</span><br><span class="line"></span><br><span class="line"><span class="comment"># 光标切换到下方窗格</span></span><br><span class="line">$ tmux select-pane -D</span><br><span class="line"></span><br><span class="line"><span class="comment"># 光标切换到左边窗格</span></span><br><span class="line">$ tmux select-pane -L</span><br><span class="line"></span><br><span class="line"><span class="comment"># 光标切换到右边窗格</span></span><br><span class="line">$ tmux select-pane -R</span><br></pre></td></tr></table></figure></blockquote><h3 id="53-交换窗格位置"><a class="markdownIt-Anchor" href="#53-交换窗格位置"></a> 5.3 交换窗格位置</h3><p><code>tmux swap-pane</code>命令用来交换窗格位置。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当前窗格上移</span></span><br><span class="line">$ tmux swap-pane -U</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前窗格下移</span></span><br><span class="line">$ tmux swap-pane -D</span><br></pre></td></tr></table></figure></blockquote><h3 id="54-窗格快捷键"><a class="markdownIt-Anchor" href="#54-窗格快捷键"></a> 5.4 窗格快捷键</h3><p>下面是一些窗格操作的快捷键。</p><blockquote><ul><li><code>Ctrl+b %</code>：划分左右两个窗格。</li><li><code>Ctrl+b &quot;</code>：划分上下两个窗格。</li><li><code>Ctrl+b &lt;arrow key&gt;</code>：光标切换到其他窗格。<code>&lt;arrow key&gt;</code>是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键<code>↓</code>。</li><li><code>Ctrl+b ;</code>：光标切换到上一个窗格。</li><li><code>Ctrl+b o</code>：光标切换到下一个窗格。</li><li><code>Ctrl+b &#123;</code>：当前窗格与上一个窗格交换位置。</li><li><code>Ctrl+b &#125;</code>：当前窗格与下一个窗格交换位x置。</li><li><code>Ctrl+b Ctrl+o</code>：所有窗格向前移动一个位置，第一个窗格变成最后一个窗格。</li><li><code>Ctrl+b Alt+o</code>：所有窗格向后移动一个位置，最后一个窗格变成第一个窗格。</li><li><code>Ctrl+b x</code>：关闭当前窗格。</li><li><code>Ctrl+b !</code>：将当前窗格拆分为一个独立窗口。</li><li><code>Ctrl+b z</code>：当前窗格全屏显示，再使用一次会变回原来大小。</li><li><code>Ctrl+b Ctrl+&lt;arrow key&gt;</code>：按箭头方向调整窗格大小。</li><li><code>Ctrl+b q</code>：显示窗格编号。</li></ul></blockquote><h1 id="窗口管理"><a class="markdownIt-Anchor" href="#窗口管理"></a> 窗口管理</h1><p>除了将一个窗口划分成多个窗格，Tmux 也允许新建多个窗口。</p><h3 id="61-新建窗口"><a class="markdownIt-Anchor" href="#61-新建窗口"></a> 6.1 新建窗口</h3><p><code>tmux new-window</code>命令用来创建新窗口。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ tmux new-window</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个指定名称的窗口</span></span><br><span class="line">$ tmux new-window -n &lt;window-name&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="62-切换窗口"><a class="markdownIt-Anchor" href="#62-切换窗口"></a> 6.2 切换窗口</h3><p><code>tmux select-window</code>命令用来切换窗口。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换到指定编号的窗口</span></span><br><span class="line">$ tmux select-window -t &lt;window-number&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到指定名称的窗口</span></span><br><span class="line">$ tmux select-window -t &lt;window-name&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="63-重命名窗口"><a class="markdownIt-Anchor" href="#63-重命名窗口"></a> 6.3 重命名窗口</h3><p><code>tmux rename-window</code>命令用于为当前窗口起名（或重命名）。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmux rename-window &lt;new-name&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="64-窗口快捷键"><a class="markdownIt-Anchor" href="#64-窗口快捷键"></a> 6.4 窗口快捷键</h3><p>下面是一些窗口操作的快捷键。</p><blockquote><ul><li><code>Ctrl+b c</code>：创建一个新窗口，状态栏会显示多个窗口的信息。</li><li><code>Ctrl+b p</code>：切换到上一个窗口（按照状态栏上的顺序）。</li><li><code>Ctrl+b n</code>：切换到下一个窗口。</li><li><code>Ctrl+b &lt;number&gt;</code>：切换到指定编号的窗口，其中的<code>&lt;number&gt;</code>是状态栏上的窗口编号。</li><li><code>Ctrl+b w</code>：从列表中选择窗口。</li><li><code>Ctrl+b ,</code>：窗口重命名。</li></ul></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> tmux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim的基本用法</title>
      <link href="/2023/06/07/vim%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
      <url>/2023/06/07/vim%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>vim是一款Linux下的文本编辑器，当我们需要在终端环境下编辑文本时，vim就是我们最好的选择。vim看起来似乎对初学者不太友，但是想要上手使用vim并不困难。</p><h1 id="认识vim"><a class="markdownIt-Anchor" href="#认识vim"></a> 认识vim</h1><p>我们先来宏观的认识vim，vim常用的有四个模式：</p><ol><li>正常模式（Normal-mode）</li><li>插入模式（Insert-mode）</li><li>命令模式（Command-mode）</li><li>可视模式（Visual-mode）</li></ol><h2 id="正常模式"><a class="markdownIt-Anchor" href="#正常模式"></a> 正常模式</h2><p>当我们启动vim时，vim就处于正常模式，在正常模式下我们不能直接编辑文件，只能通过命令的形式使用复制，粘贴，剪切等操作来编辑文件。</p><p>在其它任何模式下，我们都可以通过按下<code>Esc</code>键来返回正常模式（如果不行就按两下），<code>其它模式都需要在正常模式</code>下按下相应的键位触发。</p><h2 id="插入模式"><a class="markdownIt-Anchor" href="#插入模式"></a> 插入模式</h2><p>在正常模式下我们按下一些键位就可以进入插入模式，这些按键较多，我们在基本操作中详细介绍这一部分的内容。</p><p>比较常用的是<code>i</code>健，按下<code>i</code>之后我们就可以进入插入模式，此时我们可以像平时编辑文件一样操作我们的文件。</p><h2 id="命令模式"><a class="markdownIt-Anchor" href="#命令模式"></a> 命令模式</h2><p>在按下<code>/</code>或者<code>:</code>键之后vim会进入命令模式，在命令模式下我们可以执行vim提供给我们的指令，具体的指令会在下面介绍。</p><h2 id="可视模式"><a class="markdownIt-Anchor" href="#可视模式"></a> 可视模式</h2><p>按下<code>v</code>键即可进入可视模式，在可视模式下我们可以操作块状区域。</p><h1 id="vim的基本操作"><a class="markdownIt-Anchor" href="#vim的基本操作"></a> vim的基本操作</h1><p>下面就开始介绍我们该如何使用vim</p><h2 id="快速开始"><a class="markdownIt-Anchor" href="#快速开始"></a> 快速开始</h2><p>我们先来介绍如何使用vim打开，编辑，保存文件，如果只是想在vim下简单的修改文件，这个部分的几个命令就足够了。</p><ul><li>vim打开文件：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim file</span></span><br></pre></td></tr></table></figure><ul><li>vim修改文件：</li></ul><p>我们在vim正常模式下按下<code>i</code>进入插入模式，此时你可以正常编辑文件。</p><ul><li>保存文件</li></ul><p>先退出至正常模式，然后输入<code>:</code>进入命令模式，我们就可以键入vim命令：</p><ol><li><code>w</code>：保存文件</li><li><code>q</code>：退出文件</li><li><code>!</code>：强制操作</li></ol><p>如果不考虑效率问题，上面的三个操作已经可以满足你大部分的需求。</p><p>但是vim真正的强大之处就是强大的编辑能力，接下来我们继续了解vim的操作。</p><h2 id="vim多窗口操作"><a class="markdownIt-Anchor" href="#vim多窗口操作"></a> vim多窗口操作</h2><p>vim打开多个文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim file1 file2 file3 ...</span> </span><br></pre></td></tr></table></figure><p>此时我们就同时打开了多个文件，我们可以用下面的方式操作这些打开的文件：</p><p>查看vim打开的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:ls</span><br></pre></td></tr></table></figure><p>选择显示其它文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选择进入第二个文件</span></span><br><span class="line">:b2</span><br><span class="line"><span class="comment"># 进入下一个打开的文件</span></span><br><span class="line">:bn</span><br><span class="line"><span class="comment"># 进入上一个打开的文件</span></span><br><span class="line">:bp</span><br></pre></td></tr></table></figure><p>此外，我们可以使用分屏命令在一个终端中显示多个文件</p><p>下面的命令可以左右分屏：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim -O file1 file2 ...</span></span><br></pre></td></tr></table></figure><p>上下分屏：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim -o file1 file2 ...</span></span><br></pre></td></tr></table></figure><p>但是这样分屏不太灵活，使用vim内置命令是更好的选择，首先我们要记住一个重要的组合键<code>Ctrl + w</code>，这是很多分屏操作的前置按键。</p><p>先按下<code>Ctrl + w</code>，然后松开以后再按下<code>s</code>，将当前文件上下分割。</p><p><code>Ctrl + w</code>，<code>s</code>：上下分割文件。</p><p><code>Ctrl + w v</code>：左右分割文件</p><p><code>:sp file</code>：上下展示当前文件和新打开文件</p><p><code>:vsp file</code>：左右展示当前文件和新打开文件</p><p>我们现在已经开启多个窗口，我们还需要灵活的移动光标以操作多窗口</p><p>1.切换左右分屏的光标 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + w h</span><br></pre></td></tr></table></figure><p>将当前光标定位到左边的屏幕</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + w l</span><br></pre></td></tr></table></figure><p>将当前的光标定位到右边的屏幕</p><p>2.移动左右分屏 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + w H</span><br></pre></td></tr></table></figure><p>将当前的分屏移动到左边</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + w L</span><br></pre></td></tr></table></figure><p>将当前的分屏移动到右边</p><p>3.切换上下分屏的光标 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + w j</span><br></pre></td></tr></table></figure><p>将当前的光标移动到下面的分屏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + w k</span><br></pre></td></tr></table></figure><p>将当前光标移动到上面的分屏</p><p>4.移动上下分屏：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + w J</span><br></pre></td></tr></table></figure><p>将当前的分屏移动到下面的分屏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + w K</span><br></pre></td></tr></table></figure><p>将当前的分屏移动到上面的分屏</p><h1 id="vim的模式"><a class="markdownIt-Anchor" href="#vim的模式"></a> vim的模式</h1><p>下面来更详细的介绍一下正常模式，插入模式，命令模式和可视模式的用法。</p><h2 id="正常模式-2"><a class="markdownIt-Anchor" href="#正常模式-2"></a> 正常模式</h2><p>正常模式是vim的默认模式，在正常模式中有很多快捷键，是否熟练掌握这些快捷键很大程度上决定了我们vim的效率。</p><h3 id="移动光标"><a class="markdownIt-Anchor" href="#移动光标"></a> 移动光标</h3><p><code>h</code>：左</p><p><code>j</code>：下</p><p><code>k</code>：上</p><p><code>l</code>：右</p><h3 id="行内移动光标"><a class="markdownIt-Anchor" href="#行内移动光标"></a> 行内移动光标</h3><p><code>0 </code>移动到行头</p><p><code>^</code> 移动到本行的第一个不是 blank 字符</p><p><code>$</code> 移动到行尾</p><p><code>g_</code> 移动到本行最后一个不是 blank 字符的位置</p><p><code>w</code> 光标移动到下一个单词的开头</p><p><code>e</code> 光标移动到下一个单词的结尾</p><p><code>fa</code> 移动到本行下一个为 a 的字符处，fb 移动到下一个为 b 的字符处</p><p><code>nfa</code> 移动到本行光标处开始的第 n 个 字符为 a 的地方（n 是 1，2，3，4 … 数字）</p><p><code>Fa</code> 同 <code>fa</code> 一样，光标移动方向同 <code>fa</code> 相反</p><p><code>nFa</code> 同 <code>nfa</code> 类似，光标移动方向同 <code>nfa</code>相反</p><p><code>ta</code> 移动光标至 a 字符的前一个字符</p><p><code>nta</code> 移动到第二个 a 字符的前一个字符处</p><p><code>Ta</code> 同 <code>ta</code> 移动光标方向相反</p><p><code>nTa</code> 同 <code>nta</code> 移动光标方向相反</p><p><code>;</code> 和<code>,</code> 当使用 f, F, t ,T, 关键字指定字符跳转的时候，使用 <code>；</code>可以快速跳转到下一个指定的字符，<code>, </code>是跳到前一个指定的字符</p><h3 id="跨行移动光标"><a class="markdownIt-Anchor" href="#跨行移动光标"></a> 跨行移动光标</h3><p><code>nG </code>光标定位到第 n 行的行首</p><p><code>gg </code>光标定位到第一行的行首</p><p><code>G </code>光标定位到最后一行的行首</p><p><code>H </code>光标定位到当前屏幕的第一行行首</p><p><code>M</code> 光标移动到当前屏幕的中间</p><p><code>L</code> 光标移动到当前屏幕的尾部</p><p><code>zt</code> 把当前行移动到当前屏幕的最上方，也就是第一行</p><p><code>zz</code> 把当前行移动到当前屏幕的中间</p><p><code>zb</code> 把当前行移动到当前屏幕的尾部</p><p><code>%</code> 匹配括号移动，包括 ( , { , [ 需要把光标先移动到括号上</p><p><code>*</code> 和 <code>#</code> 匹配光标当前所在的单词，移动光标到下一个（或者上一个）匹配的单词（ <code>*</code> 是下一个，<code>#</code> 是上一个）</p><h3 id="翻页"><a class="markdownIt-Anchor" href="#翻页"></a> 翻页</h3><p><code>ctrl+f</code> 查看下一页内容</p><p><code>ctrl+b</code> 查看上一页内容</p><h3 id="复制粘贴删除"><a class="markdownIt-Anchor" href="#复制粘贴删除"></a> 复制，粘贴，删除</h3><p>三个重要的快捷键 <code>d</code> , <code>y</code> , <code>p</code></p><p><code>d</code> 是删除的意思，通常搭配一个字符 ( 删除范围 ) 实现删除功能，常用的如下：</p><p><code>dw</code> 删除一个单词</p><p><code>dnw</code> 删除 n 个单词，</p><p><code>dfa</code> 删除光标处到下一个 a 的字符处（ fa 定位光标到 a 处 ）</p><p><code>dnfa</code> 删除光标处到第 n 个 a 的字符处</p><p><code>dd</code> 删除一整行</p><p><code>ndd</code> 删除光标处开始的 n 行</p><p><code>d$</code> 删除光标到本行的结尾</p><p><code>dH</code> 删除屏幕显示的第一行文本到光标所在的行</p><p><code>dG</code> 删除光标所在行到文本的结束</p><p><code>y</code> 是复制的意思，通常搭配一个字符（复制范围）实现复制的功能，常用的如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yw` 复制一个单词，还有 `ynw</span><br><span class="line">yfa` 复制光标到下一个 a 的字符处,还有`ynfa</span><br><span class="line">yy` 复制一行，还有 `nyy</span><br></pre></td></tr></table></figure><p><code>y$</code> 复制光标到本号的结尾</p><p><code>yH</code> 复制屏幕显示的第一行文本到光标所在的行</p><p><code>yG</code> 复制光标所在行到文本的结束</p><p><code>p</code> ，<code>P</code>是黏贴的意思，当执行完复制或者黏贴的命令以后，VIM 会把文本寄存起来。</p><p><code>p</code> 在光标后开始黏贴</p><p><code>P</code> 大写的 P 光标前开始粘贴</p><h3 id="撤销与恢复"><a class="markdownIt-Anchor" href="#撤销与恢复"></a> 撤销与恢复</h3><p><code>u</code> 撤销刚才的操作</p><p><code>ctrl + r</code> 恢复撤销操作</p><h3 id="大小写转换"><a class="markdownIt-Anchor" href="#大小写转换"></a> 大小写转换</h3><p><code>~</code>将光标下的字母改变大小写<br /><code>3~</code>将光标位置开始的3个字母改变其大小写<br /><code>g~~</code>改变当前行字母的大小写<br /><code>gUU</code> 将当前行的字母改成大写<br /><code>guu</code> 将当前行的字母全改成小写</p><p><code>3gUU</code> 将从光标开始到下面3行字母改成大写<br /><code>gUw</code> 将光标下的单词改成大写。<br /><code>guw</code> 将光标下的单词改成小写</p><h2 id="插入模式-2"><a class="markdownIt-Anchor" href="#插入模式-2"></a> 插入模式</h2><p>请记住下面几个常用启动录入文本的键盘字符 <code>i,I,a,A,o,O,s,S</code> 。</p><p><code>i</code>是在光标所在的字符之前插入需要录入的文本。</p><p><code>I</code> 是在光标所在行的行首插入需要录入的文本。</p><p><code>a</code> 是在光标所在的字符之后插入需要录入的文本。</p><p><code>A</code> 是在光标所在行的行尾插入需要录入的文本。</p><p><code>o</code> 是光标所在行的下一行行首插入需要录入的文本。</p><p><code>O</code> 是光标所在行的上一行行首插入需要录入的文本。</p><p><code>s</code> 删除光标所在处的字符然后插入需要录入的文本。</p><p><code>S</code> 删除光标所在行，在当前行的行首开始插入需要录入的文本。</p><h2 id="命令模式-2"><a class="markdownIt-Anchor" href="#命令模式-2"></a> 命令模式</h2><p>下面介绍一些常用的内置命令</p><p><code>set nu</code>：插入行号</p><p><code>set nonu</code>：删除行号</p><p><code>:n</code>：跳转至n行</p><p><code>/&#123;目标字符串&#125;</code>：查找目标字符串，在执行该命令后，按下<code>n</code>跳转至下一个匹配，<code>N</code>跳转至上一个匹配</p><p><code>:n1,n2d</code>：删除<code>n1~n2</code>范围内的行</p><p><code>:&#123;作用范围&#125;s/&#123;目标&#125;/&#123;替换&#125;/&#123;替换的标志&#125;</code>：这是替换命令的格式</p><p><code>:s/&#123;target&#125;/&#123;replace&#125;/g</code>：替换当前行所有的目标字符串</p><p><code>:%s/&#123;target&#125;/&#123;replace&#125;/g</code>：替换全局的匹配字符串</p><p><code>:s/&#123;target&#125;/&#123;replace&#125;</code>：只替换当前行匹配到的第一个目标字符串</p><p><code>:%s/&#123;target&#125;/&#123;replace&#125;</code>：替换全局每一个的第一个匹配字符串（不是全局的第一个）</p><p><code>:n1,n2s/&#123;target&#125;/&#123;replace&#125;/g</code>：替换<code>n1~n2</code>范围内的匹配字符串</p><p><code>:'&lt;,'&gt;s/&#123;target&#125;/&#123;replace&#125;/g</code>：在可视模式下，在我们选择中区域以后直接按下<code>:</code>会补全为<code>:'&lt;,'&gt;</code>，会替换选中区域的匹配字符串</p><p><code>:!command</code>：在命令模式下执行Linux命令</p><p><code>:r !command</code>：将命令的执行结果写入到光标位置</p><h2 id="可视模式-2"><a class="markdownIt-Anchor" href="#可视模式-2"></a> 可视模式</h2><p>在可视模式下，我们可以通过<code>hjkl</code>上下左右移动区域，这与正常模式一致。</p><p><code>h</code>：左</p><p><code>j</code>：下</p><p><code>k</code>：上</p><p><code>l</code>：右</p><p>在选好区域后，我们可以退出可视模式进行复制，删除等操作。</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建riscv32环境</title>
      <link href="/2023/06/03/%E6%90%AD%E5%BB%BAriscv32%E7%8E%AF%E5%A2%83/"/>
      <url>/2023/06/03/%E6%90%AD%E5%BB%BAriscv32%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>hdu给我们提供的虚拟机非常庞大，而且放在百度网盘上😋，极大的占用了我们的时间，金钱还有本地空间，虽然不清楚学校的虚拟机到底提供了多少东西，但实际上riscv32所需的环境并不算太多，既然如此，为什么不在本地自己搭建一个呢？</p><p>以下操作均在<code>ubuntu 22.04</code>下执行。</p><p>要搭建环境，我们需要编译riscv32的环境和运行riscv32的环境，下面我们就分两个部分来搭建环境。</p><h1 id="riscv-gnu-tool"><a class="markdownIt-Anchor" href="#riscv-gnu-tool"></a> riscv-gnu-tool</h1><p>在实验中我们需要riscv32的汇编，反汇编等操作，这一部分的环境由riscv-gnu-tool提供，这一部分的工具我们可以直接下载。</p><p><a href="https://github.com/riscv-collab/riscv-gnu-toolchain/releases/tag/2023.06.02">https://github.com/riscv-collab/riscv-gnu-toolchain/releases/tag/2023.06.02</a></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230603132556554.png" alt="image-20230603132556554" /></p><p>下载解压后即可</p><h1 id="qemu模拟器"><a class="markdownIt-Anchor" href="#qemu模拟器"></a> qemu模拟器</h1><p>我们通过qemu来提供riscv32的运行环境，首先我们下载qemu的源代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wget https://download.qemu.org/qemu-8.0.2.tar.xz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar xvJf qemu-8.0.2.tar.xz</span></span><br></pre></td></tr></table></figure><p>下载一些依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install autoconf automake autotools-dev curl libmpc-dev libmpfr-dev libgmp-dev \</span><br><span class="line">                 gawk build-essential bison flex texinfo gperf libtool patchutils bc \</span><br><span class="line">                 zlib1g-dev libexpat-dev git \</span><br><span class="line">                 libglib2.0-dev libfdt-dev libpixman-1-dev \</span><br><span class="line">                 libncurses5-dev libncursesw5-dev</span><br></pre></td></tr></table></figure><p>创建一个build输出目录，最后的可执行文件会放在build目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> build</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> qemu-8.0.2</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./configure --target-list=riscv32-linux-user --prefix=<span class="variable">$&#123;build所在位置&#125;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make install</span></span><br></pre></td></tr></table></figure><p>等待编译完成，我们进入build目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ../build/bin</span></span><br></pre></td></tr></table></figure><p>写一个hello.c测试我们的环境</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">riscv32-unknown-elf-gcc hello.c -o hello</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./qemu-riscv32 hello</span></span><br></pre></td></tr></table></figure><p>看到输出就成功啦😎</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hdu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> riscv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lab2-编译内核并添加系统调用</title>
      <link href="/2023/06/02/lab2-%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8%E5%B9%B6%E6%B7%BB%E5%8A%A0%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/"/>
      <url>/2023/06/02/lab2-%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8%E5%B9%B6%E6%B7%BB%E5%8A%A0%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>在开始之前，请现配置好基本的环境，请你先完成下面博客中的qemu和busybox部分</p><a href="/2023/06/02/%E7%BC%96%E8%AF%91x86_64%20linux%E5%B9%B6%E8%BF%90%E8%A1%8C%E5%9C%A8qemu%E4%B8%8A/" title="编译x86_64 linux并运行在qemu上">编译x86_64 linux并运行在qemu上</a><p>因为内核需要添加系统调用，我们需要重新编译。</p><p>本实验均在<code>ubuntu 22.04</code>下进行，编译的内核版本是<code>5.19</code>（低版本内核会在添加系统调用时略有不同）。</p><h1 id="添加系统调用"><a class="markdownIt-Anchor" href="#添加系统调用"></a> 添加系统调用</h1><ol><li></li></ol><p><code>linux-5.19/arch/x86/entry/syscalls/syscall_64.tbl</code></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602230645731.png" alt="image-20230602230645731" /></p><p>添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">33564mysetnicesys_mysetnice</span><br></pre></td></tr></table></figure><ol start="2"><li></li></ol><p><code>linux-5.19/include/linux/syscalls.h</code></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602231000337.png" alt="image-20230602231000337" /></p><p>添加</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">asmlinkage <span class="type">long</span> <span class="title function_">sys_mysetnice</span><span class="params">(<span class="type">pid_t</span> pid, <span class="type">int</span> flag, <span class="type">int</span> nicevaluse, <span class="type">void</span> __user* prio, <span class="type">void</span> __user* nice)</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li></li></ol><p><code>linux-5.19/kernel/sys.c</code></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602231154502.png" alt="image-20230602231154502" /></p><p>在最后一个<code>#endif</code>前加上下面的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 置于sys.c的最末端（在‘#endif’之前</span></span><br><span class="line">SYSCALL_DEFINE5(mysetnice, <span class="type">pid_t</span>, pid, <span class="type">int</span>, flag, <span class="type">int</span>, nicevalue, <span class="type">void</span> __user *,</span><br><span class="line">prio, <span class="type">void</span> __user *, nice) &#123;</span><br><span class="line">    <span class="type">int</span> cur_prio, cur_nice;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">pid</span> *<span class="title">ppid</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">task_struct</span> *<span class="title">pcb</span>;</span></span><br><span class="line">    <span class="type">int</span> res;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过进程PID号找到进程的PID结构体，如果ppid为空指针则代表不存在与进程号与pid相同的进程，此时返回EFAULT（</span></span><br><span class="line">    <span class="comment">// 我编译的时候这个if判断并没有加进去，想做出上述判断的可以将注释删去，就逻辑本身而言没有问题-_-</span></span><br><span class="line">    <span class="comment">// 但我无法保证最后是否会出问题，因为我没有自己尝试过</span></span><br><span class="line">    ppid = find_get_pid(pid);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    if (ppid == NULL)</span></span><br><span class="line"><span class="comment">        return EFAULT;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过进程的PID结构体，找到与之对应的进程控制块</span></span><br><span class="line">    pcb = pid_task(ppid, PIDTYPE_PID);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果flag=1则修改进程的nice值为nicevalue</span></span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">    set_user_nice(pcb, nicevalue);</span><br><span class="line">    &#125;  <span class="comment">// flag既不为1也不为0的时候，即flag出错，此时返回EFAULT</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (flag != <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> EFAULT;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取进程当前的最新nice值和prio值</span></span><br><span class="line">    cur_prio = task_prio(pcb);</span><br><span class="line">    cur_nice = task_nice(pcb);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 由于系统调用是在内核态下运行的，所有数据均为内核空间的数据，</span></span><br><span class="line">    <span class="comment">// 利用copy_to_user()函数将内核空间的数据复制到用户空间</span></span><br><span class="line">    res = copy_to_user(prio, &amp;cur_prio, <span class="keyword">sizeof</span>(cur_prio));</span><br><span class="line">    res = copy_to_user(nice, &amp;cur_nice, <span class="keyword">sizeof</span>(cur_nice));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="编译内核"><a class="markdownIt-Anchor" href="#编译内核"></a> 编译内核</h1><p>内核的编译步骤与<a href="/2023/06/02/%E7%BC%96%E8%AF%91x86_64%20linux%E5%B9%B6%E8%BF%90%E8%A1%8C%E5%9C%A8qemu%E4%B8%8A/" title="编译x86_64 linux并运行在qemu上">编译x86_64 linux并运行在qemu上</a>的编译步骤相同，不予介绍。</p><h1 id="测试添加的系统调用"><a class="markdownIt-Anchor" href="#测试添加的系统调用"></a> 测试添加的系统调用</h1><p>qemu请务必使用带动态链接库的根文件系统</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> mount rootfs-lib.img rootfs-lib</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> rootfs-lib</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> vim sys-demo.c</span></span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;unistd.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys/syscall.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _SYSCALL_MYSETNICE_ 335</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EFALUT 14</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> pid, flag, nicevalue;</span><br><span class="line">    <span class="type">int</span> prev_prio, prev_nice, cur_prio, cur_nice;</span><br><span class="line">    <span class="type">int</span> result;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input variable(pid, flag, nicevalue): &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;pid, &amp;flag, &amp;nicevalue);</span><br><span class="line">    </span><br><span class="line">    result = syscall(_SYSCALL_MYSETNICE_, pid, <span class="number">0</span>, nicevalue, &amp;prev_prio,</span><br><span class="line">                     &amp;prev_nice);</span><br><span class="line">    <span class="keyword">if</span> (result == EFALUT)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ERROR!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        syscall(_SYSCALL_MYSETNICE_, pid, <span class="number">1</span>, nicevalue, &amp;cur_prio, &amp;cur_nice);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Original priority is: [%d], original nice is [%d]\n&quot;</span>, prev_prio,</span><br><span class="line">               prev_nice);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Current priority is : [%d], current nice is [%d]\n&quot;</span>, cur_prio,</span><br><span class="line">               cur_nice);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Current priority is : [%d], current nice is [%d]\n&quot;</span>, prev_prio,</span><br><span class="line">               prev_nice);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> gcc sys-demo.c -o sys-demo</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ..</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">qemu-system-x86_64 -kernel linux-5.19/arch/x86/boot/bzImage -boot c -m 2048M -hda rootfs-lib.img -append <span class="string">&quot;root=/dev/sda rw console=ttyS0,115200 acpi=off nokaslr&quot;</span> -serial stdio -display none</span></span><br></pre></td></tr></table></figure><p>启动qemu之后启动<code>sys-demo</code>即可</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602232324866.png" alt="image-20230602232324866" /></p>]]></content>
      
      
      <categories>
          
          <category> hdu-os-lab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译x86_64 linux并运行在qemu上</title>
      <link href="/2023/06/02/%E7%BC%96%E8%AF%91x86_64%20linux%E5%B9%B6%E8%BF%90%E8%A1%8C%E5%9C%A8qemu%E4%B8%8A/"/>
      <url>/2023/06/02/%E7%BC%96%E8%AF%91x86_64%20linux%E5%B9%B6%E8%BF%90%E8%A1%8C%E5%9C%A8qemu%E4%B8%8A/</url>
      
        <content type="html"><![CDATA[<p>本节内容将会告诉你如何自己编译内核并且将这个内核运行在qemu模拟器上。在成功运行之后，我们可以自由的修改并验证我们的内核，以下操作均在<code>Ubntun 22.04</code>下完成。</p><p>在开始之前我们有一些需要注意的东西：</p><ol><li>在编译过程中，你会遇到各种各样的环境问题，造成的原因可能是多样的，尤其是在遇到这样比较复杂的任务时，所以你现在最好就做好长时间作战的心理准备，<code>更重要的是会自己使用搜索引擎</code>（还在用baidu的赶紧埋了😭），不要想着跟着做就能解决问题，下面我列出了一些高频的环境问题，当你遇到问题时可以回头过来看看：<ul><li>当你在编译内核时出现编译错误，大概率是缺少某个包，这个时候去网上搜索，安装对应的包一般就能解决问题了。</li><li>粗心导致的错误，这是一个漫长的过程，你极有可能在某一步输错了内容而导致整个内容的崩坏，这个一般难以检查，只能更加细心，尽量使用复制而不是自己输入。</li><li>…</li></ul></li><li>不要完全相信教程，一方面是教程本身的问题，一方面是我们的环境并不完全相同。</li></ol><p>为了完成我们的目标，我们需要编译完成三个项目：</p><ol><li>linux：提供内核</li><li>qemu：提供模拟环境</li><li>busybox：提供根文件系统和一些基本的系统工具</li></ol><p>下面我们一步一步来</p><h1 id="linux"><a class="markdownIt-Anchor" href="#linux"></a> linux</h1><p>我们去下面这个网站下载linux源码</p><p><a href="https://github.com/torvalds/linux">https://github.com/torvalds/linux</a></p><p>为了使遇到环境问题的可能性尽可能小，我们下载与我们当前系统版本相似的内核，用<code>uname -r</code>查看内核版本</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602153004363.png" alt="image-20230602153004363" /></p><p>可以看到我的linux内核版本是5.19，我们选择和和自己内核版本相同的linux源码，选择tag以后下载</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602153140796.png" alt="image-20230602153140796" /></p><p>我们先安装一些会用到的包（大概率是不够的）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install autoconf automake autotools-dev curl libmpc-dev libmpfr-dev libgmp-dev \</span></span><br><span class="line"><span class="language-bash">                 gawk build-essential bison flex texinfo gperf libtool patchutils bc \</span></span><br><span class="line"><span class="language-bash">                 zlib1g-dev libexpat-dev git \</span></span><br><span class="line"><span class="language-bash">                 libglib2.0-dev libfdt-dev libpixman-1-dev \</span></span><br><span class="line"><span class="language-bash">                 libncurses5-dev libncursesw5-dev libelf-dev</span></span><br></pre></td></tr></table></figure><p>下载完成后我们先创建一个总文件夹，名字可以随意，我这里就叫<code>hdu-os-lab</code>了，我们将linux源码解压到总文件夹下，然后进入linux文件夹，开始编译。</p><p>第一步创建x64默认的配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make ARCH=x86_64 x86_64_defconfig</span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602153618577.png" alt="image-20230602153618577" /></p><p>第二步进行进一步配置，默认即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make ARCH=x86_64 menuconfig</span></span><br></pre></td></tr></table></figure><p>进入到这个页面后<code>Save</code>然后<code>Exit</code>即可，如果出现报错大概率是你的终端太小了（物理），不足以容纳配置页面，将你的终端拉大一点就行了。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602153843373.png" alt="image-20230602153843373" /></p><p>第三部正式开始编译，这一部时间略久，5-10分钟左右（作者机子上）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make bzImage -j$(nproc) # -j 表示开启多线程编译，nproc是cpu的数量</span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602163737358.png" alt="image-20230602163737358" /></p><p>显示<code>ready</code>内核就编译好了</p><h1 id="qemu"><a class="markdownIt-Anchor" href="#qemu"></a> qemu</h1><p>qemu的部分有两种方法，第一种方法是用包管理工具直接安装，第二种方式是自己编译，在本文采用了后者，这里还是推荐大家使用前者。</p><h2 id="直接安装"><a class="markdownIt-Anchor" href="#直接安装"></a> 直接安装</h2><ul><li><strong>Arch:</strong> <code>pacman -S qemu</code></li><li><strong>Debian/Ubuntu:</strong> <code>apt-get install qemu</code></li><li><strong>Fedora:</strong> <code>dnf install @virtualization</code></li><li><strong>Gentoo:</strong> <code>emerge --ask app-emulation/qemu</code></li><li><strong>RHEL/CentOS:</strong> <code>yum install qemu-kvm</code></li><li><strong>SUSE:</strong> <code>zypper install qemu</code></li></ul><h2 id="自己编译"><a class="markdownIt-Anchor" href="#自己编译"></a> 自己编译</h2><p>下载源码，在本文中使用了<code>8.0.0</code>版本</p><p><a href="https://www.qemu.org/download/#source">https://www.qemu.org/download/#source</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> qemu-x64</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ../qemu-8.0.0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./configure --target-list=x86_64-softmmu --prefix=<span class="variable">$&#123;qemu-x64所在目录&#125;</span> <span class="comment"># 可执行文件最后会被放在这个目录下面</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make install</span></span><br></pre></td></tr></table></figure><p>下面是每个步骤成功的截图</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./configure --target-list=x86_64-softmmu --prefix=<span class="variable">$&#123;qemu-x64所在目录&#125;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602185718930.png" alt="image-20230602185718930" /></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make</span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602190638011.png" alt="image-20230602190638011" /></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make install</span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602190805645.png" alt="image-20230602190805645" /></p><p>然后把<code>qemu-x64下的bin目录</code>导出（export导出的环境变量只在当前shell有效），你也可以把环境变量写到<code>.bashrc</code>文件中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=&quot;$PATH:&#123;qemu-x64的bin目录&#125;&quot;</span><br></pre></td></tr></table></figure><h1 id="busybox"><a class="markdownIt-Anchor" href="#busybox"></a> busybox</h1><p>到了现在不知道你是不是已经经历了很多折磨😇，再坚持坚持，这里是最后一个部分了。</p><p>源码：</p><p><a href="https://github.com/mirror/busybox">https://github.com/mirror/busybox</a></p><p>下载完后进入目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make menuconfig</span></span><br></pre></td></tr></table></figure><p><code>Settings -&gt; Build Options -&gt; Build static binary (no shared libs)</code></p><p>（按空格选择，按回车进入）</p><p>选完<code>Exit</code>然后保存即可</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602192335841.png" alt="image-20230602192335841" /></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make install</span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602192540669.png" alt="image-20230602192540669" /></p><p>好了，到目前三个部分的编译就大功告成了!</p><h1 id="制作根文件系统"><a class="markdownIt-Anchor" href="#制作根文件系统"></a> 制作根文件系统</h1><p>按照下面的顺序执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果想要在系统中包含动态库，这里要需要改为2g</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">qemu-img create rootfs.img  1g</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mkfs.ext4 rootfs.img</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> rootfs</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> mount -o loop rootfs.img  rootfs</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> rootfs</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">cp</span> -r ../busybox/_install/* .</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> proc sys dev etc etc/init.d</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> etc/init.d/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">touch</span> rcS</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> vi rcS</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rcS 的内容如下：</span></span><br><span class="line">---------------------</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">mount -t proc none /proc</span><br><span class="line">mount -t sysfs none /sys</span><br><span class="line">/sbin/mdev -s</span><br><span class="line">---------------------</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">chmod</span> +x rcS</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ../../../</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> umount rootfs</span></span><br></pre></td></tr></table></figure><h1 id="启动x86_64-qemu模拟器"><a class="markdownIt-Anchor" href="#启动x86_64-qemu模拟器"></a> 启动x86_64 qemu模拟器</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">qemu-system-x86_64 -kernel linux-5.19/arch/x86/boot/bzImage -boot c -m 2048M -hda rootfs.img -append <span class="string">&quot;root=/dev/sda rw console=ttyS0,115200 acpi=off nokaslr&quot;</span> -serial stdio -display none</span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602194750613.png" alt="image-20230602194750613" /></p><p>如果到了这里，我终于可以恭喜你成功辣😝</p><h1 id="体验x86_64环境"><a class="markdownIt-Anchor" href="#体验x86_64环境"></a> 体验x86_64环境</h1><p>（其实没什么可体验的，因为本机就是x64😕）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> mount rootfs.img rootfs</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入到rootfs编写hello.c</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> vim hello.c</span></span><br><span class="line">---</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">include &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    printf(&quot;Hello World!&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">---</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用静态编译，因为我们创建的系统中没有复制动态库</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> gcc -static hello.c -o static-hello</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">我们启动我们的qemu模拟器</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./static-hello</span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602203056031.png" alt="image-20230602203056031" /></p><p>如果你想要运行动态链接的可执行文件，那么需要你复制必须的动态库，如果你前面创建的是2g的映像，直接复制动态库即可，下面我假设你创建的是1g的映像，我们先创建一个新的映像。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">qemu-img create rootfs-lib.img 2g</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mkfs.ext4 rootfs-lib.img</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> rootfs-lib</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> mount rootfs-lib.img rootfs-lib</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> mount rootfs.img rootfs</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">cp</span> -r rootfs/* rootfs-lib</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> rootfs-lib</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> lib lib64</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">cp</span> -r /lib/x86_64-linux-gnu lib</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">cp</span> /lib64/ld-linux-x86-64.so.2 lib64/ld-linux-x86-64.so.2</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> gcc hello.c -o hello</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ..</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> umount rootfs-lib</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> umount rootfs</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">qemu-system-x86_64 -kernel linux-5.19/arch/x86/boot/bzImage -boot c -m 2048M -hda rootfs-lib.img -append <span class="string">&quot;root=/dev/sda rw console=ttyS0,115200 acpi=off nokaslr&quot;</span> -serial stdio -display none</span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/linux/image-20230602210005168.png" alt="image-20230602210005168" /></p><p>完结撒花🌸</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> qemu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在u盘中安装ubuntu</title>
      <link href="/2023/06/01/%E5%9C%A8u%E7%9B%98%E4%B8%AD%E5%AE%89%E8%A3%85ubuntu/"/>
      <url>/2023/06/01/%E5%9C%A8u%E7%9B%98%E4%B8%AD%E5%AE%89%E8%A3%85ubuntu/</url>
      
        <content type="html"><![CDATA[<p>你是否因为经常使用不同的电脑，但是编程环境不同而苦恼呢，今天的文章会教你把ubuntu装入移动固态中，现在SSD的价格已经很便宜了，这里我会用1T的移动固态为例，教会你如何将ubuntu装入移动其中（同时支持UEFI和BIOS）。</p><p>在开始之前，有几点需要提醒：</p><ol><li>操作不当可能会导致数据损失，严重的操作失误甚至可能破坏你的电脑，所以要慎重操作。</li><li>每一步都要经可能谨慎的操作，一个粗心可能就会导致前功尽弃。</li><li>建议有一定基础的人来完成。</li></ol><h1 id="使用vmware"><a class="markdownIt-Anchor" href="#使用vmware"></a> 使用Vmware</h1><p>首先安装vmware，<a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html">https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html</a></p><p>虽然是收费的，但是网上激活码简直不要太多，这里自己搜索解决。</p><p>（如果之前没有使用虚拟机或者安装系统的经验接下来操作要更加小心）</p><p>在安装完成之后，我们用管理员权限打开vmware（在左下角的搜索栏中找到vmware，右键点击后用管理员打开），创建虚拟机，除了下面出现的内容，其他的都选择默认即可。</p><ol><li>选择稍后安装操作系统，我们需要后面自定义的配置</li></ol><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230531205214087.png" alt="image-20230531205214087" /></p><ol start="2"><li>使用物理磁盘，也就是u盘，这里一定要有管理员权限</li></ol><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230531205235908.png" alt="" /></p><ol start="3"><li><p>选择物理磁盘，选择你u盘的盘符，注意，这里一定不要选错，一般是最后一个。</p><p>实在不确定通过这里的教程查看<a href="https://jingyan.baidu.com/article/0f5fb09923fde06d8334ea35.html">https://jingyan.baidu.com/article/0f5fb09923fde06d8334ea35.html</a></p></li></ol><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230531205330556.png" alt="image-20230531205235908" /></p><ol start="4"><li>在虚拟机设置中选择UEFI</li></ol><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230531205417235.png" alt="" /></p><ol start="5"><li><p>选择提前下好磁盘印象文件</p><p>下载url：<a href="https://cn.ubuntu.com/">https://cn.ubuntu.com/</a></p></li></ol><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230531210821564.png" alt="image-20230531210821564" /></p><ol start="6"><li>配置好之后启动虚拟机，静静的等待，默认方式启动之后选择try ubuntu，我们先不要下载</li></ol><p>​进入ubuntu之后下载gparted分区工具</p><p>​（如果启动失败报错u盘被占用，尝试关闭各类应用，重启，格式化u盘等操作）</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230531211732495.png" alt="image-20230531211732495" /></p><ol start="7"><li>接下来的操作操作会格式化u盘，请确保你的u盘的重要文件都被备份，创建gpt表</li></ol><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230531212108850.png" alt="image-20230531212108850" /></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230531212125193.png" alt="image-20230531212125193" /></p><ol start="8"><li><p>分区，下面是分区的结果，我的空间比较大，分的奢侈了一点，我说明一下下面的分区</p><ul><li>/dev/sda1: 依然作为u盘的空间，不想要当作u盘使用可以不要</li><li>/dev/sda2: linux主要空间，决定了你的linux操作系统占用的空间</li><li>/dev/sda3:  efi分区，100MB以上即可</li><li>/dev/sda4: 交换空间，这块区域在内存不足时会被用作虚拟内存，如果u盘空间小可以不要</li><li>最后的空间安装grub，预留1M以上即可（所以说我分的比较随意，空间小的尽量不要浪费）</li></ul><p>分配好之后确认即可</p></li></ol><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230531212901951.png" alt="image-20230531212901951" /></p><ol start="9"><li><p>安装grub，按顺序输入以下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo gdisk /dev/sdb</span><br><span class="line">n</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认编号，回车就行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认开始位置，回车</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认结束位置，回车</span></span><br><span class="line">EF02 # EF02 就是 bios_grub</span><br><span class="line">p # 看到 Name 有 BIOS boot partition 就可以了</span><br><span class="line">w</span><br><span class="line">y</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230531213039722.png" alt="image-20230531213039722" /></p><p>安装之后结果如下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230531213104971.png" alt="image-20230531213104971" /></p><h1 id="安装ubuntu"><a class="markdownIt-Anchor" href="#安装ubuntu"></a> 安装ubuntu</h1><p>接下来点击桌面上的ubuntu install，在安装类型这一步选择其它选项</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230531213250935.png" alt="image-20230531213250935" /></p><p>在进入到安装类型之后，要做三件事：</p><ol><li>将/dev/sda2挂载到<code>/</code>，选择格式化这个分区</li><li>将/dev/sda3改为efi</li><li>确认<code>安装启动引导器的设备为你的u盘</code></li></ol><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/img/image-20230531213429677.png" alt="image-20230531213429677" /></p><p>完成后等待继续安装默认配置继续，等待ubuntu安装即可。</p><p>在安装完成之后，你的ubuntu就可以通过UEFI启动了（现在的计算机基本上是UEFI，所以如果你不想再折腾到这里就结束了），但是我们接下来还是支持一下BIOS启动。</p><h1 id="bios启动"><a class="markdownIt-Anchor" href="#bios启动"></a> BIOS启动</h1><p>我们将虚拟机关闭，将启动方式改为BIOS（与上面相同），启动之后还是选择try ubuntu</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将你安装linux的分区挂载（在本博客中是sda2）</span></span><br><span class="line">sudo mount /dev/sdaX /mnt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这里是你u盘的分区</span></span><br><span class="line">sudo grub-install --target=i386-pc --recheck --boot-directory=/mnt/boot /dev/sda</span><br></pre></td></tr></table></figure><p>如果没有错误报出，那么应该就成功了，用虚拟机尝试BIOS和UEFI启动看看是不是都可以正常启动。</p><p>如果都正常启动了，就大功告成了！</p><p>重启你的计算机，选择U盘启动就可以进入你安装的ubuntu了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> 装机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何阅读一本书</title>
      <link href="/2023/01/25/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/"/>
      <url>/2023/01/25/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<p>阅读的四个阶段</p><ol><li>基础阅读</li><li>检视阅读</li><li>分析阅读</li><li>主题阅读</li></ol><p>阅读中我们应该对下面四个问题有自己的答案</p><ol><li>整体来说，这本书在谈什么</li><li>作者说了什么，是怎么说的</li><li>这本书说的有道理吗，是部分有道理还是全部有道理</li><li>这本书和你有什么关系吗</li></ol><h1 id="基础阅读"><a class="markdownIt-Anchor" href="#基础阅读"></a> 基础阅读</h1><p>基础阅读就是有着阅读的基本能力</p><h1 id="检视阅读"><a class="markdownIt-Anchor" href="#检视阅读"></a> 检视阅读</h1><p>用于判断一本书是否应该精读，如果判断一本书有精读的价值，就继续采用下面的阅读方法。</p><p>首先整本书采用粗读的方法，对整本书有一个整体的了解，然后遵循下面6个步骤</p><ol><li>了解书籍的主题</li><li>了解书籍架构</li><li>了解关键词目</li><li>了解作者介绍</li><li>了解章节重点</li><li>了解逻辑线索</li></ol><p>在判断一本书值得精读以后，我们执行分析阅读</p><h1 id="分析阅读"><a class="markdownIt-Anchor" href="#分析阅读"></a> 分析阅读</h1><h2 id="一阶段"><a class="markdownIt-Anchor" href="#一阶段"></a> 一阶段</h2><ul><li>给书分类</li><li>找到书的骨架</li><li>为书拟大纲</li><li>发现作者意图</li><li>一阶段总结回答问题1——整体来说，这本书在谈什么</li></ul><h2 id="二阶段"><a class="markdownIt-Anchor" href="#二阶段"></a> 二阶段</h2><p>判断作者主旨</p><ol><li>书中的各种定义</li><li>理解作者想让你关注的</li><li>本书如何推导</li><li>作者自己的观点是怎么样的</li></ol><p>总结回答——作者是如何讨论清楚一个问题的</p><h2 id="三阶段"><a class="markdownIt-Anchor" href="#三阶段"></a> 三阶段</h2><p>公正的评价一本书</p><h1 id="主题阅读"><a class="markdownIt-Anchor" href="#主题阅读"></a> 主题阅读</h1><p>通过多本书相同主题的横向比较来加深理解。</p><h1 id="自己的理解"><a class="markdownIt-Anchor" href="#自己的理解"></a> 自己的理解</h1><p>阅读一章或者一段之后要总结，刚开始阅读可以粗读或者说走马观花，但是一定至少要有一遍是带着总体的视角去阅读的。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言声明</title>
      <link href="/2023/01/04/C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%A3%B0%E6%98%8E/"/>
      <url>/2023/01/04/C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%A3%B0%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>C语言的声明可以嵌套，所以可以构成一些相当复杂的嵌套，这种过于复杂的声明并不推荐，但是我们应该学会如何去阅读这些声明。并在后面的部分会讲述如何利用typedef去简化这些声明</p><h1 id="left-right-rule"><a class="markdownIt-Anchor" href="#left-right-rule"></a> left-right rule</h1><p><code>&quot;left-right&quot; rule</code>是解读C语言声明的强力规则，掌握这个规则足够让我们解决几乎所有的C声明，而且规则并不复杂，分为下面几步</p><blockquote><ol><li>从变量名开始阅读</li><li>从包含变量名的最内部的括号由内而外解释，对于每个括号的内部，先往右边解释，再往左边解释，层层解释&gt; 直至结束。</li></ol></blockquote><p>第一条规则告诉你如何开始，第二条规则告诉你如何解释，然后，我们要记住一些规则，你可以理解为这是规定的内容，是死的。</p><ul><li><code>*</code>  读作 “指向…的指针” ，接下里的标识符修饰指针指向的内容</li><li><code>[]</code>   读作 “…的数组” ，接下来的标识符修饰数组的元素</li><li><code>()</code>  读作 “返回…的函数”，接下来的标识符修饰函数返回值</li></ul><p><code>读作...</code>是用语言的方式去将声明一层层定义出来，就是反映了接下来修饰的内容，理解后面的部分我认为会更加直接。</p><p>好的，看了上面的内容你大概了还是相当模糊的，不要急，上面的内容暂时不必关系，下面我会开始列举一些例子，可以一边看例子一边看解释规则，如果你想自己尝试一下也可以先自己解读。</p><hr /><p>先来看一点我们以前可能遇到的头疼声明</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="type">const</span> <span class="type">int</span> * a;</span><br><span class="line"><span class="number">2.</span> <span class="type">int</span> <span class="type">const</span> * a;</span><br><span class="line"><span class="number">3.</span> <span class="type">int</span> * <span class="type">const</span> a;</span><br></pre></td></tr></table></figure><p>不知道你是否还记得结果，在这三个声明中，只有<code>3的指针是只读的，也就是指针常量</code>，其它两个都是<code>指针指向的对象是只读的，也就是常量指针</code>。我们来一个个解读。</p><p><code>const int * a</code>：</p><ol><li><p>先找到变量名a</p></li><li><p>无括号，总共就一层，先往右看，没有任何标识符</p></li><li><p>往左看，首先我们看到的是一个<code>*</code>，OK，那么此时<code>a</code>已经是一个<code>指针</code>了，<code>接下来的标识符只会修饰指针指向的内容，这一点很关键</code></p></li><li><p>继续往左看，看到<code>int</code>，说明指针指向一个<code>int</code>类型的变量</p></li><li><p>再看到<code>const</code>，表明该<code>int</code>类型的变量是一个常量</p></li></ol><p>那么这个声明的结果就是<code>变量a是一个指针，指针指向的内容是一个int类型的常量</code></p><p><code>int const * a</code>：</p><ol><li>找到变量名a</li><li>往右看，无标识符</li><li>往左看，<code>*</code>，a是一个指针</li><li>往左看，<code>const</code>，指向的变量是一个常量</li><li>往左看，<code>int</code>，该常量是int类型的</li></ol><p>那么这个声明的结果就是<code>变量a是一个指针，指针指向的内容是一个int类型的常量</code></p><p><code>int * const a</code>：</p><ol><li>找到变量名a</li><li>往右看，无标识符</li><li>往左看，<code>const</code>，a是常量</li><li>往左看，<code>*</code>，a是一个指针，也就是a现在是一个常量指针，接下来的标识符会开始修饰指针指向的变量</li><li>往左看，<code>int</code>，指针指向的变量是int类型的</li></ol><p>那么这个声明的结果就是<code>变量a是一个常量指针，指针指向的内容是一个int类型的变量</code></p><p>从上面的例子中，有两点很重要</p><ol><li>按照顺序读取</li><li>一定要理解标识符什么时候修饰变量a，什么时候修饰a指向的内容，当a被定义为指针以后，标识符就只会修饰指针指向的内容，这是一个固定的规则</li></ol><hr /><p>再来看一个容易混淆的例子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="type">int</span> *p[<span class="number">10</span>];</span><br><span class="line"><span class="number">2.</span> <span class="type">int</span> (*p)[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><p><code>1是指针数组，2是数组指针</code></p><p><code>int *p[10]</code>：</p><ol><li>找到变量名p</li><li>往右看，<code>[10]</code>，p是一个数组，接下来标识符只能修饰数组元素</li><li>往左看，<code>*</code>，数组元素是指针</li><li>往左看，<code>int</code>，指针指向的变量是int类型</li></ol><p><code>int (*p)[10]</code>：</p><ol><li>找到变量名p</li><li>因为有括号，所以要先处理<code>(*p)</code></li><li>往右看，无标识符</li><li>往左看，<code>*</code>，p是一个指针，接下来的标识符只会修饰指针指向的内容</li><li>解释完括号内部的，现在解释外部的，<code>int ()[10]</code></li><li>往右看，<code>[10]</code>，指针指向的变量是数组类型的</li><li>往左看，<code>int</code>，数组的元素是int类型</li></ol><hr /><p>我们继续来看一点复杂一些的例子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> * <span class="type">const</span> *(*b)(<span class="type">int</span> a);</span><br></pre></td></tr></table></figure><ol><li>找到变量名b</li><li>有括号，我们要先解释<code>(*b)</code></li><li><code>*b</code>往右看，无标识符</li><li>往左看，b是一个指针</li><li>然后再解释<code>char * const *  (int a)</code></li><li>往右看<code>(int a)</code>，b指向的变量是一个函数，参数是一个整型变量，接下来左边的标识符都只会修饰函数返回值</li><li>往左看，<code>*</code>，该函数的返回值是一个指针</li><li>往左看<code>const</code>，返回值的指针指向一个常量</li><li>往左看，<code>*</code>，这个常量是一个指针</li><li>往左看，<code>char</code>，指针常量指向一个char类型变量</li></ol><p>那么这个声明的结果就是<code>变量a是一个函数指针，函数的参数是一个整型变量，返回值是一个指针，指针指向一个指针常量，指针常量指向一个字符型变量</code></p><p>这里要说明一下，函数的参数也是要经过解释的，只不过这个例子和下面这个例子的函数参数都复杂我就直接跳过了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *(* a[<span class="number">10</span>])(<span class="type">int</span> **p);</span><br></pre></td></tr></table></figure><ol><li>找到变量名a</li><li>先处理<code>(* a[10])</code></li><li>往右看，<code>[10]</code>，a是一个数组，接下来的标识符只会修饰数组元素</li><li>往左看，<code>*</code>，数组元素是指针类型</li><li>接下来解释<code>char *()(int **p)</code></li><li>往右看，<code>(int **p)</code>，指针指向一个函数，参数是二级指针</li><li>往左看，<code>*</code>，返回值是一个指针</li><li>往左看，<code>char</code>，char类型指针</li></ol><p>那么这个声明的结果就是<code>变量a是一个数组，数组元素是函数指针，函数参数是二级指针，返回值一个指向字符型变量的指针</code></p><p>OK，如果你看完并理解了上面的内容，你会发现解释C的声明实际上也不是太复杂，我重新总结一下要点，我相信现在的你看这些要点会有新的感悟</p><ol><li>按照顺序解释</li><li>记住现在解释的内容是什么，比如变量已经声明为指针后，要清楚接下来的标识符只会修饰指针指向的内容，而不会再来修饰这个指针本身。</li></ol><p>虽然现在我们会解释C语言的声明，但是复杂的声明在绝大部分情况下都不是好的选择，接下里我们介绍用typedef来简化声明</p><h1 id="用typedef来简化声明"><a class="markdownIt-Anchor" href="#用typedef来简化声明"></a> 用typedef来简化声明</h1><p>typedef在我们初学C时其实并不太常用，大多数时候我们用来简化结构体的声明</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> <span class="title">Node</span>;</span></span><br></pre></td></tr></table></figure><p>接下来我们就可以直接用<code>Node</code>而不是<code>struct Node</code>来定义变量，这种做法是否明智不是我们要讨论的内容，但是仅仅是这样的使用远远没有展现出typedef的力量。</p><h2 id="typedef和define的区别"><a class="markdownIt-Anchor" href="#typedef和define的区别"></a> typedef和#define的区别</h2><p>如果我们仅仅只是像上面一样用过typedef，我们可能会对typedef的真实作用产生误区。</p><p>#define是完全的字符串替换，仅此而已，但是typedef从某种意义上来说，它真实的重命名了一个类型。</p><p>比如下面这个例子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> A int*</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span>* B;</span><br><span class="line">A a,b;</span><br><span class="line">B c,d;</span><br></pre></td></tr></table></figure><p>变量<code>a是指针</code>，而变量<code>b只是一个普通的整型变量</code>，因为实际的定义是这样的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> *a,b;</span><br></pre></td></tr></table></figure><p>但是<code>c和d都是指针</code>，因为B是类型<code>int *</code>的别名，是一个整体，可以说B本身就是一个新的类型。</p><p>上面的例子已经展现了typedef与字符串替换大不相同，但typedef不仅于此，如果你没有真正的明白typedef的作用，那么下面这个例子你一定无法理解</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Array[<span class="number">20</span>];</span><br><span class="line">Array a;</span><br></pre></td></tr></table></figure><p>此时的a是一个长度为20的整型数组。Array是一个独立的类型，这个类型是长度为20的整型数组。</p><p>现在你应该可以明白typedef的用法了，下面就来看看typedef怎么简化声明。</p><h2 id="typedef简化声明"><a class="markdownIt-Anchor" href="#typedef简化声明"></a> typedef简化声明</h2><p>我们来简化上面的例子</p><p><code>char *(* a[10])(int **p);</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> *(*Func)(<span class="type">int</span> **p);</span><br><span class="line"><span class="comment">// 那么a可以定义如下</span></span><br><span class="line">Func a[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><p>我们用typedef把函数部分和数组部分拆分了开来，这些简化效果不是特别明显，我们来看更复杂一点的例子。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *(* (*a[<span class="number">10</span>])[<span class="number">10</span>][<span class="number">10</span>])(<span class="type">int</span> **p,<span class="type">char</span> *(*f)(<span class="type">int</span> *p[<span class="number">10</span>]));</span><br></pre></td></tr></table></figure><p>这个例子已经毫无可读性了，也不需要耗费心神去解释，我们来简化这个声明。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先简化作为参数的函数</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> *(*ParamFunc)(<span class="type">int</span> *p[<span class="number">10</span>]);</span><br><span class="line"><span class="comment">// 再把整个函数部分抽离出来</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> *(*Func)(<span class="type">int</span> **p,ParamFunc f);</span><br><span class="line"><span class="comment">// 最后再把数组部分加上</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">Func</span> <span class="params">(*ComplexPointer[<span class="number">10</span>])</span>[10][10];</span><br><span class="line"><span class="comment">// 接下来就可以直接定义了</span></span><br><span class="line">ComplexPointer a;</span><br><span class="line"><span class="comment">// 下面是不使用typedef的，对比一下</span></span><br><span class="line"><span class="type">char</span> *(* (*a[<span class="number">10</span>])[<span class="number">10</span>][<span class="number">10</span>])(<span class="type">int</span> **p,<span class="type">char</span> *(*f)(<span class="type">int</span> *p[<span class="number">10</span>]));</span><br></pre></td></tr></table></figure><p>可见typedef在复杂声明中的力量，当然，简化的方法可以按照你自己的想法任意的组织。</p><p>好了，本文主要是讲述了C语言的声明相关内容，希望能让你有所收获。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言的数据存储</title>
      <link href="/2023/01/02/C%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
      <url>/2023/01/02/C%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/</url>
      
        <content type="html"><![CDATA[<p>C语言允许类型之间进行转换，包括隐式的转换和强制转换，为了我们能更好的理解这些特性，我们需要了解C语言的数据在计算机中到底是如何存储的。</p><h1 id="整型数据"><a class="markdownIt-Anchor" href="#整型数据"></a> 整型数据</h1><p>我们先从简单的整型数据开始。</p><p>无符号整数的储存比较简单，直接以二进制形式储存，64位机的signed int存储形式如下</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8bd8ab550f004ad89049744791989583~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" /></p><p>而有符号整数的表示稍复杂，有符号整数的最高位是符号位，0代表整数，1代表负数。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bf597aafb658413b9570799c9be45672~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" /></p><p>在计算机中，有符号整数以补码的形式储存。关于补码，我们只需要理解它的设计的目的是为了简化有符号整数的计算，通过自然溢出实现正确的运算的结果。</p><p>可以简单的记忆如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><msub><mo stretchy="false">)</mo><mtext>补码</mtext></msub><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mi>x</mi><msub><mo stretchy="false">)</mo><mtext>补码</mtext></msub><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mi>x</mi><msub><mo stretchy="false">)</mo><mtext>补码</mtext></msub><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mi>x</mi><msub><mo stretchy="false">)</mo><mtext>补码</mtext></msub><mo>=</mo><msup><mn>2</mn><mi>w</mi></msup><mo stretchy="false">(</mo><mi>w</mi><mtext>是存储的位数</mtext><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>−</mo><mi>x</mi><mtext>的补码可以用</mtext><msup><mn>2</mn><mi>w</mi></msup><mo>−</mo><mi>x</mi><mtext>计算得出</mtext><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mo>−</mo><mi>x</mi><msub><mo stretchy="false">)</mo><mtext>补码</mtext></msub><mo>=</mo><msup><mn>2</mn><mi>w</mi></msup><mo>−</mo><mo stretchy="false">(</mo><mi>x</mi><msub><mo stretchy="false">)</mo><mtext>补码</mtext></msub></mrow><annotation encoding="application/x-tex">(x)_{补码}+(-x)_{补码}=0 \\(x)_{补码}+(-x)_{补码}=2^w(w是存储的位数) \\-x的补码可以用2^w-x计算得出 \\(-x)_{补码}=2^w-(x)_{补码}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">补</span><span class="mord cjk_fallback mtight">码</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">补</span><span class="mord cjk_fallback mtight">码</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">补</span><span class="mord cjk_fallback mtight">码</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">补</span><span class="mord cjk_fallback mtight">码</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">储</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">数</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7977219999999999em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">补</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">用</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">出</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">补</span><span class="mord cjk_fallback mtight">码</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7977219999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">补</span><span class="mord cjk_fallback mtight">码</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><h1 id="浮点型数据"><a class="markdownIt-Anchor" href="#浮点型数据"></a> 浮点型数据</h1><p>浮点型数据采用下面这种方式存储，首先是32位的float</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/89f6aaa3f03249b08fcf48ac6b92d2b5~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" /></p><p>下面是64位的double</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a7f23c82ff2c4a70bf8d8bd145f8eb04~tplv-k3u1fbpfcp-watermark.image?" alt="image.png" /></p><p>浮点数的符号位和整型类似，但浮点数只是纯粹的为了表示符号，0表示正数，1表示负数。</p><p>浮点数的指数和尾数有些细节，我们以float为例，double类似。</p><p>首先，<code>指数位中的2进制数不能够直接转换为真实的指数</code>，因为<code>指数实际上有整数和负数</code>，指数位为了能够表示正数和负数，会有一个偏移量，这个偏移量是指数位的中间值，对于<code>float来说是127</code>，<code>double是1023</code>。</p><p>也就是说，当指数为2时，那么指数位中存下的真实数据是<code>129</code>。</p><p>其次，float的尾数虽然只有23位，但是float的有效位数是24位，因为<code>在尾数部分之前，有一个固定的隐含位，这个隐含位的值是1</code>。其实就是为尾数加上了一个固定的1作为开头。</p><p>这很好理解，因为一个非0的二进制数，至少有一个1（换做平时这可能是废话），比如6是<code>0110</code>，5是<code>0101</code>，这些数字的第一个<code>1</code>我们不需要储存，6就存<code>10</code>，5存<code>01</code>就可以了（当然前面还有若干个0填充），这样可以提高浮点的有效尾数。</p><p>那么浮点数怎么存0呢，当浮点数为0时，浮点数的指数位和尾数部分全部都为0，虽然这个时候尾数看起来很大，但是指数位全为0那就是-127次方，这足够逼近一个0了。</p><p>好了，其它类型的存储也无非整型和浮点型，所以不多赘述，希望本文能够让你有所收获。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言的弱类型性</title>
      <link href="/2023/01/01/C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%80%A7/"/>
      <url>/2023/01/01/C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p>C语言是一个强类型的语言，变量必须先定义再使用，而且变量如果不经过转换，那么将永远保持原来的类型。但强和弱是相对的，如果我们把C语言和其它的一些强类型语言相比较，我们会发现C语言的一些弱类型特性，这些特性会在某些时候坑害我们。当然，讨论强类型还是弱类型是没有意义的事情，重要的是从这些对比中学到一些东西，避免因此而犯下错误。</p><h1 id="隐式类型转换梦开始的地方"><a class="markdownIt-Anchor" href="#隐式类型转换梦开始的地方"></a> 隐式类型转换——梦开始的地方</h1><p>众所周知，对两个类型不同类型的数据操作时，如果这两个数据在一定的兼容范围内，C语言会对其中一个数据进行隐式的类型转换，优先级如下。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%80%A7%E5%92%8C%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A81.png" alt="" /></p><p>我们拿经典的JAVA语言举例，JAVA禁止了<code>boolean</code>与<code>整型</code>数据之间的类型转换，也禁止了<code>整型</code>与<code>浮点型</code>数据的转换，为语言提供了更高的安全性。如此丰富的类型转换，反映了C语言的&quot;弱类型&quot;特性，一方面是C语言为我们的编程提供了更高的自由度，另一方面也增大了隐患。</p><p>来看一个简单的例子。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">-1</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> b = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a &gt; b&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a &lt; b&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出的结果是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a &gt; b</span><br></pre></td></tr></table></figure><p>一个非常浅显易懂的例子，通过上面隐式类型转换的优先级我们知道有符号整数被转换成了无符号整数，而在有符号整数中最高位用<code>1来代表负数</code>，导致的结果就是转换后的a相当的大，造成了意料之外的错误。</p><p>对于C语言的初学者而言，对于无符号整数的应用频率比较低，所以一般情况下也不会造成这样的错误。但是下面的例子就不一定了。</p><h1 id="小心库函数的返回值"><a class="markdownIt-Anchor" href="#小心库函数的返回值"></a> 小心库函数的返回值</h1><p>处理字符串的标准库为我们提供了很多的方法，不知道你是否真正关注过它们的返回值类型，我们来看一个因为类型转换造成的错误。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="number">-1</span> &gt; <span class="built_in">strlen</span>(<span class="string">&quot;A&quot;</span>))&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>从我们上面的错误中我们不难猜出<code>strlen函数返回值是无符号整数类型</code>，我们再来细看strlen，发现返回值类型是<code>size_t</code>，这是一个无符号整数类型，具体大小与平台有关。</p><p>总而言之，我们要小心隐式转换给我们带来的错误。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>GDB快速入门</title>
      <link href="/2023/01/01/gdb%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
      <url>/2023/01/01/gdb%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>GDB全称GNU symbolic debugger，诞生于GNU计划，是一款程序调试器，如果脱离IDE环境，GDB将会是你强大的帮手。</p><h1 id="gdb下载和使用"><a class="markdownIt-Anchor" href="#gdb下载和使用"></a> GDB下载和使用</h1><p>在windows环境中只要下载过C语言应该就会有GDB，这里主要介绍linux环境，也很简单</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">centos</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> yum install gdb</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ubuntu</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install gdb</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">其它系统类似</span></span><br></pre></td></tr></table></figure><p>调试一个程序，例如我们现在要调试可执行程序<code>a.out</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gdb a.out</span></span><br></pre></td></tr></table></figure><p>此外，如果我们要调试一个C语言的程序，我们需要在gcc编译时增加<code>-g</code>选项，这个选项告诉编译器添加调试信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gcc -g main.c</span></span><br></pre></td></tr></table></figure><h1 id="gdb调试常用命令"><a class="markdownIt-Anchor" href="#gdb调试常用命令"></a> GDB调试常用命令</h1><p>下面是一些常用的命令，括号里面是命令的缩写，使用两者都可以</p><h2 id="runr"><a class="markdownIt-Anchor" href="#runr"></a> run（r）</h2><p>启动程序，如果有断点则运行至第一断点，如果没有则运行到结束</p><h2 id="nextn"><a class="markdownIt-Anchor" href="#nextn"></a> next（n）</h2><p>让程序往下执行一步</p><h2 id="listl"><a class="markdownIt-Anchor" href="#listl"></a> list（l）</h2><p>列出程序源代码及其行号</p><h2 id="breakb"><a class="markdownIt-Anchor" href="#breakb"></a> break（b）</h2><p>给程序打断点，可以给某一行打断点，也可以给一个函数打断点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">b 行号</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">b 函数名</span></span><br></pre></td></tr></table></figure><h2 id="infoi"><a class="markdownIt-Anchor" href="#infoi"></a> info（i）</h2><p>查看调试信息，可以查看断点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">i b</span></span><br></pre></td></tr></table></figure><h2 id="continuec"><a class="markdownIt-Anchor" href="#continuec"></a> continue（c）</h2><p>向下执行到下一个断点</p><h2 id="printp"><a class="markdownIt-Anchor" href="#printp"></a> print（p）</h2><p>打印变量信息</p><h1 id="调试core文件"><a class="markdownIt-Anchor" href="#调试core文件"></a> 调试core文件</h1><p>core文件是内存的映象，当程序崩溃的时候，core文件保存了内存的状态，用于调试。由于core文件略大，默认被限制生成。</p><p>我们可以解除这个限制</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ulimit</span> -c unlimited</span></span><br></pre></td></tr></table></figure><p>我们可以写一段会导致崩溃的程序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> *a = <span class="literal">NULL</span>;</span><br><span class="line">    *a = <span class="number">1</span>; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>崩溃后产生core文件，我这里是<code>core.2197</code>，用GDB调试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gdb a.out core.2197</span></span><br></pre></td></tr></table></figure><p>我们可以直接看到崩溃的地方</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Program terminated with signal 11, Segmentation fault.</span><br><span class="line">#0  0x00000000004004dd in main () at a.c:4</span><br><span class="line">4           *a = 1;</span><br></pre></td></tr></table></figure><p>ok，这就是GDB的简单使用了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>指针和数组并不相同——C语言</title>
      <link href="/2022/12/27/%E6%8C%87%E9%92%88%E5%92%8C%E6%95%B0%E7%BB%84%E5%B9%B6%E4%B8%8D%E7%9B%B8%E5%90%8C%E2%80%94%E2%80%94C%E8%AF%AD%E8%A8%80/"/>
      <url>/2022/12/27/%E6%8C%87%E9%92%88%E5%92%8C%E6%95%B0%E7%BB%84%E5%B9%B6%E4%B8%8D%E7%9B%B8%E5%90%8C%E2%80%94%E2%80%94C%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<p>在我们初学C语言时，我们会有这样一个认知或者感觉：指针和数组是相同的。我们也经常干着这样的事情，比如下面这样代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a[<span class="number">3</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">    <span class="type">int</span> *p = a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, p[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*(a+<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样看起来两者似乎确实没有差别，指针可以像数组一样使用<code>[]</code>，而数组名也可以<code>解引用</code>，而且它们的结果是一致的。</p><p>或者在我们定义函数时，也可能会把两者当成一种处理。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">foo</span><span class="params">(<span class="type">int</span> *p)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;foo: %d&quot;</span>, p[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a[<span class="number">3</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">    foo(a);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一切看起来都是那么自然。</p><p>首先我们要肯定，两者之前确实有相似之处，但是如果我们直接把两者划上一个等号，那就大错特错了，接下来我们就来看看两者之间到底有哪些区别。</p><h1 id="数组中到底存了什么"><a class="markdownIt-Anchor" href="#数组中到底存了什么"></a> 数组中到底存了什么</h1><p>这个问题似乎很简单</p><p>比如下面这个数组，只要学过C语言的数组，你几乎可以不假思索的回答出来，存了<code>1,2和3</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">3</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br></pre></td></tr></table></figure><p>ok，那么继续来回答一个简单的问题，下面这个指针p中存了什么，这个问题也很简单，储存了<code>a的地址</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> *p = a;</span><br></pre></td></tr></table></figure><p>如果对上面的问题没有异议，那么我们可以画出这样的内存图</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/NGW.png" alt="NGW" /></p><p>ok，我们再回来看前面的赋值，那么问题来了，我们直接把<code>a</code>的值赋给了<code>p</code>，那么<code>a</code>的值是存放在哪里的呢，也就是<code>0x10000</code>这个值原来是存放在了什么地方呢？</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> *p = a;</span><br></pre></td></tr></table></figure><p>我们似乎找不到<code>0x10000</code>的所在位置，而在<code>a</code>这个位置上储存的是<code>1</code>，我们再来看这个赋值语句，是不是突然又困惑起来了，好像<code>=</code>这个操作符也不是那么自然了，按照我们对于<code>=</code>的理解，应该是把<code>1</code>赋值给<code>p</code>。</p><p>那么问题出在哪里呢，我记得我们初学C语言时，教科书上对于数组名的说明是：<code>数组名代表的是该数组首元素的地址</code>，我们要注意这个<code>代表</code>，也就说这个<code>a</code>所储存的地址在内存中并没有分配空间，<code>a也仅仅只是代表了一个地址</code>。具体为什么会这样，这是C语言内部要做的，就不用我们操心了，我们只需要知道数组名代表了数组首元素的地址，但是并没有给这个地址的存储分配一个空间。</p><p>从一点上来看，数组和指针已经有了明显的不同了，而数组名实际上没有用空间来存下地址，所以数组名也是不能够作为左值的，比如下面就是一个错误的例子。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">3</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="comment">// 1.</span></span><br><span class="line"><span class="type">int</span> b[<span class="number">3</span>] = &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</span><br><span class="line">a = b;</span><br><span class="line"><span class="comment">// 2.</span></span><br><span class="line"><span class="type">int</span> b = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> *p = &amp;b;</span><br><span class="line">a = p;</span><br><span class="line"><span class="comment">// 数组名不可被赋值</span></span><br></pre></td></tr></table></figure><h1 id="数组和指针分别是如何工作的"><a class="markdownIt-Anchor" href="#数组和指针分别是如何工作的"></a> 数组和指针分别是如何工作的</h1><p>我们再从一个简单的例子来说明如果把数组名和指针等同会闹出怎么样的笑话。</p><p>我们先来思考一下，指针是如何工作的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*p);</span><br></pre></td></tr></table></figure><p>这里我相信大家都很好理解</p><ol><li><p>取出地址<code>0x10000</code></p></li><li><p>再根据地址<code>0x10000</code>取出地址中的值</p></li></ol><p>这个我相信对于学过C语言指针的大家都很好理解，如果我们换成数组名呢</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*a);</span><br></pre></td></tr></table></figure><p>如果我们按照指针的工作方式去理解它，那么第一步应该是取出地址，那么地址是什么呢，我们会惊人的发现这个<code>地址竟然是1</code>，这毫无疑问是一个无效地址，此时如果程序崩溃我们应该庆幸，否则将会产生无法预料的后果。</p><p>但事实上，上面<code>*a</code>的方式也可以正确的取出值，这我们又是一个混淆指针和数组名的原因。</p><p>由上我们不难发现，C语言在解引用时，对待数组名和指针的策略是不一样的。那我们不妨再细分一下它们的工作流程，仔细看看它们有什么区别。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221228102700430.png" alt="" /></p><p>我们假设<code>指针P</code>的地址是<code>0x20000</code>。</p><p>我们先来看看<code>*p</code>的工作流程：</p><ol><li>找到指针P所在的地址<code>0x20000</code></li><li>取出这个地址的值<code>0x10000</code></li><li>最后再根据地址<code>0x10000</code>取出值<code>1</code></li></ol><p>再来看看<code>*a</code>的工作流程：</p><ol><li>找到<code>a</code>所在的地址<code>0x10000</code></li><li>取出<code>0x10000</code>的值<code>1</code></li></ol><p>怎么样，是不是发现两者大不相同，至于是如何找到指针地址<code>0x20000</code>的，这个就要交给C语言本身了，我们不需要关心。</p><p>好了，说了这么多，我并不是要说以前的用法都是错误的，事实上，C语言允许我们这样去处理，这样处理起来更方便，其实就够了，我们依然可以用以前的方法去做。主要目的还是希望大家在使用两者的同时更要清楚它们之间的区别，这样一是可以更好的使用它们，二是也减小了我们写出错误代码的可能性。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Dosbox和masm搭建汇编环境</title>
      <link href="/2022/12/26/Dosbox%E5%92%8Cmasm%E6%90%AD%E5%BB%BA%E6%B1%87%E7%BC%96%E7%8E%AF%E5%A2%83/"/>
      <url>/2022/12/26/Dosbox%E5%92%8Cmasm%E6%90%AD%E5%BB%BA%E6%B1%87%E7%BC%96%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>学习汇编语言之前，需要有一个环境来运行汇编代码，所以此文记录下自己的环境搭建过程</p><h1 id="下载dosbox和masm"><a class="markdownIt-Anchor" href="#下载dosbox和masm"></a> 下载Dosbox和masm</h1><p>Dosbox提供32位机环境，masm负责编译汇编代码</p><p>Doxbox下载地址</p><p><a href="https://www.dosbox.com/download.php?main=1">Dos官网</a></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221226105031616.png" alt="image-20221226105031616" /></p><p>点击Download下载即可</p><p>接下来安装masm</p><p><a href="https://github.com/xDarkLemon/DOSBox_MASM/tree/master">https://github.com/xDarkLemon/DOSBox_MASM/tree/master</a></p><p>下载解压以后我们只需要这个masm文件夹</p><h1 id="配置dosbox"><a class="markdownIt-Anchor" href="#配置dosbox"></a> 配置Dosbox</h1><p>接下来我们需要把masm配置到Dosbox中，我们打开<code>DOSBox 0.74-3 Options.bat</code>文件</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221226105813360.png" alt="image-20221226105813360" /></p><p>在文件的底部加入如下内容，把<code>D:\1Packages\Debug</code>换成<code>你自己masm文件夹所在位置</code>，此外我们在相同目录下可以新建一个asm目录作为工作目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MOUNT F  D:\1Packages\Debug</span><br><span class="line">set PATH=%PATH%;F:\masm;</span><br><span class="line">F:</span><br><span class="line">cd F:\ASM</span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221226110006515.png" alt="image-20221226110006515" /></p><p>意思是把本机的<code>D:\1Packages\Debug</code>目录挂载到<code>Dosbox的F盘</code>，这样我们就可以在Dosbox下的F盘直接使用masm命令了</p><p>这样就配置完成了，如果觉得窗口太小，我们可以使用<code>alt+enter</code>来使得窗口全屏，再次按下退出全屏。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>(二)docker的基本使用</title>
      <link href="/2022/12/17/docker%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/12/17/docker%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>在第一节的内容中，我们了解了docker的作用，以及完成了docker的安装和docker的hello world，初步进入了docker的时间，这一节内容会从docker的基本架构出发，讲解组成架构中组成部分的关系以及如何操作它们。</p><h1 id="docker的架构"><a class="markdownIt-Anchor" href="#docker的架构"></a> Docker的架构</h1><p>接下来我会讲解docker的基本使用方式，在学习之前，我们先来看看docker的整体架构。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/c8116066bdbf295a7c9fc25b87755dfe.png" alt="c8116066bdbf295a7c9fc25b87755dfe" /></p><p>我们来看看docker的组成部分，首先docker是有一个客户端的，是一个C/S架构。</p><p>然后我们来看看docker最核心的部分——<code>容器</code>，<code>镜像</code>，<code>仓库</code>。我们之前说了docker把软件和环境打包到一起，那么这个打包的结果就是一个<code>镜像</code>，这个<code>镜像是一个模板</code>，如果我们要运行这个应用，docker会按照这个模板，生成一个<code>容器去运行这个应用</code>。</p><p>与创建一个虚拟机相对比，<code>镜像</code>就类似于<code>iso</code>文件，而<code>容器</code>就类似于<code>虚拟机</code>，镜像只是充当了一个不变的模板，而根据这个模板，我们可以运行任意数量的“容器”。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221217101801776.png" alt="image-20221217101801776" /></p><p>那么<code>仓库</code>这个概念也就好理解了，<code>仓库</code>就是用于存放<code>镜像</code>的，我们可以从仓库去下载我们需要的镜像，那么接下来我们就先从<code>容器</code>,<code>镜像</code>这两个方面来讲述docker的操作。</p><h1 id="镜像的基本操作"><a class="markdownIt-Anchor" href="#镜像的基本操作"></a> 镜像的基本操作</h1><p>基本操作无非是如何下载，如何查看，如何删除，先来看看镜像的查看。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker images</span></span><br></pre></td></tr></table></figure><p>我们之前运行过hello-world可以看到我们已经有了一个镜像，hello-world，一个镜像的信息包括它的<code>名字</code>，<code>标签</code>，<code>ID</code>，<code>创建时间</code>以及<code>镜像的大小</code>，镜像的ID用于唯一的标识每个镜像，在执行相关的操作可以用<code>镜像的ID来代替镜像的名字</code>。此外，我们可以看到hello-world这个镜像的大小十分轻量，只有十几KB。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">hello-world   latest    feb5d9fea6a5   14 months ago   13.3kB</span><br></pre></td></tr></table></figure><p>在用镜像的ID代替镜像名字时，我们可以只使用<code>镜像ID的前缀</code>，<code>只要这个前缀不存在于其它镜像中</code>，不会造成歧义，我们就可以<code>尽可能短</code>的使用ID前缀。</p><p>加入我们这个时候只有这一个镜像，那么现在有两种删除镜像的方式，用<code>名字指定</code>和用<code>ID指定</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker rmi hello-world</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker rmi f <span class="comment"># 只有这一个镜像，采用ID的第一位也不会造成歧义,也就是feb5d9fea6a5的第一位，f</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看镜像，发现hello-world已经被删除了</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker images</span></span><br></pre></td></tr></table></figure><p>大部分时候我们用ID的前两到三位就足以唯一标识一个镜像了，后面的镜像也存在类似的操作，事实上<code>docker images</code>这个命令展示给我们的ID也只是一个前缀。</p><p>现在我们已经删除了hello-world这个镜像，我们接下来把它重新下载回来。</p><p>下载镜像采用的是<code>docker pull</code>这个命令，一个镜像包括<code>镜像的名字</code>和<code>镜像的标签</code>，如果不带标签默认就是<code>lastest</code>这个标签。现在我们来下载<code>hello-world</code>，也就是<code>hello-world:lastest</code>这个镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker pull hello-world</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">再次查看，发现hello-world已经下载完成</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker images</span></span><br></pre></td></tr></table></figure><p>那么我们要如何查找我们需要的镜像呢，后面我在将仓库的时候会进行比较详细的介绍，现在先介绍使用docker命令的方式查找。</p><p>使用<code>docker search</code>来查看可以下载的镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker search nginx</span></span><br></pre></td></tr></table></figure><p>在找到镜像以后，就可以根据镜像的名字来下载我们需要的镜像了。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221217111216995.png" alt="image-20221217111216995" /></p><h1 id="容器的基本操作"><a class="markdownIt-Anchor" href="#容器的基本操作"></a> 容器的基本操作</h1><p>镜像是真正运行的软件，操作相对来说比镜像复杂些。</p><p>容器是真正才是真正运行的程序，所以如何运行一个容器显然是相当重要的，所以我们先来学着怎么运行一个容器，这个操作也很简单，以运行hello-world为例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run hello-world</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">当然，用镜像ID也是可以的</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run f</span></span><br></pre></td></tr></table></figure><p>这样就可以把hello-world这个镜像运行起来了，这个镜像完成的任务就是打印出一些提示信息。</p><p>还记得我们在上一篇文章中执行的docker run hello-world吗，那时我们并<code>没有提前拉取镜像</code>，但是依然<code>成功运行了容器</code>，我们不妨回顾一下docker的架构图，run这个命令在执行的时候会先查看<code>本地是否有这个镜像</code>，如果没有这个镜像，会先从<code>仓库拉取镜像然后再运行</code>。</p><p>运行成功容器以后，我们查看一下所有的容器。这里应该特别注意的是，当容器没有任务在执行的时候，docker会停止这个容器，hello-world这个镜像因为只有打印信息这个任务，所以完成以后容器就会被停止。<code>docker ps</code>只能查看<code>正在运行的容器</code>，如果要查看所有的容器，需要添加<code>-a</code>参数。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker ps -a</span></span><br></pre></td></tr></table></figure><p>我们可以看到容器的一些信息,包括<code>ID</code>，<code>名字</code>等信息，我们可以看到容器的名字是一个随机字符串，我们可以通过参数指定。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CONTAINER ID   IMAGE       COMMAND  CREATED          STATUS             PORTS  NAMES</span><br><span class="line">2eeaafa5c921   hello-world &quot;/hello&quot; 3 seconds ago    Exited (0) 2 seconds ago        competent_poitras</span><br></pre></td></tr></table></figure><p>因为hello-world这个镜像不具备持续运行的能力，所以我们接下来用<code>nginx</code>这个镜像作为案例继续教学，<code>-d</code>参数表示让这个容器在后台运行，<code>--name</code>可以指定这个容器的名字</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker pull nginx</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run -d --name nginx nginx</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker ps</span></span><br></pre></td></tr></table></figure><p>接下来我们来使用一下我们运行的nginx，nginx会<code>监听80端口</code>，所有我们去浏览器访问一下80端口</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221217122353083.png" alt="image-20221217122353083" /></p><p>我们会发现访问失败了，这并不是运行失败了，这里涉及到一个网络的问题，暂且。之前说过，docker会把应用和它的环境打包在一起，这个打包后的运行的容器就类似于虚拟机，要知道，虚拟机与我们本机<code>并不会共享一个网络</code>，也就是说虽然nginx监听了80端口，但是它监听的实际上是<code>nginx这个容器内部的80端口</code>，为了验证这个说法，我们进入到nginx这个容器内部去一探究竟。</p><p>exec可以在容器内执行另外的程序，可以帮助我们进入到容器中，<code>-it</code>这个参数是给我们提供一个可以交互的shell，<code>/bin/bash</code>是在容器中执行的命令，执行下面这个命令以后我们就进入到了容器中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker <span class="built_in">exec</span> -it nginx /bin/bash</span></span><br></pre></td></tr></table></figure><p>进入到容器以后，我们尝试在容器中去访问80端口，看看nginx是否监听了80端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl localhost</span></span><br></pre></td></tr></table></figure><p>响应如下，说明确实监听了容器内部的80端口。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">html &#123; color-scheme: light dark; &#125;</span><br><span class="line">body &#123; width: 35em; margin: 0 auto;</span><br><span class="line">font-family: Tahoma, Verdana, Arial, sans-serif; &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>关于容器网络，我们放在之后的章节再详细介绍。</p><p>然后我们接着尝试去关闭，打开，删除这个容器，容器和镜像一样，都可以用<code>ID来代替名字</code>，这里就不尝试了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker stop nginx</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker start nginx</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除之前要先关闭</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker stop nginx</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker <span class="built_in">rm</span> nginx</span></span><br></pre></td></tr></table></figure><p>最后，如果我们一定要在自己的主机上访问nginx的服务怎么办呢，我们可以把容器内部的端口映射到主机，采用<code>-p</code>参数可以帮助我们实现，后面的<code>80:80</code>表示<code>主机端口:容器内部端口</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先删除原来的容器</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker <span class="built_in">rm</span> nginx</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run -d -p 80:80 --name nginx</span></span><br></pre></td></tr></table></figure><p>然后我们在浏览器中访问，大功告成</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221217123851938.png" alt="image-20221217123851938" /></p><p>最后我来总结一下容器的常用操作</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221217124243311.png" alt="image-20221217124243311" /></p><p>这一节介绍了容器和镜像的基本用法，但是我相信此时你们还对容器和镜像有着诸多的疑惑，例如镜像从何拉取，容器的网络是怎么回事，下一节我们继续深入介绍docker的使用。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>(一)开启docker的旅程</title>
      <link href="/2022/12/16/%E4%BB%8Edocker%E5%BC%80%E5%90%AF%E7%9A%84%E6%97%85%E7%A8%8B/"/>
      <url>/2022/12/16/%E4%BB%8Edocker%E5%BC%80%E5%90%AF%E7%9A%84%E6%97%85%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="天下苦环境久矣"><a class="markdownIt-Anchor" href="#天下苦环境久矣"></a> 天下苦环境久矣</h1><p><code>printf(&quot;Hello World!&quot;)</code>，这也许是你学习C语言时打印的第一行语句，C语言作为大多数人的入门语言，Hello World开始了我们的代码生涯。对于过去初学的我们而言，要打印出这一行代码并不轻松，我们要安装一个集成开发环境，可能是CodeBlocks，可能是visual studio等等，有些可能会给我们安装好C语言的环境，有些则要自己安装或者是配置环境变量。可能我们千辛万苦安装好了运行环境，结果要运行一个项目，我们可能还需要下载这个项目所需要的依赖。不管具体的情况如何，<code>配置环境</code>，这短短的四个字可能将会在接下来的几年时间里一直折磨我们。</p><p>环境给我们带来了很大的痛苦，但我们显然不会就此认命，有了疼点，就会有相应的解决方案，我们手里可是握着代码的程序员。那么到底应该如何解决这个问题呢。在起初，我们首先解决的是依赖问题，对于各种语言，都有了自己对应的包（依赖）管理机制，例如<code>Java</code>的<code>Maven</code>，<code>javascript</code>的<code>npm</code>等，这些包管理工具记录了我们项目所需要的依赖，借助于这些工具，我们在下次运行这些程序时可以快速下载好所需要的依赖。依赖的问题看起来就解决了，但，真的如此吗？</p><p>问题很快出现，我们在下载依赖时，可能遇到包管理工具版本错误的问题，这些包管理工具本身就是一个个软件，为了配置安装这些软件，我们似乎又回到了起点。退一步说，包管理工具只能解决依赖的问题，一个语言所需要的运行环境还是需要我们自己去下载，包管理工具确实为我们的开发起到了很大的作用，但是它依然没有从根本上解决问题。</p><p>我们必须进一步深入这个问题，我们不妨重新思考依赖，从软件的角度来说，依赖确实是一个个包，但是如果我们换一个角度，其实一个程序上最本质上的依赖，是对当前<code>操作系统的依赖</code>。既然如此，我们为什么不直接把<code>软件连同操作系统</code>一起带过去呢。</p><p>怎么把操作系统和软件打包在一起呢，我们此时很容易想到一个技术——<code>虚拟化技术</code>，即使用虚拟机来打包我们的软件。但是问题就在于虚拟机太大了，一个linux系统可能相对小一些，只有几个G，但是如果是windows系统，数量很快会增长到几十个G，我们为了搬运一个软件的环境，花费如此大的代价，似乎是有些过了。</p><p>那么这个问题到底该如何解决，我们今天的主角——docker，给我们提供了一个方案。从虚拟化环境的角度来说，docker提供了与虚拟机类似的效果，但是docker创造的虚拟环境大小只有<code>几百MB</code>甚至只有<code>几十MB</code>！十分轻量！</p><p>docker，给了苦环境久矣的我们一抹希望。那么docker到底是如何解决这些问题，又是怎样使用的呢，且听我娓娓道来。</p><h1 id="docker把环境都装到箱子里"><a class="markdownIt-Anchor" href="#docker把环境都装到箱子里"></a> Docker——把环境都装到箱子里</h1><p>Docker，是一个容器化引擎。我们来看看它的定义，不难发现两个关键词，<code>容器</code>和<code>引擎</code>。那么引擎是什么呢，比如我们常说的汽车引擎，就是用于发动汽车的，那么容器化引擎，就是用于容器化的，也就是说，docker就是一个负责容器化的软件。</p><p>那么容器化是什么呢，这里我们先暂且不提容器的本质，我们先简单的理解为容器就是一个<code>轻量的&quot;虚拟机&quot;</code>，而docker，就是负责把软件和它对应的环境打包到一个容器里，也就是容器化。而打包好的环境，具有轻量且灵活的特点，就好像海上运送货物的集装箱一样，麻雀虽小，五脏俱全，docker把环境和软件都打包到了一样的一个箱子里。</p><p>Docker为什么可以实现如此轻量化，我们比对虚拟机和docker之间的工作原理，不难发现docker容器化出的应用都共享同一个操作系统，而虚拟机则是为每一个应用都虚拟化出了一个操作系统，两者的开销显然不在同一级别上。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/b734f7d91bda055236b3467bc16f6302.png" alt="b734f7d91bda055236b3467bc16f6302" /></p><h1 id="启航小鲸鱼"><a class="markdownIt-Anchor" href="#启航小鲸鱼"></a> 启航，小鲸鱼！</h1><p>介绍了这么多，不知道是否你对docker已经充满了好奇，是否已经摩拳擦掌准备好使用docker了呢，下面我就来简单介绍docker的使用。</p><p>Docker在各个平台都有安装的方式，如果有条件，最好使用linux系统，因为Docker的实现事实上是<code>依赖于linux系统</code>的，直接使用linux会有更加原生的体验，当然，如果手边暂时没有linux的环境可以使用或者对linux的操作还没有很熟悉，在其它操作系统上使用图形化的界面也是一个不错的入门方式。下面我会介绍centos，ubuntu和windows的docker安装方式。</p><h2 id="centos-中的安装"><a class="markdownIt-Anchor" href="#centos-中的安装"></a> CentOS 中的安装</h2><p>CentOS的安装比较简单，按照下面的步骤依次执行命令即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> yum install -y yum-utils</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"> <span class="built_in">sudo</span> yum-config-manager \</span></span><br><span class="line"><span class="language-bash">    --add-repo \</span></span><br><span class="line"><span class="language-bash">    https://download.docker.com/linux/centos/docker-ce.repo</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span></span><br></pre></td></tr></table></figure><h2 id="ubuntu中的安装"><a class="markdownIt-Anchor" href="#ubuntu中的安装"></a> Ubuntu中的安装</h2><p>Ubuntu的安装也比较简单，按照顺序执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt-get update</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt-get install \</span></span><br><span class="line"><span class="language-bash">    ca-certificates \</span></span><br><span class="line"><span class="language-bash">    curl \</span></span><br><span class="line"><span class="language-bash">    gnupg \</span></span><br><span class="line"><span class="language-bash">    lsb-release</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> -p /etc/apt/keyrings</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | <span class="built_in">sudo</span> gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> \</span></span><br><span class="line"><span class="language-bash">  <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">  <span class="subst">$(lsb_release -cs)</span> stable&quot;</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt-get update</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span></span><br></pre></td></tr></table></figure><h2 id="其它linux系统中的安装"><a class="markdownIt-Anchor" href="#其它linux系统中的安装"></a> 其它linux系统中的安装</h2><p>如果是其它linux系统，docker官网都提供了较为详尽的安装方式，链接放在下面，按照自己的需求寻找即可。</p><p><a href="https://docs.docker.com/engine/install/">Docker在linux操作系统中的安装方式</a></p><h2 id="windows中的安装"><a class="markdownIt-Anchor" href="#windows中的安装"></a> Windows中的安装</h2><p>相较于linux，Windows的安装则稍显麻烦，因为docker是的运行依赖于linux，所以我们必须先下载<code>wsl</code>，即<code>Windows Subsystem for Linux</code>，Windows中的linux子系统。</p><p>用管理员打开powershell，下载wsl，这个命令会帮你下好wsl，同时下载一个ubuntu，安装的内容比较大，这里可能要花费几十分钟的时间。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wsl --install</span></span><br></pre></td></tr></table></figure><p>安装完成以后，你可以在它给你安装的ubuntu系统中按照上面提到的方法安装docker （笔者没有试过），也可以下载<code>docker desktop</code>，这边介绍下载<code>docker desktop的方法</code></p><p>进入docker的官网，下载安装包，然后安装即可。</p><p><a href="https://www.docker.com/">https://www.docker.com/</a></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221216181845610.png" alt="image-20221216181845610" /></p><h1 id="小鲸鱼该干活了"><a class="markdownIt-Anchor" href="#小鲸鱼该干活了"></a> 小鲸鱼，该干活了</h1><p>现在，我们已经有了我们自己的小鲸鱼，下面我会简单的告诉你如何让小鲸鱼工作起来。</p><p>我们需要先启动我们的小鲸鱼，Windows只需要双击启动程序就可以了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> systemctl start docker</span></span><br></pre></td></tr></table></figure><p>和学习别的语言一样，我们先来运行docker中的hello world</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run hello-world</span></span><br></pre></td></tr></table></figure><p>如果你看到打印了下面这一段文字，那么就代表docker安装成功了，也恭喜你成功运行了一个容器。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure><p>到目前为止，我们已经安装好了docker并且运行了第一个容器，成功迈出了docker之旅的第一步，在下一个章节，我会详细介绍docker的使用方式。</p>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql索引使用指南</title>
      <link href="/2022/12/06/mysql%E7%B4%A2%E5%BC%95%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2022/12/06/mysql%E7%B4%A2%E5%BC%95%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql索引概述"><a class="markdownIt-Anchor" href="#mysql索引概述"></a> mysql索引概述</h1><p>在我们正式开始讲索引之前，我们不妨回想一个场景，当我们使用字典的时候，我们并不会直接去整本书去检索内容，而是先去查找目录，根据目录给我们提供的页码，在从字典中查询信息，索引就类似于字典中的目录，可以大大提高数据检索的效率。</p><p>mysql的索引机制是mysql提供给我们的一个超强的功能，正确的索引可以大大提高mysql检索的速度和效率。</p><h1 id="索引本质"><a class="markdownIt-Anchor" href="#索引本质"></a> 索引本质</h1><p>如果了解过数据结构或者数据库的底层，那么一定知道mysql索引的底层是基于B+树的，那就是说所谓索引其实就是B+树，对某一个字段建立索引就是以这个字段为关键字建立B+树，这棵B+树会被保存在mysql的文件中，具体的文件会根据引擎的不同而不同，以最常用的innodb和myiasm为例：</p><p>myisam：</p><ul><li><code>tablename_myisam_index.frm</code>：该文件中存储表的结构信息。</li><li><code>tablename_myisam_index.MYD</code>：该文件中存储表的行数据。</li><li><code>tablename_myisam_index.MYI</code>：该文件中存储表的索引数据。</li></ul><p>innodb：</p><ul><li><code>tablename_innodb_index.frm</code>：该文件中存储表的结构信息。</li><li><code>tablename_innodb_index.ibd</code>：该文件中存储表的行数据和索引数据。</li></ul><blockquote><p>不同的引擎对数据的处理方式不同，保存数据的方式也不同，对于myisam来说，很明显可以发现它的索引文件和数据文件是不存放在一起的，而innodb把数据和索引放在一起，这里是涉及到的是两者之间索引类型的区别，innodb使用的是聚簇索引，myisam使用的非聚簇索引，这里不予详细介绍。</p></blockquote><p>说的简单粗暴一点，一个索引对应一个B+树。</p><h1 id="索引的分类和创建"><a class="markdownIt-Anchor" href="#索引的分类和创建"></a> 索引的分类和创建</h1><p>索引的类型有很多，从不同的维度我们可以有很多分类，下面讲分别介绍他们并介绍它们的基本用法。</p><h2 id="从使用的数据结构区分"><a class="markdownIt-Anchor" href="#从使用的数据结构区分"></a> 从使用的数据结构区分</h2><p>最常用的有两种索引：</p><ul><li><code>B+Tree</code>类型：<code>MySQL</code>中最常用的索引结构，大部分引擎支持，有序。</li><li><code>Hash</code>类型：大部分存储引擎都支持，字段值不重复的情况下查询最快，无序。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create index index_name on tablename(column);</span><br><span class="line">create index hash_index_name using hash on tablename(column);</span><br></pre></td></tr></table></figure><h2 id="建立索引使用的字段数量"><a class="markdownIt-Anchor" href="#建立索引使用的字段数量"></a> 建立索引使用的字段数量</h2><p>根据建立索引时使用的字段数量，可以分为<code>单列索引</code>和<code>多列索引</code>。</p><p><code>单列索引</code>可以分为以下几种:</p><ul><li><code>唯一索引</code>：唯一索引的索引值不允许重复</li><li><code>主键索引</code>：一种特殊的唯一索引，同时不允许空值</li><li><code>普通索引</code></li><li>…</li></ul><p>由多个字段组合创建的索引就是组合索引。</p><h2 id="按照功能逻辑分类"><a class="markdownIt-Anchor" href="#按照功能逻辑分类"></a> 按照功能逻辑分类</h2><ul><li><code>普通索引</code></li><li><code>主键索引</code></li><li><code>唯一索引</code></li><li><code>全文索引</code></li></ul><p><code>全文索引</code>的原理有些类似于<code>ES等搜索引擎</code>，建立的过程中会对文本字段进行<code>分词</code>。，在mysql中，我们对文本进行搜索时会使用<code>like</code>字段来进行模糊匹配，当时当通配符<code>%</code>置于待匹配字符串前时索引会失效，例如<code>%test</code>。此时搜索的效率会大大较低，全文索引在这种情况下会起到较大的作用。</p><h2 id="按照储存层次"><a class="markdownIt-Anchor" href="#按照储存层次"></a> 按照储存层次</h2><p>主要分为聚簇索引和非聚簇索引两种，两者的区别主要是数据是否存放在索引节点中。</p><ul><li><code>聚簇索引</code>：逻辑上连续且物理空间上的连续。</li><li><code>非聚簇索引</code>：逻辑上的连续，物理空间上不连续。</li></ul><p>什么意思呢，我们知道一个索引就是一颗B+树，如果真实数据储存在这个B+的节点中，就是聚簇索引，也就是物理空间上的连续。</p><p>而非聚簇索引与之相对，并不会储存真正的数据，而是储存指向<code>数据的指针</code>。</p><p>我们以innodb和myisam为例，<code>innodb的的主键索引</code>使用了<code>聚簇索引</code>，<code>myisam</code>使用了<code>非聚簇索引</code>，这一点我们在它们的文件组织形式上就可以看出来他们的区别。</p><h2 id="索引的使用方式"><a class="markdownIt-Anchor" href="#索引的使用方式"></a> 索引的使用方式</h2><p>未完待续…</p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx基本使用指南</title>
      <link href="/2022/11/24/nginx%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2022/11/24/nginx%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="nginx是什么"><a class="markdownIt-Anchor" href="#nginx是什么"></a> nginx是什么</h1><p>nginx是一个由C语言编写的轻量级<code>web服务器</code>，<code>占用内存小</code>，<code>并发能力强</code>，性能非常优越，是当下非常流行的web服务器。除此以外，nginx还支持相当多的功能，包括但不限于</p><ol><li>反向代理</li><li>负载均衡</li><li>动静分离</li></ol><p>这些也是nginx常见的应用场景，今天我们就来全面的介绍一下nginx的应用</p><h1 id="环境准备"><a class="markdownIt-Anchor" href="#环境准备"></a> 环境准备</h1><p>操作系统采用<code>centos7</code></p><p>nginx的安装相当简单，在centos中我们可以直接用yum安装</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum install nginx</span></span><br></pre></td></tr></table></figure><p>在安装的众多文件中，有两个文件是要注意的</p><ul><li><code>/etc/nginx</code>：存放nginx的配置文件</li><li><code>/usr/share/nginx/html</code>：nginx默认的web根</li></ul><p>接下来启动nginx试试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl start nginx</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">再来测试看看，能正确返回内容即可</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl localhost</span></span><br></pre></td></tr></table></figure><p>在浏览器中访问服务器ip，出现下图页面即成功</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221124193645099.png" alt="image-20221124193645099" /></p><p>这里列出一下常用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload  # 向主进程发送信号，重新加载配置文件，热重启</span><br><span class="line">nginx -s reopen # 重启 Nginx</span><br><span class="line">nginx -s stop    # 快速关闭</span><br><span class="line">nginx -s quit    # 等待工作进程处理完成后关闭</span><br><span class="line">nginx -T         # 查看当前 Nginx 最终的配置</span><br><span class="line">nginx -t -c &lt;配置路径&gt;    # 检查配置是否有问题，如果已经在配置目录，则不需要-c</span><br><span class="line">systemctl start nginx    # 启动 Nginx</span><br><span class="line">systemctl stop nginx     # 停止 Nginx</span><br><span class="line">systemctl restart nginx  # 重启 Nginx</span><br><span class="line">systemctl reload nginx   # 重新加载 Nginx，用于修改配置后</span><br><span class="line">systemctl enable nginx   # 设置开机启动 Nginx</span><br><span class="line">systemctl disable nginx  # 关闭开机启动 Nginx</span><br><span class="line">systemctl status nginx   # 查看 Nginx 运行状态</span><br></pre></td></tr></table></figure><h1 id="nginx配置文件"><a class="markdownIt-Anchor" href="#nginx配置文件"></a> nginx配置文件</h1><p>我们先来看看nginx的主配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /etc/nginx</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span></span> </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"># For more information on configuration, see:</span><br><span class="line">#   * Official English Documentation: http://nginx.org/en/docs/</span><br><span class="line">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span><br><span class="line"></span><br><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line"># Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 4096;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class="line">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class="line">    # for more information.</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        listen       [::]:80;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">        location = /404.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"># Settings for a TLS enabled server.</span><br><span class="line">#</span><br><span class="line">#    server &#123;</span><br><span class="line">#        listen       443 ssl http2;</span><br><span class="line">#        listen       [::]:443 ssl http2;</span><br><span class="line">#        server_name  _;</span><br><span class="line">#        root         /usr/share/nginx/html;</span><br><span class="line">#</span><br><span class="line">#        ssl_certificate &quot;/etc/pki/nginx/server.crt&quot;;</span><br><span class="line">#        ssl_certificate_key &quot;/etc/pki/nginx/private/server.key&quot;;</span><br><span class="line">#        ssl_session_cache shared:SSL:1m;</span><br><span class="line">#        ssl_session_timeout  10m;</span><br><span class="line">#        ssl_ciphers HIGH:!aNULL:!MD5;</span><br><span class="line">#        ssl_prefer_server_ciphers on;</span><br><span class="line">#</span><br><span class="line">#        # Load configuration files for the default server block.</span><br><span class="line">#        include /etc/nginx/default.d/*.conf;</span><br><span class="line">#</span><br><span class="line">#        error_page 404 /404.html;</span><br><span class="line">#            location = /40x.html &#123;</span><br><span class="line">#        &#125;</span><br><span class="line">#</span><br><span class="line">#        error_page 500 502 503 504 /50x.html;</span><br><span class="line">#            location = /50x.html &#123;</span><br><span class="line">#        &#125;</span><br><span class="line">#    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构还是比较清晰的，基本语法如下</p><ul><li>每条指令由<code>;</code>结尾</li><li>每个指令块由<code>&#123;&#125;</code>区分</li><li><code>#</code>注释</li></ul><p>从上面的配置文件我相信你多少可以看出一些nginx的配置内容，但是这个文件还是过于复杂了，我们先从简单开始编写配置文件。</p><p>这里只介绍一条指令</p><p><code>include</code> :可以引入其它的nginx配置文件，我们可以看到nginx主配置文件已经引入了<code>/etc/nginx/conf.d/*.conf</code>文件，所以我们下面将会在<code>conf.d</code>文件夹下新建配置文件，这样既可以保持主配置文件的整洁性，也有利于划分模块。</p><h1 id="nginx作为web服务器"><a class="markdownIt-Anchor" href="#nginx作为web服务器"></a> nginx作为web服务器</h1><p>先允许一下其它用户修改nginx配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /etc/nginx</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">chmod</span> o+x conf.d</span></span><br></pre></td></tr></table></figure><p>在<code>conf.d</code>文件夹下我们新建<code>static.conf</code>文件</p><p>文件内容如下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">  </span><br><span class="line">    <span class="attribute">listen</span> <span class="number">8000</span>;</span><br><span class="line">    <span class="attribute">server_name</span> localhost;</span><br><span class="line">    </span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span> /home/admin/www;</span><br><span class="line">        <span class="attribute">index</span> index.html;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="listen"><a class="markdownIt-Anchor" href="#listen"></a> listen</h2><p>该指令用户声明监听的位置，格式为有如下几种：</p><ul><li><code>127.0.0.1</code>——只声明ip，默认监听80</li><li><code>80</code>——声明端口</li><li><code>127.0.0.1:80</code>——声明具体的ip和端口</li></ul><h2 id="server-name"><a class="markdownIt-Anchor" href="#server-name"></a> server name</h2><p>用于区分请求的虚拟主机，也就是请求中的<code>Host</code>字段，例如：</p><ul><li><p><code>localhost:8000</code>的Host是<code>localhost</code></p></li><li><p><code>nginx:8000</code>的Host是<code>nginx</code></p></li></ul><p>当nginx有多个server监听一个端口的时候可以用主机名区分，当主机名在<code>server_name</code>中没有匹配时，nginx会默认匹配第一个<code>server</code>，所以在只有一个server的使用server_name可以任意取</p><h2 id="location"><a class="markdownIt-Anchor" href="#location"></a> location</h2><p>location用于匹配uri，声明匹配的路径和模式</p><h2 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h2><p>与此同时我们创建好<code>/home/admin/www</code>目录，并且在目录下新建<code>index.html</code>，文件内容意思一下即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Static Server Success!</span><br></pre></td></tr></table></figure><p>最后重启nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查配置文件正确性</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> nginx -t</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> nginx -s reload</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">测试一下能否看到 Static Server Success!</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl localhost:8000</span></span><br></pre></td></tr></table></figure><blockquote><p>要注意，web根目录<code>/home/admin/www</code>中的所有文件夹都应该对其它用户有执行权限，否则nginx将产生403错误</p><p>可以使用<code>chmod o+x -R admin</code>来解决</p></blockquote><h1 id="反向代理"><a class="markdownIt-Anchor" href="#反向代理"></a> 反向代理</h1><h2 id="了解正向代理和反向代理"><a class="markdownIt-Anchor" href="#了解正向代理和反向代理"></a> 了解正向代理和反向代理</h2><p>先了解一下正向代理和反向代理</p><ul><li>正向代理</li></ul><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/forward-proxy-flow.svg" alt="" /></p><p>给客户端做代理就是正向代理</p><ul><li>反向代理</li></ul><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/reverse-proxy-flow.svg" alt="" /></p><p>反之，给服务器做代理就是反向代理</p><h2 id="开始一个简单的服务"><a class="markdownIt-Anchor" href="#开始一个简单的服务"></a> 开始一个简单的服务</h2><p>既然是反向代理，我们需要一个简单的http服务，这里用Go写一个</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;net/http&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">http.HandleFunc(<span class="string">&quot;/hello&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, req *http.Request)</span></span> &#123;</span><br><span class="line">w.Write([]<span class="type">byte</span>(<span class="string">&quot;hello&quot;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, req *http.Request)</span></span> &#123;</span><br><span class="line">w.Write([]<span class="type">byte</span>(req.RequestURI))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">http.ListenAndServe(<span class="string">&quot;:3000&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看不懂也没有关系，这个服务就是监听了<code>3000</code>端口，访问<code>localhost:3000/hello</code>时返回<code>hello</code>，其余所有请求都会被匹配到第二个处理器，会打印出请求的<code>URI</code></p><p>这里就使用nginx反向代理，让我们在<code>8001</code>端口发送的请求可以转发给<code>3000</code>端口</p><p>新建文件<code>reverse_proxy.conf</code>，配置如下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="attribute">listen</span> <span class="number">8001</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="attribute">server_name</span> localhost;</span><br><span class="line">  </span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://localhost:3000;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="proxy_pass"><a class="markdownIt-Anchor" href="#proxy_pass"></a> proxy_pass</h2><p>将接受的请求转发到指定的服务上</p><p>这里要注意以下两种<code>location</code></p><ul><li>转发的地址结尾<code>没有路径</code></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /api &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://localhost:3000;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>当配置如上时，请求的<code>URI</code>会被<code>全部追加到转发地址后面</code>，例如<code>localhost:8001/api/hello</code>，后面的<code>/api/hello</code>被追加到<code>localhost:3000</code>的后面，最后的转发地址是<code>localhost:3000/api/hello</code></p><ul><li>转发的地址结尾<code>有路径</code></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /api &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://localhost:3000/v1;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>当配置如上时，<code>URI会在去掉前缀以后追加到转发地址后面</code></p><p>例如请求：<code>localhost:8001/api/hello</code>，转发地址为<code>localhost:8001/v1/hello</code></p><hr /><p>重新加载配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> nginx -t <span class="comment"># 检查配置文件语法</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> nginx -s reload</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl localhost:8001/hello <span class="comment"># 返回hello即为成功</span></span></span><br></pre></td></tr></table></figure><p>我们试着改变<code>proxy_pass</code>如下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /api &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://localhost:3000/v1;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> nginx -t <span class="comment"># 检查配置文件语法</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> nginx -s reload</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl localhost:8001/api/hello <span class="comment"># 返回结果是/v1/hello</span></span></span><br></pre></td></tr></table></figure><h1 id="动静分离"><a class="markdownIt-Anchor" href="#动静分离"></a> 动静分离</h1><p>动静分离可以理解为把上面的两个功能结合，将静态文件的处理交给nginx，这样可以减小后端服务器的压力，提高性能。</p><p>在使用动静分离之前我们先了解以下location的匹配规则和修饰符</p><h2 id="location匹配规则和修饰符"><a class="markdownIt-Anchor" href="#location匹配规则和修饰符"></a> location匹配规则和修饰符</h2><p>location默认是最长前缀匹配，也就是说根据前缀去匹配路径，当有多个location符合时，选择最长的。</p><p>此外，location还有下面四种最常用的修饰符，优先级从高到低列出</p><ul><li><p><code>=</code>     等于，严格匹配 ，匹配优先级最高。</p></li><li><p><code>^~</code>  表示普通字符匹配。使用前缀匹配。如果匹配成功，则不再匹配其它 location。优先级第二高。</p></li><li><p><code>~ </code>    区分大小写</p></li><li><p><code>~* </code> 不区分大小写</p></li><li><p>无修饰符</p></li></ul><p>可以发现<code>^~</code>和无修饰符匹配规则相同，但是优先级不同</p><hr /><p>这里我们就直接来看两个处理静态资源的例子</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span><span class="regexp"> ^~</span> /images/ &#123;</span><br><span class="line">    <span class="attribute">root</span>   /usr/share/nginx/html; <span class="comment"># 静态资源目录</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">location</span> <span class="regexp">~ \.jpg</span> &#123;</span><br><span class="line">    <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一个是普通匹配，匹配<code>imags</code>开头的请求</p><p>第二个是区分大小写的正则匹配，匹配含有<code>.jpg</code>的请求</p><h1 id="缓冲和缓存"><a class="markdownIt-Anchor" href="#缓冲和缓存"></a> 缓冲和缓存</h1><p>首先我们要区别开缓冲与缓存。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/nginx%E7%BC%93%E5%86%B2%E4%B8%8E%E7%BC%93%E5%AD%98.png" alt="" /></p><p>缓冲实际上并没有减少发送到服务端的请求数量。</p><h2 id="缓冲"><a class="markdownIt-Anchor" href="#缓冲"></a> 缓冲</h2><p>当客户端与服务器之间网络状况不佳时，nginx可能要花费较长的时间把响应发送给客户端，这样会导致nginx与server端的连接被占用，导致资源的浪费，所有我们可以把响应先缓冲到nginx服务器，释放连接资源。</p><h3 id="proxy_buffering"><a class="markdownIt-Anchor" href="#proxy_buffering"></a> proxy_buffering</h3><p>控制缓冲是否开启，打开为<code>on</code>，关闭为<code>off</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_buffering</span> <span class="literal">on</span>;</span><br></pre></td></tr></table></figure><h3 id="proxy_buffer_size"><a class="markdownIt-Anchor" href="#proxy_buffer_size"></a> proxy_buffer_size</h3><p>用于设置读取server端的初始响应部分的大小，这个初始响应部分一般是<code>response header</code>，大小一般配置为<code>4K</code>或者<code>8K</code>，根据操作系统选择，在linux上查看方式如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">getconf PAGE_SIZE</span></span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_buffer_size</span> <span class="number">4k</span>;</span><br></pre></td></tr></table></figure><h3 id="proxy_buffers"><a class="markdownIt-Anchor" href="#proxy_buffers"></a> proxy_buffers</h3><p>配置读取server端响应的缓冲区个数和大小，大小一般为内存页，值得注意的是这里的个数和大小是针对每个连接的</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_buffers</span> <span class="number">16</span> <span class="number">4K</span>;</span><br></pre></td></tr></table></figure><h3 id="proxy_busy_buffers_size"><a class="markdownIt-Anchor" href="#proxy_busy_buffers_size"></a> proxy_busy_buffers_size</h3><p>配置当server端未读取完成时，允许开始给客户端发送响应的缓冲区大小，通常设置成两个内存页的大小</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_busy_buffers_size</span> <span class="number">8K</span>;</span><br></pre></td></tr></table></figure><h3 id="proxy_max_temp_file_size"><a class="markdownIt-Anchor" href="#proxy_max_temp_file_size"></a> proxy_max_temp_file_size</h3><p>当缓冲的大小超过缓冲区允许的内存大小之后，会把响应内容写入磁盘临时文件，该参数用于配置磁盘临时文件的最大空间</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_max_temp_file_size</span> <span class="number">1024m</span>;</span><br></pre></td></tr></table></figure><h3 id="proxy_temp_file_write_size"><a class="markdownIt-Anchor" href="#proxy_temp_file_write_size"></a> proxy_temp_file_write_size</h3><p>配置每个连接允许写入磁盘临时文件的最大空间</p> <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_temp_file_write_size</span> <span class="number">8k</span>;</span><br></pre></td></tr></table></figure><p>来看一个例子</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="section">location</span> /cache  &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://192.168.1.135:8080;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#默认开启，开启代理缓冲区（内存）</span></span><br><span class="line">            <span class="attribute">proxy_buffering</span> <span class="literal">on</span>;</span><br><span class="line">            <span class="comment">#设置响应头的缓冲区设为8k</span></span><br><span class="line">            <span class="attribute">proxy_buffer_size</span> <span class="number">8k</span>;</span><br><span class="line">            <span class="comment">#设置网页内容缓冲区个数为8，单个大小为8k</span></span><br><span class="line">            <span class="attribute">proxy_buffers</span> <span class="number">8</span> <span class="number">8k</span>;</span><br><span class="line">            <span class="comment">#设置当nginx还在读取被代理服务器的数据响应的同时间一次性向客户端响应的数据的最大为16k</span></span><br><span class="line">            <span class="attribute">proxy_busy_buffers_size</span> <span class="number">16k</span>;</span><br><span class="line">            <span class="comment">#临时文件最大为1024m</span></span><br><span class="line">            <span class="attribute">proxy_max_temp_file_size</span> <span class="number">1024m</span>;</span><br><span class="line">            <span class="comment">#设置一次往临时文件的大小最大为16k</span></span><br><span class="line">            <span class="attribute">proxy_temp_file_write_size</span> <span class="number">16k</span>;</span><br><span class="line">            <span class="comment">#设置临时文件存放目录</span></span><br><span class="line">            <span class="attribute">proxy_temp_path</span> /tmp/proxy_temp;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="缓存"><a class="markdownIt-Anchor" href="#缓存"></a> 缓存</h2><h3 id="proxy_cache_path"><a class="markdownIt-Anchor" href="#proxy_cache_path"></a> proxy_cache_path</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_cache_path</span>  /tmp/nginx/cache levels=<span class="number">1</span>:<span class="number">2</span>  keys_zone=mycache:<span class="number">10m</span> max_size=<span class="number">10g</span>;</span><br></pre></td></tr></table></figure><p>配置nginx缓存，有如下选项</p><ul><li><p><code>/tmp/nginx/cache</code>：缓存路径</p></li><li><p><code>levels=1:2</code>：在默认情况下nginx缓存文件会放在一个文件夹下，但是这样会降低缓存性能，采用<code>1:2</code>的方式来设置多级目录，</p><p>数字的含义是文件夹命名采用几位16进制，也就是第一级目录是1，采用1位16进制，有16个目录，二级目录有256个文件夹，总共有16*256个缓存文件</p></li><li><p><code>key_zone</code>：配置共享内存中放置缓存key字符串的空间大小，通过key可以快速判断一个request是否命中缓存，<code>1m</code>的空间可以放置大约<code>8000</code>个key</p></li><li><p><code>max_size</code>：缓存最大空间</p></li><li><p><code>inactive</code>：设置未访问文件被删除的时间，即便这个文件没有过期</p></li></ul><h3 id="proxy_cache_bypass"><a class="markdownIt-Anchor" href="#proxy_cache_bypass"></a> proxy_cache_bypass</h3><p>配置何时不适用缓存，通常是在客户端请求带有<code>no-cache</code>参数时</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_cache_bypass</span> <span class="variable">$arg_nocache</span> <span class="variable">$arg_comment</span>;</span><br></pre></td></tr></table></figure><h3 id="proxy_cache_key"><a class="markdownIt-Anchor" href="#proxy_cache_key"></a> proxy_cache_key</h3><p>缓存的key值，该key值用于在内存中建立索引，其md5值是缓存文件名，格式一般设置如下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_cache_key</span> <span class="variable">$scheme</span><span class="variable">$proxy_host</span><span class="variable">$uri</span><span class="variable">$is_args</span><span class="variable">$args</span>;</span><br></pre></td></tr></table></figure><h3 id="proxy_cache_methods"><a class="markdownIt-Anchor" href="#proxy_cache_methods"></a> proxy_cache_methods</h3><p>缓存的请求方法</p><h3 id="proxy_cache_valid"><a class="markdownIt-Anchor" href="#proxy_cache_valid"></a> proxy_cache_valid</h3><p>设置开启缓存的状态码和缓存的时间</p><h3 id="proxy_cache_min_uses"><a class="markdownIt-Anchor" href="#proxy_cache_min_uses"></a> proxy_cache_min_uses</h3><p>设置开启缓存的最小请求次数，可以避免对低频率请求缓存</p><p>下面是一个例子</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="comment">#设置缓存路径和相关参数（必选）</span></span><br><span class="line">    <span class="attribute">proxy_cache_path</span>  /tmp/nginx/cache levels=<span class="number">1</span>:<span class="number">2</span>  keys_zone=mycache:<span class="number">10m</span> max_size=<span class="number">10g</span>;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="section">location</span> /cache  &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://192.168.1.135:8080;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#引用缓存配置（必选）</span></span><br><span class="line">            <span class="attribute">proxy_cache</span> mycache;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#对响应状态码为200 302的响应缓存100s</span></span><br><span class="line">            <span class="attribute">proxy_cache_valid</span> <span class="number">200</span> <span class="number">302</span> <span class="number">100s</span>;</span><br><span class="line">            <span class="comment">#对响应状态码为404的响应缓存200</span></span><br><span class="line">            <span class="attribute">proxy_cache_valid</span> <span class="number">404</span> <span class="number">200s</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#请求参数带有nocache或者comment时不使用缓存</span></span><br><span class="line">            <span class="attribute">proxy_cache_bypass</span> <span class="variable">$arg_nocache</span> <span class="variable">$arg_comment</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#忽略被代理服务器设置的&quot;Cache-Control&quot;头信息</span></span><br><span class="line">            <span class="attribute">proxy_ignore_headers</span> <span class="string">&quot;Cache-Control&quot;</span>; </span><br><span class="line"></span><br><span class="line">            <span class="comment">#对GET HEAD POST方法进行缓存 </span></span><br><span class="line">            <span class="attribute">proxy_cache_methods</span> GET HEAD POST;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#当缓存过期时，当构造上游请求时，添加If-Modified-Since和If-None-Match头部，值为过期缓存中的Last-Modified值和Etag值。</span></span><br><span class="line">            <span class="attribute">proxy_cache_revalidate</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#当被代理服务器返回403时，nginx可以使用历史缓存来响应客户端，该功能在一定程度上能能够为客户端提供不间断访问</span></span><br><span class="line">            <span class="attribute">proxy_cache_use_stale</span> http_403;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>未完待续…</p>]]></content>
      
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用git hooks自动化部署hexo</title>
      <link href="/2022/11/23/%E7%94%A8git-hooks%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2hexo/"/>
      <url>/2022/11/23/%E7%94%A8git-hooks%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h1><p>hexo是知名的<code>博客部署框架</code>，采用<code>SSG（Static Site Generation）</code>的方式生成静态页面，结合使用github等托管平台可以快速部署我们的站点。hexo也给我们提供了支持部署的插件，安装完成以后我们可以使用<code>hexo deploy</code>推送内容到托管平台。</p><p>虽然hexo已经给我们提供了一套方便的部署方案，但是使用hexo最大的痛点之一就是当我们要换设备时无法方便的迁移。因为<code>hexo deploy</code>只负责把hexo生成的静态页面，也就是<code>public</code>目录下的内容推送到托管平台，我们如果要迁移我们的文章到另一台机器，只能把文件夹拷贝过去，非常的不方便，如果我们意外丢失这个文件夹，那么我们原来的<code>markdown</code>文章都会丢失。</p><p>今天要介绍的<code>git hooks</code>就是解决问题的一套方案，我们用<code>git</code>维护我们的hexo文件，不仅方便迁移，而且增加了维护历史版本的功能。</p><h1 id="git-hooks"><a class="markdownIt-Anchor" href="#git-hooks"></a> git hooks</h1><p>开始之前还是先简单的介绍一下git hooks</p><h2 id="钩子"><a class="markdownIt-Anchor" href="#钩子"></a> 钩子</h2><p>可以简单的理解为在特定时机触发的程序。我们用git hooks来举一个简单的例子</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git init git-hooks-test</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> git-hooks-test/.git/hooks</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span></span></span><br></pre></td></tr></table></figure><p>我们可以看到很多的文件</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221124113801527.png" alt="image-20221124113801527" /></p><p>我们以<code>pre-commit</code>为例，这个文件中的脚本会在每次commit之前执行，我们来简单的测试一下，把<code>pre-commit</code>的内容复制为下文。</p><p>在复制内容之前记得把sample删除，带这个后缀的钩子文件会被忽略</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">echo &quot;Hello World&quot;</span><br></pre></td></tr></table></figure><p>测试一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&#x27;test hooks&#x27;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221124115136586.png" alt="image-20221124115136586" /></p><p>可以看到我们设置的hello world被打印出来，那么其它钩子也是同理的，不再说明</p><h1 id="搭建环境"><a class="markdownIt-Anchor" href="#搭建环境"></a> 搭建环境</h1><p>我们接下来分别搭建服务端和客户端的环境</p><h2 id="服务端"><a class="markdownIt-Anchor" href="#服务端"></a> 服务端</h2><h3 id="node和git"><a class="markdownIt-Anchor" href="#node和git"></a> node和git</h3><p>操作系统为<code>ubuntu</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> useradd hexo -m <span class="comment"># 创建用户及其home目录</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> passwd hexo <span class="comment"># 配置一个密码</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt update</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install git</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">由于ubuntu安装nodejs时发现版本过低，这里不用默认的软件源</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> curl -sL https://deb.nodesource.com/setup_14.x | <span class="built_in">sudo</span> -E bash -</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这里的nodejs同时包含nodejs和npm</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install nodejs</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装hexo</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">node install -g hexo-cli</span></span><br></pre></td></tr></table></figure><h3 id="git-hooks配置"><a class="markdownIt-Anchor" href="#git-hooks配置"></a> git hooks配置</h3><p>接下来配置git仓库和git hooks</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /home/hexo</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> 建立裸仓库</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git init --bare blog.git</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">存放hexo文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> -p www/blog</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑post-receive钩子，会在收到文件以后执行</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim blog.git/hooks/post-receive</span></span><br></pre></td></tr></table></figure><p>配置如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">git --work-tree=/home/hexo/www/blog --git-dir=/home/hexo/blog.git checkout -f master</span><br><span class="line">cd /home/hexo/www/blog</span><br><span class="line">npm install</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">记得给执行权限</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> +x blog.git/hooks/post-receive</span></span><br></pre></td></tr></table></figure><p>暂时这样配置就好了</p><h3 id="nginx配置"><a class="markdownIt-Anchor" href="#nginx配置"></a> nginx配置</h3><p>接下来下载nginx</p><p>(这里下的nginx版本感觉过于落后，后面如果你的nginx没有相关文件那么只需要修改<code>/etc/nginx/nginx.conf</code>里的<code>root</code>位置就可以了)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install nginx</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入nginx配置文件所在文件夹</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /etc/nginx</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">一般来说，在conf.d子文件夹中添加配置文件是更好的选择，这里直接修改主配置文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> o+w sites-available/default</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim sites-available/default</span></span><br></pre></td></tr></table></figure><p>找到配置文件中<code>root</code>的配置，如果找不到可能是nginx版本不同，可以尝试直接修改<code>nginx.conf</code>文件中的对应部分</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不同的版本可能默认的root位置不同，总之现在修改为我们需要的root</span></span><br><span class="line"><span class="attribute">root</span> /var/share/nginx/html</span><br><span class="line"><span class="comment"># 修改为</span></span><br><span class="line">root /home/hexo/www/blog/public</span><br></pre></td></tr></table></figure><p>然后重启nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> nginx -s reload</span></span><br></pre></td></tr></table></figure><h2 id="客户端"><a class="markdownIt-Anchor" href="#客户端"></a> 客户端</h2><p>hexo环境创建过程不再重复</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo init myblog</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> myblog</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ssh相关命令最好使用git bash执行</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh-keygen</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh-copy-id -i ~/.ssh/id_rsa.pub hexo@ip</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git init</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置ssh免密登录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote add origin ssh://hexo@ip:/home/hexo/blog.git</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add -A</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&#x27;first commit&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push -u origin master</span></span><br></pre></td></tr></table></figure><p>自己可以看到正确的提示信息就是配置好了</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221124181651635.png" alt="image-20221124181651635" /></p><p>然后试着访问服务器ip，查看部署情况</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从github page到github action</title>
      <link href="/2022/11/22/%E4%BB%8Egithub-page%E5%88%B0github-action/"/>
      <url>/2022/11/22/%E4%BB%8Egithub-page%E5%88%B0github-action/</url>
      
        <content type="html"><![CDATA[<h1 id="github-pages和github-actions"><a class="markdownIt-Anchor" href="#github-pages和github-actions"></a> Github Pages和Github Actions</h1><p>github pages是github给我们提供了托管静态网站的强大功能，让我们可以快速部署自己的一些应用。</p><p>github actions是github的一个CI/CD平台，可以帮助我们自动化测试，构建和部署项目，也拥有着十分强大的功能。</p><p>看似两者之间没有直接的联系，但是实际上，它们之间的关系比我们想的亲密多了，下面我们就从github pages开始一步一步讲述它们之间的联系。</p><p>如果对<code>Github Actions</code>还没有基本的认识，建议可以先去了解相关内容或者阅读我的博客</p><p>传送门：<a href="/2022/11/08/github-action%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/" title="github-action简明教程">github-action简明教程</a></p><h1 id="再认识github-pages"><a class="markdownIt-Anchor" href="#再认识github-pages"></a> 再认识Github Pages</h1><p>我们先回到一个熟悉的界面，下面是github pages的配置界面</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122201939789.png" alt="" /></p><p>我们再来看看配置github pages的方式</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122202036990.png" alt="image-20221122202036990" /></p><p>发现是有两种的，这个时候我们就发现了一个选项——<code>Github Actions</code>，从这里就看出了一些端倪，我们由两种方式去部署github pages，其中一个就是借由<code>Github Actions</code>，下面开始逐个介绍这两种方法。</p><p><code>Deploy from a branch</code>是一个更加常用的方式，我们先从这个方法介绍。</p><h2 id="deploy-from-a-branch"><a class="markdownIt-Anchor" href="#deploy-from-a-branch"></a> Deploy from a branch</h2><p>这种方法的使用很简单，先往<code>github</code>的仓库上推送一个简单的<code>index.html</code>文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    Hello World</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122204820985.png" alt="image-20221122204820985" /></p><p>这样就可以了(请先忽略另一个文件夹)，然后在<code>github pages</code>的配置页按下<code>Save</code>（<code>如果你之前已经配置过github pages，那么可以跳过这一步</code>）</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122203701291.png" alt="image-20221122203701291" /></p><p>然后我们查看<code>github actions</code>，我们会发现竟然有任务正在运行！</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122204016665.png" alt="image-20221122204016665" /></p><p>所以我们会发现<code>github pages</code>部署的过程也是走了一个工作流，那么具体内容就不介绍了，接着我们访问<code>https://&lt;github id&gt;.github.io/&lt;repository name&gt;/</code></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122204717686.png" alt="image-20221122204717686" /></p><h2 id="github-actions"><a class="markdownIt-Anchor" href="#github-actions"></a> Github Actions</h2><p>那么接下来我们尝试用自己的工作流去部署，我们选择<code>Github Actions</code></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122205018718.png" alt="image-20221122205018718" /></p><p><code>Github Actions</code>已经给出了两个我们可能需要的<code>workflows</code>模板，这里我们直接使用<code>Static HTML</code>，点击<code>Configure</code></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122205147452.png" alt="image-20221122205147452" /></p><p>这里我们能看到我们将要创建的工作流文件，有兴趣的可以仔细阅读一下，这里我们不需要修改它的配置，直接点击右上角绿色的<code>Start commit</code>提交改变就可以了</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122205302916.png" alt="image-20221122205302916" /></p><p>再来看<code>Github Actions</code>，我们会发现自己创建工作流已经运行起来了，这里提一下，工作流运行的名字如果没有配置，默认是这一次<code>commit</code>的信息作为名字，等待部署成功就可以了，效果这里就不查看了，现在就配置好了一个<code>Github Actions</code>的工作流，之后我们的每一次提交都会触发这个工作流，让它帮助我们构建<code>github pages</code></p><h1 id="巧用github-actions市场"><a class="markdownIt-Anchor" href="#巧用github-actions市场"></a> 巧用Github Actions市场</h1><p>到了现在这一步，你可能会惊叹于Github Actions强大的功能（其实目前还没怎么表现出来，乐😅），但是你也可能感到害怕，原因是<code>Github Actions</code>的配置文件实在是太长了，我能写出这么复杂的工作流文件吗。</p><p>大家其实大可不必担心，一方面，github给我们提供了很多场景下的<code>工作流文件模板</code>，另一方面，我之前提过，我们可以再步骤中使用别人已经写好的<code>actions</code>，大大简化我们编写的难度，下面我们来看看我们如何查看自己想要的工作流文件。</p><h2 id="工作流文件模板"><a class="markdownIt-Anchor" href="#工作流文件模板"></a> 工作流文件模板</h2><p>我们点开Actions，如果我们之前没有创建过工作流，那么你已经可以发现下面有很多的工作流文件可以供你选择，如果你已经创建了工作流，我们点击左侧的<code>New workflow</code></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122210259207.png" alt="image-20221122210259207" /></p><p>这里有大量的模板可以选择，<code>Suggested for this repository</code>是github根据你仓库中语言的种类占比给你推荐最可能用到的工作流文件。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122210502053.png" alt="image-20221122210502053" /></p><p>我们可以根据自己的需求从中选择，这会大大降低我们编写的难度</p><h2 id="actions市场"><a class="markdownIt-Anchor" href="#actions市场"></a> actions市场</h2><p>接下来介绍一下怎么给自己的<code>步骤（step）</code>找到合适的actions，让我们避免书写重复的脚本，我们点击github导航栏中的<code>Marketplace</code></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122210729497.png" alt="image-20221122210729497" /></p><p>接下来点击<code>Actions</code>，我们看到很多已经被编写好的<code>actions</code></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122210826365.png" alt="image-20221122210826365" /></p><p>我们随便点开一个，大多数的<code>actions</code>都会给出用法，示例和参数的说明等信息，根据这些信息，你可以快速上手别人的脚本</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122211029409.png" alt="image-20221122211029409" /></p><h1 id="github-actions集成go项目的一个简单案例"><a class="markdownIt-Anchor" href="#github-actions集成go项目的一个简单案例"></a> Github Actions集成Go项目的一个简单案例</h1><p>我们先来简单的写一个Go的Web服务和一个对应的测试文件，这个服务将监听8080端口，访问<code>/hello</code>路由将返回<code>hello world</code>，测试文件将测试这个Web服务和路由是否正常。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HelloWorld</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.String(http.StatusOK, <span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/hello&quot;</span>, HelloWorld)</span><br><span class="line"></span><br><span class="line">r.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;github.com/stretchr/testify/assert&quot;</span></span><br><span class="line">   <span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line">   <span class="string">&quot;net/http&quot;</span></span><br><span class="line">   <span class="string">&quot;testing&quot;</span></span><br><span class="line">   <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestMain</span><span class="params">(m *testing.M)</span></span> &#123;</span><br><span class="line">   <span class="keyword">go</span> main()</span><br><span class="line">   time.Sleep(<span class="number">2</span> * time.Second)</span><br><span class="line">   m.Run()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAdd</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">   assertion := assert.New(t)</span><br><span class="line">   resp, err := http.Get(<span class="string">&quot;http://localhost:8080/hello&quot;</span>)</span><br><span class="line">   assertion.Nil(err)</span><br><span class="line">   assertion.Equal(http.StatusOK, resp.StatusCode)</span><br><span class="line">   data, _ := ioutil.ReadAll(resp.Body)</span><br><span class="line">   assertion.Equal(<span class="string">&quot;hello world&quot;</span>, <span class="type">string</span>(data))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整的目录如图示</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221108230538412.png" alt="image-20221108230538412" /></p><p>先把代码上传到github</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122211754888.png" alt="image-20221122211754888" /></p><p>接下来我们去创建工作流，我们发现github已经给我们推荐了两个工作流模板，我们直接选第二个（如果你没有发先你想要的工作流模板也可以自己手动搜索，大部分情况下你的需求都可以被满足）</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122211849893.png" alt="image-20221122211849893" /></p><p>阅读工作流文件，发现我们的这个工作流文件已经差不多满足了我们的需求，我们根据自己的需求做出小小的修改，主要是添加下载依赖的步骤</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122212141857.png" alt="image-20221122212141857" /></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 工作流名称</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">Go</span> <span class="string">package</span></span><br><span class="line"><span class="comment"># 任务名称</span></span><br><span class="line"><span class="attr">run-name:</span> <span class="string">Go</span> <span class="string">Build</span> <span class="string">&amp;&amp;</span> <span class="string">Test</span></span><br><span class="line"><span class="comment"># 触发事件</span></span><br><span class="line"><span class="attr">on:</span> [<span class="string">push</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 工作</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="comment"># 工作的名字叫做build</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="comment"># 运行在ubuntu上</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="comment"># 使用actions，将文件传到服务器上，use声明使用的actions</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">      <span class="comment"># 配置go语言环境</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">up</span> <span class="string">Go</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-go@v3</span></span><br><span class="line">        <span class="comment"># 配置actions的参数，这里是go的版本</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">go-version:</span> <span class="number">1.18</span></span><br><span class="line">      <span class="comment"># 下载依赖</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">go</span> <span class="string">mod</span> <span class="string">download</span></span><br><span class="line">      <span class="comment"># 编译项目</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">go</span> <span class="string">build</span> <span class="string">-v</span> <span class="string">.</span></span><br><span class="line">     <span class="comment"># 运行测试 </span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Test</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">go</span> <span class="string">test</span> <span class="string">-v</span> <span class="string">.</span></span><br></pre></td></tr></table></figure><p>最后我们上传我们的本地仓库，查看Action，等待片刻，执行完的情况是这样的，我们可以看到工作流都被执行了</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221122212941261.png" alt="image-20221122212941261" /></p><p>关于Go语言工作流的细节就不介绍了，下面我们测试一下测试出错的情况，我们修改<code>main.go</code>，将返回的内容由<code>hello world</code>改为<code>Hello World</code>，我们再次提交至Github</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HelloWorld</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">   c.String(http.StatusOK, <span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再次查看，我们发现我们的工作流执行失败了，这显然是由于我们的Test步骤没有通过导致的</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221108231224859.png" alt="image-20221108231224859" /></p><p>我们点开我们的工作流查看细节</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221108231406042.png" alt="image-20221108231406042" /></p><p>发现确实是我们修改了返回值为<code>Hello World</code>导致的错误，这是一种错误，此外我们可以修改Go代码制造语法错误，使代码无法编译，这里就不再测试了。</p><p>到目前为止，我们成功使用了Github Actions完成Go项目的持续集成，如果想要进一步了解相关内容可以阅读官方文档</p><p>传送门：<a href="https://docs.github.com/cn/actions">GitHub Actions文档 - GitHub Docs</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> github action </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cas认证流程简介</title>
      <link href="/2022/11/18/cas%E8%AE%A4%E8%AF%81%E6%B5%81%E7%A8%8B%E7%AE%80%E4%BB%8B/"/>
      <url>/2022/11/18/cas%E8%AE%A4%E8%AF%81%E6%B5%81%E7%A8%8B%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="cas是什么"><a class="markdownIt-Anchor" href="#cas是什么"></a> CAS是什么</h1><p>在认识CAS之前，我们先认识一下SSO。</p><p>SSO是<code>Single Sign On</code>的缩写，意为单点登录，是一种应用架构，用户只需要登录一次就可以访问所有相互信任的应用。</p><p>SSO只是一种架构，而CAS就是实现SSO的一套方案，CAS是<code>Central Authentication Service</code>的简称。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/c967cd85751e4e739cd8455286c86302_tplv-k3u1fbpfcp-zoom-in-crop-mark_4536_0_0_0.png" alt="c967cd85751e4e739cd8455286c86302_tplv-k3u1fbpfcp-zoom-in-crop-mark_4536_0_0_0" /></p><h1 id="了解cas"><a class="markdownIt-Anchor" href="#了解cas"></a> 了解CAS</h1><p>我们先来用一个奇怪的游乐场模拟一下CAS整个运作的流程</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221118183917114.png" alt="image-20221118183917114" /></p><p>在这个游乐场中，我们只需要去<code>授权中心</code>买一次票就可以在全场畅玩。每个游乐设施都需要自己它们自己<code>单独的票据</code>，但是我们不需要在每个地点购买票据，只要有游乐场的通票，我们可以用这个通票让游乐设施的售票处找游乐场授权中心验证（防止通票伪造），验证通过以后售票处会给我们票据，拿着对应的票据我们就可以在对应的游乐设施快乐的玩耍了。</p><p>在实际CAS实现中，对应关系如下</p><ul><li>游客——浏览器</li><li>游乐场授权中心——cas server授权认证中心</li><li>游乐设施——多个APP</li><li>通票——TGC（Ticket Grangting Ticket）</li><li>游乐设施专门的票据——app对应cookie</li></ul><p>关系图如下（限于CAS的流程实在比较繁琐，所以下面这个图省略了部分内容，主要省略在<code>验证通过</code>这里）</p><p>但实际上，我们脱离cas本身复杂的流程来思考，cas只是把多个应用的登录功能抽离出来做了一个集成而已。这里先说明一下，在被省略的验证通过流程中，涉及<code>TGC</code>，<code>TGT</code>和<code>ST</code>三种票据，我们将在下面的具体流程中介绍（一方面不希望过早的把问题复杂化，一方面不希望误导读者，真是纠结啊，大家谅解一下）</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221118184737951.png" alt="image-20221118184737951" /></p><h1 id="cas的具体流程"><a class="markdownIt-Anchor" href="#cas的具体流程"></a> CAS的具体流程</h1><p>我会分别介绍四个方面内容</p><ul><li>从浏览器发出TGC到浏览器拿到app的cookie的过程中发生了什么（也就是省略内容）</li><li>没有拿到TGC（没有在cas登陆过）的整个登录流程</li><li>拿到TGC的整个流程</li><li>退出登陆的流程</li></ul><p>如果看完前面拆分的流程图和第一部分仍然感到疑惑，那么可以仔细看看第2部分，那里有完整的流程，当然，你要有耐心（放大了图慢慢看，看的时候要保证脑子里有user，brower，cas server，app四个对象，要知道，仅凭文字这些流程会很抽象，要让流程动起来）</p><h2 id="从tgc到app-cookie"><a class="markdownIt-Anchor" href="#从tgc到app-cookie"></a> 从TGC到app cookie</h2><ul><li><p>TGT：Ticket Grangting Ticket</p></li><li><p>TGC：Ticket Granting Cookie</p></li><li><p>ST：Service Ticket</p></li></ul><p>TGC和TGC是cas server的一对cookie和session，这样理解就可以了，TGC是用户在cas server登录过的凭证</p><p>ST是允许用户访问某一APP的凭据，这个讲起来比较抽象，下面看图，这个图假设用户已经获取了TGC（要注意，上面的流程图已经和这里不同了，也就是说上面的图为了简化流程本身就有错误的内容）</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221118190222832.png" alt="image-20221118190222832" /></p><p><code>是不是看完这些更加头晕了，由于拆分了流程，局部的认知可能还是会让你感到不明白，下面我们来看看整个流程</code></p><h2 id="未登录状态下无tgc的完整流程"><a class="markdownIt-Anchor" href="#未登录状态下无tgc的完整流程"></a> 未登录状态下（无TGC）的完整流程</h2><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/5e8d855819894c3fa1f8ba85ead37cb2_tplv-k3u1fbpfcp-zoom-in-crop-mark_4536_0_0_0.png" alt="" /></p><p>这里我能说的就是大家认真看图，一定要把四个角色在流程中做什么搞清楚</p><h2 id="有tgc状态下登录app"><a class="markdownIt-Anchor" href="#有tgc状态下登录app"></a> 有TGC状态下登录APP</h2><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/d3264e5b6f18444cb700616d6904fcf8_tplv-k3u1fbpfcp-zoom-in-crop-mark_4536_0_0_0.png" alt="" /></p><p>流程和上面区别不大，唯一的区别就是免去了用户了登录，这也是cas最重要的地方</p><h2 id="退出登录"><a class="markdownIt-Anchor" href="#退出登录"></a> 退出登录</h2><p>需要了解的是，使用cas server的App在一个退出登陆后会全部退出登录</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/a616807e5bd34deb985c72a201826695_tplv-k3u1fbpfcp-zoom-in-crop-mark_4536_0_0_0.png" alt="" /></p><p>流程有点多，静下心来也许才是最好的方法</p>]]></content>
      
      
      
        <tags>
            
            <tag> sso </tag>
            
            <tag> cas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>swaggo的使用</title>
      <link href="/2022/11/17/swaggo%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/11/17/swaggo%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>swag是一个为Go语言生成文档的框架，主要有两个部分组成</p><ul><li>swag命令行工具，用于把Go注释生成为对应的Swagger2.0文档</li><li>为多种流行框架准备的插件，可以帮助我们快速嵌入Swag</li></ul><h1 id="快速开始以gin为例"><a class="markdownIt-Anchor" href="#快速开始以gin为例"></a> 快速开始(以gin为例)</h1><h2 id="下载和使用swag命令行工具"><a class="markdownIt-Anchor" href="#下载和使用swag命令行工具"></a> 下载和使用swag命令行工具</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go install github.com/swaggo/swag/cmd/swag@latest</span></span><br></pre></td></tr></table></figure><p>如果不能使用记得检查一下你的<code>$&#123;GOPATH&#125;/bin</code>目录是否加入了环境变量，接下来我们加上Go注释，main()函数中的内容我们暂且不需要管，在你的main.go中加入上面的注释部分就可以了，如果你不想把注释放在main.go的位置，后面使用swag命令行工具的过程中需要带上相关的参数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @title           Swagger Example API</span></span><br><span class="line"><span class="comment">// @version         1.0</span></span><br><span class="line"><span class="comment">// @description     This is a sample server celler server.</span></span><br><span class="line"><span class="comment">// @termsOfService  http://swagger.io/terms/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @contact.name   API Support</span></span><br><span class="line"><span class="comment">// @contact.url    http://www.swagger.io/support</span></span><br><span class="line"><span class="comment">// @contact.email  support@swagger.io</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @license.name  Apache 2.0</span></span><br><span class="line"><span class="comment">// @license.url   http://www.apache.org/licenses/LICENSE-2.0.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @host      localhost:8080</span></span><br><span class="line"><span class="comment">// @BasePath  /api/v1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @securityDefinitions.basic  BasicAuth</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := gin.Default()</span><br><span class="line"></span><br><span class="line">    c := controller.NewController()</span><br><span class="line"></span><br><span class="line">    v1 := r.Group(<span class="string">&quot;/api/v1&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        accounts := v1.Group(<span class="string">&quot;/accounts&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            accounts.GET(<span class="string">&quot;:id&quot;</span>, c.ShowAccount)</span><br><span class="line">            accounts.GET(<span class="string">&quot;&quot;</span>, c.ListAccounts)</span><br><span class="line">            accounts.POST(<span class="string">&quot;&quot;</span>, c.AddAccount)</span><br><span class="line">            accounts.DELETE(<span class="string">&quot;:id&quot;</span>, c.DeleteAccount)</span><br><span class="line">            accounts.PATCH(<span class="string">&quot;:id&quot;</span>, c.UpdateAccount)</span><br><span class="line">            accounts.POST(<span class="string">&quot;:id/images&quot;</span>, c.UploadAccountImage)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">    r.GET(<span class="string">&quot;/swagger/*any&quot;</span>, ginSwagger.WrapHandler(swaggerFiles.Handler))</span><br><span class="line">    r.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><p>生成swag的docs目录，目录中包含了swag文档中的所有信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">swag init</span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221117204850694.png" alt="image-20221117204850694" /></p><p>如果你的注释在其它地方，加上-g参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">swag init -g &lt;filepath&gt;</span></span><br></pre></td></tr></table></figure><p>然后我们可以使用swag的fmt命令来格式化我们的注释，当然，这不是必须的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">swag <span class="built_in">fmt</span></span></span><br></pre></td></tr></table></figure><h2 id="整合gin"><a class="markdownIt-Anchor" href="#整合gin"></a> 整合gin</h2><p>下载相关包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get -u github.com/swaggo/swag/cmd/swag</span></span><br></pre></td></tr></table></figure><p>然后，在给swagger分配路由的文件中加上对应的包，分配路由的代码如下所示</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/swagger/*any&quot;</span>, ginSwagger.WrapHandler(swaggerFiles.Handler))</span><br></pre></td></tr></table></figure><p>就是你想把这行代码放在什么位置，就把对应的包引入。这里切记，一定要导入的docs文件，否则swagger将会找不到数据！</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;github.com/swaggo/gin-swagger&quot;</span> <span class="comment">// gin-swagger middleware</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;github.com/swaggo/files&quot;</span> <span class="comment">// swagger embed files</span></span><br><span class="line"><span class="keyword">import</span> _<span class="string">&quot;project-name/docs&quot;</span> <span class="comment">// 导入你的docs文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过下面这个方式给swagger文档分配路由</span></span><br><span class="line"><span class="comment">// 访问/swagger/index.html</span></span><br><span class="line">r.GET(<span class="string">&quot;/swagger/*any&quot;</span>, ginSwagger.WrapHandler(swaggerFiles.Handler))</span><br></pre></td></tr></table></figure><p>最后访问<code>/swagger/index.html</code>就可以生效了</p><h2 id="给api添加注释"><a class="markdownIt-Anchor" href="#给api添加注释"></a> 给API添加注释</h2><p>我们简单看个例子</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ListAccounts godoc</span></span><br><span class="line"><span class="comment">// @Summary      List accounts</span></span><br><span class="line"><span class="comment">// @Description  get accounts</span></span><br><span class="line"><span class="comment">// @Tags         accounts</span></span><br><span class="line"><span class="comment">// @Accept       json</span></span><br><span class="line"><span class="comment">// @Produce      json</span></span><br><span class="line"><span class="comment">// @Param        q    query     string  false  &quot;name search by q&quot;  Format(email)</span></span><br><span class="line"><span class="comment">// @Success      200  &#123;array&#125;   model.Account</span></span><br><span class="line"><span class="comment">// @Failure      400  &#123;object&#125;  httputil.HTTPError</span></span><br><span class="line"><span class="comment">// @Failure      404  &#123;object&#125;  httputil.HTTPError</span></span><br><span class="line"><span class="comment">// @Failure      500  &#123;object&#125;  httputil.HTTPError</span></span><br><span class="line"><span class="comment">// @Router       /accounts [get]</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Controller)</span></span> ListAccounts(ctx *gin.Context) &#123;</span><br><span class="line">  q := ctx.Request.URL.Query().Get(<span class="string">&quot;q&quot;</span>)</span><br><span class="line">  accounts, err := model.AccountsAll(q)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    httputil.NewError(ctx, http.StatusNotFound, err)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  ctx.JSON(http.StatusOK, accounts)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多的例子大家自己去读官方文档，我就不具体介绍了，这里要提一句，注释和对应的函数之间不能有空行，否则不会给这个函数生成文档</p><p><a href="https://github.com/swaggo/swag">swaggo/swag</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> swaggo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署到自己的云服务器</title>
      <link href="/2022/11/09/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2022/11/09/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="开始之前"><a class="markdownIt-Anchor" href="#开始之前"></a> 开始之前</h1><p>本文不会涉及hexo的使用，请先去了解hexo的基本使用和部署，也可以参考我的文章<a href="/2022/11/05/hexo%E5%BB%BA%E7%AB%99%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/" title="hexo建站简明教程">hexo建站简明教程</a>。</p><p>本教程基于Centos7.6，如果是其它linux发行版请自行修改相应命令。</p><h1 id="构建服务器环境"><a class="markdownIt-Anchor" href="#构建服务器环境"></a> 构建服务器环境</h1><h2 id="安装git和nginx"><a class="markdownIt-Anchor" href="#安装git和nginx"></a> 安装git和nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br><span class="line">yum install nginx</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ubuntu</span></span><br><span class="line">apt install git</span><br><span class="line">apt install nginx</span><br></pre></td></tr></table></figure><h2 id="配置git仓库"><a class="markdownIt-Anchor" href="#配置git仓库"></a> 配置git仓库</h2><p>下面的用户和目录都可以自己定义，但注意要保持上下文统一</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">useradd hexo # 添加一个用户，其实也不是必须的</span><br><span class="line">chown -R hexo:hexo /home/hexo # 把目录的归属权交给hexo用户</span><br><span class="line">cd home</span><br><span class="line">chmod o+x hexo # 默认创建的hexo文件夹只有hexo有执行权限，nginx用户没有执行权限，将会导致403</span><br><span class="line">cd hexo</span><br><span class="line">mkdir -p /home/hexo/www/blog # 创建博客部署目录</span><br><span class="line">git init --bare blog.git # 裸仓库，没有工作空间</span><br><span class="line">cd /home/hexo/blog.git/hooks</span><br><span class="line">vim post-receive # 创建钩子文件</span><br></pre></td></tr></table></figure><p>然后我们添加如下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">git --work-tree=/home/hexo/www/blog --git-dir=/home/hexo/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>注意<code>#!/bin/sh</code>不要漏了，这里声明了下面脚本执行器的位置。</p><p><code>work-tree</code>：工作目录</p><p><code>git-dir</code>：git仓库目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x post-receive # 给与执行权限</span><br></pre></td></tr></table></figure><p>远程的git仓库大致配置就是如此</p><h2 id="配置ssh"><a class="markdownIt-Anchor" href="#配置ssh"></a> 配置ssh</h2><p>在你的windows电脑上生成ssh公钥密钥（需要安装git）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>下面会让你输入公钥和密钥的保存位置和密码等，如果不想输入可以按回车，这将使用默认的存放位置和空的密码。</p><p>默认存在在你的<code>C:\Users\用户名\.ssh</code>目录下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221109162309901.png" alt="image-20221109162309901" /></p><p>这里建议用支持ftp的第三方工具直接操作。</p><p>把<code>id_rsa.pub</code>放到服务器的<code>/home/hexo/.ssh/authorized_keys</code>文件中（如果文件中已经存在公钥，追加在文件下面即可）。</p><p>如果不使用第三方工具，使用powershell用root登录到服务器上（hexo用户目前没有设置密码），然后上传到服务器中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh root@ip # 这里的ip要换成你的服务器ip</span><br><span class="line">scp 本地文件位置 root@ip:/home/hexo/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>配置完可以测试一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh hexo@ip</span><br></pre></td></tr></table></figure><p>配置成功应该可以直接登录</p><h2 id="将本地hexo博客上传到服务器"><a class="markdownIt-Anchor" href="#将本地hexo博客上传到服务器"></a> 将本地hexo博客上传到服务器</h2><p>修改博客目录下的<code>_config.yaml</code>文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">hexo@ip:/home/hexo/blog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>将deploy部分修改如上，然后使用部署命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>现在我们可以在<code>/home/hexo/www/blog</code>目录下看到上传的文件</p><h2 id="配置nginx"><a class="markdownIt-Anchor" href="#配置nginx"></a> 配置nginx</h2><p>最后使用nginx反向代理就可以实现访问了。</p><p>使用http</p><p><code>/etc/nginx/nginx.conf</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># For more information on configuration, see:</span></span><br><span class="line"><span class="comment">#   * Official English Documentation: http://nginx.org/en/docs/</span></span><br><span class="line"><span class="comment">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">user</span> nginx;</span><br><span class="line"><span class="attribute">worker_processes</span> auto;</span><br><span class="line"><span class="attribute">error_log</span> /var/log/nginx/<span class="literal">error</span>.log;</span><br><span class="line"><span class="attribute">pid</span> /run/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</span></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span> <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">&#x27;<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] &quot;<span class="variable">$request</span>&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> &quot;<span class="variable">$http_referer</span>&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;<span class="variable">$http_user_agent</span>&quot; &quot;<span class="variable">$http_x_forwarded_for</span>&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span>  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>            <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">tcp_nopush</span>          <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">tcp_nodelay</span>         <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">keepalive_timeout</span>   <span class="number">65</span>;</span><br><span class="line">    <span class="attribute">types_hash_max_size</span> <span class="number">4096</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">include</span>             /etc/nginx/mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>        application/octet-stream;</span><br><span class="line">    <span class="comment"># Load modular configuration files from the /etc/nginx/conf.d directory.</span></span><br><span class="line">    <span class="comment"># See http://nginx.org/en/docs/ngx_core_module.html#include</span></span><br><span class="line">    <span class="comment"># for more information.</span></span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">listen</span>       [::]:<span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  _;</span><br><span class="line">        <span class="attribute">root</span>         /home/hexo/www/blog;</span><br><span class="line">        <span class="attribute">charset</span> utf8;</span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">error_page</span> <span class="number">404</span> /<span class="number">404</span>.html;</span><br><span class="line">        <span class="section">location</span> = /<span class="number">404</span>.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">error_page</span> <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html;</span><br><span class="line">        <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果要配置https</p><p><code>/etc/nginx/nginx.conf</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># For more information on configuration, see:</span></span><br><span class="line"><span class="comment">#   * Official English Documentation: http://nginx.org/en/docs/</span></span><br><span class="line"><span class="comment">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">user</span> nginx;</span><br><span class="line"><span class="attribute">worker_processes</span> auto;</span><br><span class="line"><span class="attribute">error_log</span> /var/log/nginx/<span class="literal">error</span>.log;</span><br><span class="line"><span class="attribute">pid</span> /run/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</span></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span> <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">&#x27;<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] &quot;<span class="variable">$request</span>&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> &quot;<span class="variable">$http_referer</span>&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;<span class="variable">$http_user_agent</span>&quot; &quot;<span class="variable">$http_x_forwarded_for</span>&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span>  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>            <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">tcp_nopush</span>          <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">tcp_nodelay</span>         <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">keepalive_timeout</span>   <span class="number">65</span>;</span><br><span class="line">    <span class="attribute">types_hash_max_size</span> <span class="number">4096</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">include</span>             /etc/nginx/mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>        application/octet-stream;</span><br><span class="line">    <span class="comment"># Load modular configuration files from the /etc/nginx/conf.d directory.</span></span><br><span class="line">    <span class="comment"># See http://nginx.org/en/docs/ngx_core_module.html#include</span></span><br><span class="line">    <span class="comment"># for more information.</span></span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">443</span> ssl http2;</span><br><span class="line">        <span class="attribute">listen</span>       [::]:<span class="number">443</span> ssl http2;</span><br><span class="line">        <span class="attribute">server_name</span>  _;</span><br><span class="line">        <span class="attribute">root</span>         /home/hexo/www/blog;</span><br><span class="line">        <span class="attribute">charset</span> utf8;</span><br><span class="line">        <span class="attribute">ssl_certificate</span>     证书所在位置;</span><br><span class="line">        <span class="attribute">ssl_certificate_key</span> 证书的密钥所在位置;</span><br><span class="line">        <span class="attribute">ssl_session_cache</span> shared:SSL:<span class="number">1m</span>;</span><br><span class="line">        <span class="attribute">ssl_session_timeout</span>  <span class="number">10m</span>;</span><br><span class="line">        <span class="attribute">ssl_ciphers</span> HIGH:!aNULL:!MD5;</span><br><span class="line">        <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">error_page</span> <span class="number">404</span> /<span class="number">404</span>.html;</span><br><span class="line">        <span class="section">location</span> = /<span class="number">404</span>.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">error_page</span> <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html;</span><br><span class="line">        <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置好后我们重新加载一下nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nginx -t # 检查nginx配置文件语法是否正确</span><br><span class="line">systemctl start nginx # 如果没有启动nginx</span><br><span class="line">systemctl reload nginx # 重新加载配置文件</span><br></pre></td></tr></table></figure><p>最后测试一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">http</span></span><br><span class="line">curl localhost</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">https</span></span><br><span class="line">curl https://域名</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github-action简明教程</title>
      <link href="/2022/11/08/github-action%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/"/>
      <url>/2022/11/08/github-action%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="github-actions是什么"><a class="markdownIt-Anchor" href="#github-actions是什么"></a> Github Actions是什么</h1><p>GitHub Actions 是一种持续集成和持续交付 (CI/CD) 平台，可用于自动执行生成、测试和部署管道。简单地说，就是通过编写符合Github Actions要求的<code>&quot;脚本&quot;</code>，让Github来执行这一的<code>&quot;脚本&quot;</code>。</p><p>在开始之前，还是有必要简单的介绍一下持续集成。</p><p><strong>持续集成指的是，频繁地（一天多次）将代码集成到主干。</strong></p><p>它的好处主要有两个。</p><blockquote><p>**（1）快速发现错误。**每完成一点更新，就集成到主干，可以快速发现错误，定位错误也比较容易。</p><p>**（2）防止分支大幅偏离主干。**如果不是经常集成，主干又在不断更新，会导致以后集成的难度变大，甚至难以集成。</p></blockquote><p>**持续集成的目的，就是让产品可以快速迭代，同时还能保持高质量。**它的核心措施是，代码集成到主干之前，必须通过自动化测试。只要有一个测试用例失败，就不能集成。</p><h1 id="理解github-actions工作流"><a class="markdownIt-Anchor" href="#理解github-actions工作流"></a> 理解Github Actions工作流</h1><p>上文中我们提到的脚本在具体的实现中就是一个工作流文件，该文件采用yaml编写，文件的命名没有要求，放置在代码仓库的<code>.github/workflows</code>文件夹下。下面我们通过一个最简单的工作流文件来理解工作流的组成，然后我们尝试让Github帮助我们完成下面的工作。</p><p><code>example.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">GitHub</span> <span class="string">Actions</span> <span class="string">Demo</span></span><br><span class="line"><span class="attr">run-name:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.actor</span> <span class="string">&#125;&#125;</span> <span class="string">is</span> <span class="string">testing</span> <span class="string">out</span> <span class="string">GitHub</span> <span class="string">Actions</span> <span class="string">🚀</span></span><br><span class="line"><span class="attr">on:</span> [<span class="string">push</span>]</span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="comment"># 工作名字，没有要求  </span></span><br><span class="line">  <span class="attr">Explore-GitHub-Actions:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">echo</span> <span class="string">&quot;🎉 The job was automatically triggered by a $<span class="template-variable">&#123;&#123; github.event_name &#125;&#125;</span> event.&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">echo</span> <span class="string">&quot;🐧 This job is now running on a $<span class="template-variable">&#123;&#123; runner.os &#125;&#125;</span> server hosted by GitHub!&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">echo</span> <span class="string">&quot;🔎 The name of your branch is $<span class="template-variable">&#123;&#123; github.ref &#125;&#125;</span> and your repository is $<span class="template-variable">&#123;&#123; github.repository &#125;&#125;</span>.&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Check</span> <span class="string">out</span> <span class="string">repository</span> <span class="string">code</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">echo</span> <span class="string">&quot;💡 The $<span class="template-variable">&#123;&#123; github.repository &#125;&#125;</span> repository has been cloned to the runner.&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">echo</span> <span class="string">&quot;🖥️ The workflow is now ready to test your code on the runner.&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">List</span> <span class="string">files</span> <span class="string">in</span> <span class="string">the</span> <span class="string">repository</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          ls $&#123;&#123; github.workspace &#125;&#125;</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">echo</span> <span class="string">&quot;🍏 This job&#x27;s status is $<span class="template-variable">&#123;&#123; job.status &#125;&#125;</span>.&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221108214958201.png" alt="image-20221108214958201" /></p><h2 id="github-actions组成"><a class="markdownIt-Anchor" href="#github-actions组成"></a> Github Actions组成</h2><h3 id="workflows工作流"><a class="markdownIt-Anchor" href="#workflows工作流"></a> Workflows——工作流</h3><p>工作流是一个可配置的自动化过程，它将运行一个或多个作业。说得具体一点，工作流是对工作流程及其各操作步骤之间业务规则的抽象和概括描述。比如说你要做一件事，完成这件事要有很多的步骤，而这些步骤之间相互的关系和逻辑就是一个工作流。</p><p>在Github Actions中，工作流由签入到存储库的 YAML 文件定义，并在存储库中的事件触发时运行，也可以手动触发，或按定义的时间表触发，在上面这个例子中，由<code>on</code>标签定义触发事件，表示当你把代码push到仓库时触发这个工作流。</p><p>简单来说，一个yaml文件就代表了一个工作流。一个仓库可以配置多个工作流文件，它们将独立执行。</p><p><code>name: GitHub Actions Demo</code>：定义了这个工作流的名字</p><p><code>run-name</code>：当前正在运行的工作流名称</p><h3 id="events事件"><a class="markdownIt-Anchor" href="#events事件"></a> Events——事件</h3><p>一个具体的活动，用于触发工作流执行。</p><p><code>on</code>：触发工作流的事件，在这个案例中表示向这个仓库中push就会执行这个工作流</p><h3 id="jobs工作和steps步骤"><a class="markdownIt-Anchor" href="#jobs工作和steps步骤"></a> Jobs——工作和Steps——步骤</h3><p>一个工作是一系列执行在同一个服务器上的步骤的集合。每个步骤都是一个Shell脚本或者一个actions（一系列由他人已经完成的脚本）。这些步骤会在同一台机器上运行，它们共享上下文和依赖，步骤之间按照顺序执行。</p><p><code>name</code>：定义了步骤的名字</p><p><code>run</code>：一个步骤具体要执行的内容</p><h3 id="actions"><a class="markdownIt-Anchor" href="#actions"></a> Actions</h3><p>一系列由他人写好的脚本，这些脚本在Github的<code>Marketplace</code>中可以找到，使用Actions可以大大减少我们需要编写的代码量，避免执行重复的操作，比如着这个示例文件中使用的<code>actions/checkout@v3</code>就是一个actions，它的作用是把当前仓库的文件转移到服务器中，如果工作流中需要执行脚本就必须包含这个actions，所以几乎大部分的工作流都会包含这个actions。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221108230338604.png" alt="image-20221108230338604" /></p><p><code>use</code>：声明要使用的actions</p><p><code>with</code>：配置actions参数</p><h3 id="runners"><a class="markdownIt-Anchor" href="#runners"></a> Runners</h3><p>运行工作流的服务器，这个服务器可以由Github免费提供，也可以运行在你自己的服务器上，目前Github提供三种操作系统</p><ul><li>Microsoft Windows</li><li>Ubuntu Linux</li><li>macOS</li></ul><p>由Github提供的服务器每次运行都是一个全新的，未配置过的新服务器。</p><p><code>runs-on</code>：定义了该工作使用的服务器</p><h3 id="环境变量和上下文"><a class="markdownIt-Anchor" href="#环境变量和上下文"></a> 环境变量和上下文</h3><p>即便没有学过，很明显<code>$&#123;&#123;&#125;&#125;</code>语法是一种取出变量的用法，这里不具体介绍。</p><h3 id="github-actions初步使用"><a class="markdownIt-Anchor" href="#github-actions初步使用"></a> Github Actions初步使用</h3><p>介绍完了基础概念，下面我们来用上面的工作流文件来第一次使用Github Actions</p><p>首先我们创建一个文件夹，将<code>example.yaml</code>放在<code>.github/workflows</code>文件夹下。然后我们将这个文件夹连接一个Github仓库，把这个仓库推送到Github上，我们找到仓库中的<code>Actions</code>选项，就可以看到我们编写的Github Actions工作流被执行了（正常来说只有一个，我的仓库之前已经执行过一些别的工作流了）。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221108222144851.png" alt="image-20221108222144851" /></p><p>点开查看这个工作流，我们可以查看到工作流的详细信息。</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221108222553490.png" alt="image-20221108222553490" /></p><p>这里的每一行都代表一个步骤，点开这些步骤你可以看到运行这些步骤产生的日志结果。比如我们设置的第一个步骤<code>🎉 The job was automatically triggered by a $&#123;&#123; github.event_name &#125;&#125; event.</code>，我们可以看到运行结果<code>🎉 The job was automatically triggered by a push event.</code>，很明显触发这个工作流的事件名是<code>push</code>，其它的类似。</p><p>我们再来看看这个步骤</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">List</span> <span class="string">files</span> <span class="string">in</span> <span class="string">the</span> <span class="string">repository</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">ls</span> <span class="string">$&#123;&#123;</span> <span class="string">github.workspace</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>这个步骤要求列出工作空间中的文件，我们点开这个步骤可以看到运行的结果</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221108223659524.png" alt="image-20221108223659524" /></p><p>现在我们完成了Github Actions的一个简单使用，如果想要更加深入的理解，可以自己动手去实践一下或者阅读我的博客</p><p>传送门：<a href="/2022/11/22/%E4%BB%8Egithub-page%E5%88%B0github-action/" title="从github page到github action">从github page到github action</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> github action </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大学物理光学笔记</title>
      <link href="/2022/11/07/%E5%A4%A7%E5%AD%A6%E7%89%A9%E7%90%86%E5%85%89%E5%AD%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/11/07/%E5%A4%A7%E5%AD%A6%E7%89%A9%E7%90%86%E5%85%89%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="简谐振动"><a class="markdownIt-Anchor" href="#简谐振动"></a> 简谐振动</h1><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>简谐振动的微分方程</mtext><mo>:</mo><mspace linebreak="newline"></mspace><mfrac><mrow><msup><mi>d</mi><mn>2</mn></msup><mi>x</mi></mrow><mrow><mi>d</mi><msup><mi>t</mi><mn>2</mn></msup></mrow></mfrac><mo>+</mo><msup><mi>w</mi><mn>2</mn></msup><mi>x</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">简谐振动的微分方程:\\\frac{d^2x}{dt^2}+w^2x=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">简</span><span class="mord cjk_fallback">谐</span><span class="mord cjk_fallback">振</span><span class="mord cjk_fallback">动</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">微</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">程</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>简谐振动方程</mtext><mo>:</mo><mspace linebreak="newline"></mspace><mi>x</mi><mo>=</mo><mi>A</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>w</mi><mi>t</mi><mo>+</mo><mi>φ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">简谐振动方程:\\x=Acos(wt+\varphi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">简</span><span class="mord cjk_fallback">谐</span><span class="mord cjk_fallback">振</span><span class="mord cjk_fallback">动</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">程</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mclose">)</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>质点运动的速度</mtext><mo>:</mo><mspace linebreak="newline"></mspace><mi>v</mi><mo>=</mo><mfrac><mrow><mi>d</mi><mi>x</mi></mrow><mrow><mi>d</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mi>A</mi><mi>w</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>w</mi><mi>t</mi><mo>+</mo><mi>φ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">质点运动的速度:\\v=\frac{dx}{dt}=-Awsin(wt+\varphi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">质</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">运</span><span class="mord cjk_fallback">动</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">度</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mclose">)</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>如果已知初始条件</mtext><mo>:</mo><mspace linebreak="newline"></mspace><mi>t</mi><mo>=</mo><mn>0</mn><mspace width="1em"/><mi>x</mi><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub><mspace width="1em"/><mi>v</mi><mo>=</mo><msub><mi>v</mi><mn>0</mn></msub><mspace linebreak="newline"></mspace><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mn>0</mn></msub><mo>=</mo><mi>A</mi><mi>c</mi><mi>o</mi><mi>s</mi><mi>φ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>v</mi><mn>0</mn></msub><mo>=</mo><mo>−</mo><mi>w</mi><mi>A</mi><mi>s</mi><mi>i</mi><mi>n</mi><mi>φ</mi></mrow></mstyle></mtd></mtr></mtable></mrow><mo>⟹</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>A</mi><mo>=</mo><msqrt><mrow><msubsup><mi>x</mi><mn>0</mn><mn>2</mn></msubsup><mo>+</mo><mfrac><msubsup><mi>v</mi><mn>0</mn><mn>2</mn></msubsup><msup><mi>w</mi><mn>2</mn></msup></mfrac></mrow></msqrt></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>φ</mi><mo>=</mo><mfrac><mrow><mo>−</mo><msub><mi>v</mi><mn>0</mn></msub></mrow><mrow><mi>w</mi><msub><mi>x</mi><mn>0</mn></msub></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">如果已知初始条件:\\t = 0\quad x = x_0\quad v=v_0\\\begin{cases}x_0=Acos\varphi\\v_0=-wAsin\varphi\end{cases}\Longrightarrow\begin{cases}A=\sqrt{x_0^2+\frac{v_0^2}{w^2}}\\tan\varphi=\frac{-v_0}{wx_0}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">如</span><span class="mord cjk_fallback">果</span><span class="mord cjk_fallback">已</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">初</span><span class="mord cjk_fallback">始</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">件</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal">φ</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">A</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">φ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2931em;vertical-align:-1.39655em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.89655em;"><span style="top:-3.8965499999999995em;"><span class="pstrut" style="height:3.35832em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.35832em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959080000000001em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.09164em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.52806em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051142857142857em;"><span style="top:-2.188485714285714em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31151428571428574em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.31832em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4816800000000001em;"><span></span></span></span></span></span></span></span><span style="top:-2.40687em;"><span class="pstrut" style="height:3.35832em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">φ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8184309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.39655em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h1 id="由已知条件求简谐振动方程"><a class="markdownIt-Anchor" href="#由已知条件求简谐振动方程"></a> 由已知条件求简谐振动方程</h1><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>简谐振动方程</mtext><mo>:</mo><mi>x</mi><mo>=</mo><mi>A</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>w</mi><mi>t</mi><mo>+</mo><mi>φ</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>速度</mtext><mo>:</mo><mi>v</mi><mo>=</mo><mfrac><mrow><mi>d</mi><mi>x</mi></mrow><mrow><mi>d</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mi>A</mi><mi>w</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>w</mi><mi>t</mi><mo>+</mo><mi>φ</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>加速度</mtext><mo>:</mo><mi>a</mi><mo>=</mo><mfrac><mrow><msup><mi>d</mi><mn>2</mn></msup><mi>x</mi></mrow><mrow><mi>d</mi><msup><mi>t</mi><mn>2</mn></msup></mrow></mfrac><mo>=</mo><mo>−</mo><mi>A</mi><msup><mi>w</mi><mn>2</mn></msup><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>w</mi><mi>t</mi><mo>+</mo><mi>φ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">简谐振动方程:x=Acos(wt+\varphi)\\速度:v=\frac{dx}{dt}=-Awsin(wt+\varphi)\\加速度:a=\frac{d^2x}{dt^2}=-Aw^2cos(wt+\varphi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">简</span><span class="mord cjk_fallback">谐</span><span class="mord cjk_fallback">振</span><span class="mord cjk_fallback">动</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">程</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">度</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">度</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mclose">)</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>简谐振动的能量</mtext><mo>:</mo><mspace linebreak="newline"></mspace><mi>E</mi><mo>=</mo><msub><mi>E</mi><mi>k</mi></msub><mo>+</mo><msub><mi>E</mi><mi>p</mi></msub><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>k</mi><msup><mi>A</mi><mn>2</mn></msup><mo>∝</mo><msup><mi>A</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">简谐振动的能量:\\E=E_k+E_p=\frac{1}{2}kA^2\propto A^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">简</span><span class="mord cjk_fallback">谐</span><span class="mord cjk_fallback">振</span><span class="mord cjk_fallback">动</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">能</span><span class="mord cjk_fallback">量</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∝</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>其它公式</mtext><mo>:</mo><mspace linebreak="newline"></mspace><mi>w</mi><mo>=</mo><msqrt><mfrac><mi>k</mi><mi>m</mi></mfrac></msqrt></mrow><annotation encoding="application/x-tex">其它公式:\\w=\sqrt \frac{k}{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">它</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">式</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.7634050000000001em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6765949999999998em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span style="top:-3.6365950000000002em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7634050000000001em;"><span></span></span></span></span></span></span></span></span></span></p><h1 id="简谐振动的判定"><a class="markdownIt-Anchor" href="#简谐振动的判定"></a> 简谐振动的判定</h1><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>简谐运动的判断式</mtext><mo>:</mo><mspace linebreak="newline"></mspace><mtext>平动</mtext><mo>:</mo><mspace linebreak="newline"></mspace><msub><mi>F</mi><mtext>合</mtext></msub><mo>=</mo><mi>m</mi><mi>a</mi><mo>=</mo><mi>m</mi><mfrac><mrow><msup><mi>d</mi><mn>2</mn></msup><mi>x</mi></mrow><mrow><mi>d</mi><msup><mi>t</mi><mn>2</mn></msup></mrow></mfrac><mspace linebreak="newline"></mspace><mfrac><msup><mi>d</mi><mn>2</mn></msup><mrow><mi>d</mi><msup><mi>t</mi><mn>2</mn></msup></mrow></mfrac><mo>+</mo><msup><mi>w</mi><mn>2</mn></msup><mi>x</mi><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mtext>弹簧振子</mtext><mo>:</mo><mspace linebreak="newline"></mspace><mi>F</mi><mo>=</mo><mo>−</mo><mi>k</mi><mi>x</mi><mspace linebreak="newline"></mspace><mo>⇓</mo><mspace linebreak="newline"></mspace><mi>m</mi><mi>a</mi><mo>=</mo><mo>−</mo><mi>k</mi><mi>x</mi><mspace linebreak="newline"></mspace><mo>⇓</mo><mspace linebreak="newline"></mspace><mi>a</mi><mo>+</mo><mfrac><mi>k</mi><mi>m</mi></mfrac><mi>x</mi><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mtext>令</mtext><msup><mi>w</mi><mn>2</mn></msup><mo>=</mo><mfrac><mi>k</mi><mi>m</mi></mfrac><mspace linebreak="newline"></mspace><mfrac><mrow><msup><mi>d</mi><mn>2</mn></msup><mi>x</mi></mrow><mrow><mi>d</mi><msup><mi>t</mi><mn>2</mn></msup></mrow></mfrac><mo>+</mo><msup><mi>w</mi><mn>2</mn></msup><mi>x</mi><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mtext>转动</mtext><mo>:</mo><mspace linebreak="newline"></mspace><mi>M</mi><mo>=</mo><mi>J</mi><mi>α</mi><mo>=</mo><mi>J</mi><mfrac><mrow><msup><mi>d</mi><mn>2</mn></msup><mi>θ</mi></mrow><mrow><mi>d</mi><msup><mi>t</mi><mn>2</mn></msup></mrow></mfrac><mspace linebreak="newline"></mspace><mfrac><mrow><msup><mi>d</mi><mn>2</mn></msup><mi>θ</mi></mrow><mrow><mi>d</mi><msup><mi>t</mi><mn>2</mn></msup></mrow></mfrac><mo>+</mo><msup><mi>w</mi><mn>2</mn></msup><mi>θ</mi><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mtext>单摆</mtext><mo>:</mo><mspace linebreak="newline"></mspace><msup><mi>w</mi><mn>2</mn></msup><mo>=</mo><mfrac><mrow><mi>m</mi><mi>g</mi><mi>l</mi></mrow><mi>J</mi></mfrac><mspace linebreak="newline"></mspace><mi>θ</mi><mo>=</mo><msub><mi>θ</mi><mn>0</mn></msub><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>w</mi><mi>t</mi><mo>+</mo><mi>ϕ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">简谐运动的判断式:\\平动:\\F_合=ma=m\frac{d^2x}{dt^2}\\\frac{d^2}{dt^2}+w^2x=0\\弹簧振子:\\F=-kx\\\Downarrow\\ma=-kx\\\Downarrow\\a+\frac{k}{m}x=0\\令w^2=\frac{k}{m}\\\frac{d^2x}{dt^2}+w^2x=0\\\\转动:\\M=J\alpha=J\frac{d^2\theta}{dt^2}\\\frac{d^2\theta}{dt^2}+w^2\theta=0\\单摆:\\w^2=\frac{mgl}{J}\\\theta=\theta_0cos(wt+\phi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">简</span><span class="mord cjk_fallback">谐</span><span class="mord cjk_fallback">运</span><span class="mord cjk_fallback">动</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">判</span><span class="mord cjk_fallback">断</span><span class="mord cjk_fallback">式</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">动</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">合</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord mathnormal">m</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">弹</span><span class="mord cjk_fallback">簧</span><span class="mord cjk_fallback">振</span><span class="mord cjk_fallback">子</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">⇓</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">⇓</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord cjk_fallback">令</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">转</span><span class="mord cjk_fallback">动</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">摆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0574399999999997em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mclose">)</span></span></span></span></span></p>]]></content>
      
      
      
        <tags>
            
            <tag> 物理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo建站简明教程</title>
      <link href="/2022/11/05/hexo%E5%BB%BA%E7%AB%99%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/"/>
      <url>/2022/11/05/hexo%E5%BB%BA%E7%AB%99%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="安装nodejs"><a class="markdownIt-Anchor" href="#安装nodejs"></a> 安装node.js</h1><p>前往官网下载长期稳定版的node.js</p><p><a href="https://nodejs.org/zh-cn/">Node.js </a></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105082507512.png" alt="image-20221105082507512" /></p><p>下载完成以后检查一下能否打印出版本，正常打印就表示下载成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br><span class="line">node -v</span><br></pre></td></tr></table></figure><h1 id="安装hexo"><a class="markdownIt-Anchor" href="#安装hexo"></a> 安装hexo</h1><p>我们用npm在全局安装hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>检查一下是否下载成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h1 id="初始化博客"><a class="markdownIt-Anchor" href="#初始化博客"></a> 初始化博客</h1><p>找到你想要放置博客的目录，在当前目录下执行初始化命令，后面跟着你想给博客目录取的名字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;dir-name&gt;</span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105083029837.png" alt="image-20221105083029837" /></p><p>现在你可以看到当前目录下多出了<code>my-blog</code>目录，我们进入到这个文件夹中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd myblog</span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105083256875.png" alt="image-20221105083256875" /></p><p>你看到目录结构大概是这样的，作为使用者，我们不需要了解每个目录的作用，我们着重需要关注的是下面这些文件</p><ul><li>source——<code>保存你的博客文章的源文件，也就是以后你写的文章都会在这个目录里面</code><ul><li>点开source，我们会发现一个<code>_post</code>目录，这是存在已发布文章的目录，你可以看见这里面已经有一篇<code>helloworld</code>了</li></ul></li><li>_config.yml——<code>博客的配置文件</code></li></ul><h1 id="运行你的博客"><a class="markdownIt-Anchor" href="#运行你的博客"></a> 运行你的博客</h1><p>接下来我们将运行你的博客</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105083902252.png" alt="image-20221105083902252" /></p><p>然后在浏览器中输入<code>localhost:4000</code>，就可以看到你部署的博客</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105084002617.png" alt="image-20221105084002617" /></p><p>在控制台中输入<code>Ctrl+C</code>可以停止运行博客</p><h1 id="hexo初步使用"><a class="markdownIt-Anchor" href="#hexo初步使用"></a> hexo初步使用</h1><p>我们现在已经安装好了我们的hexo博客，下面我们来简单的使用一下它</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建文章</span></span><br><span class="line">hexo new &quot;my-first-post&quot;</span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105084328948.png" alt="image-20221105084328948" /></p><p>然后进入到<code>source/_post</code>目录中查看</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105084355396.png" alt="image-20221105084355396" /></p><p>可以看到之前创建的文章，然后我们打开它，随便输入一点测试内容</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105084502155.png" alt="image-20221105084502155" /></p><p>我们已经写好了我们的文章，现在我们要把这篇文章发布到博客上，我们现在需要hexo框架帮助我们生成对应的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105084749897.png" alt="image-20221105084749897" /></p><p>这样就生成好了，最后，我们再次运行我们的博客查看部署的情况</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>刷新浏览器，点击<code>Archives</code> ，我们可以看到我们刚刚创建的文章</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105084936293.png" alt="image-20221105084936293" /></p><p>这样我们就初步掌握了hexo的使用，现在我来总结一些hexo常用命令</p><ul><li><code>hexo clean </code>:清除由<code>hexo g</code>生成的文件，一般来说没什么用，当部署出现问题的时候可以尝试清除然后重新生成</li><li><code>hexo g</code>:把我们写好的文章生成对应的文件(其实是html)</li><li><code>hexo s</code>：运行博客</li><li><code>hexo new &lt;post-name&gt;</code>：生成文章模板</li></ul><p>接下来的步骤都要使用git，没有git的小伙伴可以先暂停去下载git</p><h1 id="美化和定制化博客"><a class="markdownIt-Anchor" href="#美化和定制化博客"></a> 美化和定制化博客</h1><p>我们现在使用了博客默认的主题，有些人可能对这个主题并不满意，没有关系，hexo中有大量的主题可以供你选择，现在我们来尝试使用hexo最常用的博客主题之一——<code>butterfly</code></p><p>下载安装<code>butterfly</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先不要急着输入命令，检查一下你是否在正确的目录，注意命令在有_config.yml的根目录下执行</span></span><br><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>然后我们可以看到出现了这个文件夹<code>themes/butterfly</code></p><p>我们进入到这个文件夹中，复制一份<code>_config.yml</code>，将它改名为<code>_config.butterfly.yml</code>，然后把这个改名后的文件移动到你的博客目录下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105090235722.png" alt="image-20221105090235722" /></p><p>剪切到博客目录下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105090301838.png" alt="image-20221105090301838" /></p><p>打开博客目录下的<code>_config.yml</code>，修改主题为<code>butterfly</code></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105090705931.png" alt="image-20221105090705931" /></p><p>最后重新生成文件然后运行博客，大功告成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105090745946.png" alt="image-20221105090745946" /></p><p>怎么样，是不是比原来的好看一点了，关于站点信息的配置和更加详细的定制化需求，可以自行阅读<code>butterfly</code>的官方文档和<code>hexo</code>的文档</p><p><a href="https://butterfly.js.org/">Butterfly - A Simple and Card UI Design theme for Hexo</a></p><p><a href="https://hexo.io/zh-cn/docs/configuration.html">配置 | Hexo</a></p><p>如果想要配置其它的主题，可以自己上网搜索配置，主题的配置暂时就到这里了</p><h1 id="部署博客到github"><a class="markdownIt-Anchor" href="#部署博客到github"></a> 部署博客到github</h1><p>下面的教程都假设你已经完成了git的配置并且已经注册好了github账号</p><p>首先，我们创建一个仓库，仓库名叫做<code>&lt;github用户名&gt;.github.io</code></p><p>比如我的的github用户名叫做<code>jking412</code>，那么这个仓库名就是<code>jking412.github.io</code></p><p>然后复制下你仓库的地址（我的仓库之前已经创建过了，新创建的仓库是空的）<img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221105091649357.png" alt="image-20221105091649357" /></p><p>在博客目录的<code>_config.yml</code>文件下的<code>deploy</code>中配置如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/jking412/jking412.github.io.git</span> <span class="comment"># 这里是你的仓库链接</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>最后我们安装好依赖，就可以把我们本地的内容推送到github上了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>在部署完成以后，我们可以访问<code>http://&lt;github用户名&gt;.github.io</code>访问到你的博客</p><p>比如我的博客网址就是<code>jking412.github.io</code></p><p>部署可能会花费1~2分钟，我们耐心等待以后就可以看到啦</p><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>总结一下我们日常使用hexo的流程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建文章</span></span><br><span class="line">hexo new &quot;post&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改文章以后生成</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">现在本地看一下博客有没有问题</span></span><br><span class="line">hexo s</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">没有问题就推送到github，注意不要推送的太频繁，可能会被github限制</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>有了博客，我们就可以记录下自己生活中的点点滴滴，博客也是帮助自己走向优秀的重要工具，要好好使用它呀</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>『mysql』mysql语法速记</title>
      <link href="/2022/10/15/mysql%E8%AF%AD%E6%B3%95%E9%80%9F%E8%AE%B0/"/>
      <url>/2022/10/15/mysql%E8%AF%AD%E6%B3%95%E9%80%9F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="一-数据定义"><a class="markdownIt-Anchor" href="#一-数据定义"></a> 一、数据定义</h1><p>主要使用DDL，用于定义数据对象（数据库，数据表，视图，索引等）</p><h2 id="数据库database"><a class="markdownIt-Anchor" href="#数据库database"></a> 数据库（DATABASE）</h2><blockquote><p>创建数据库</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> DATABASE test;</span><br></pre></td></tr></table></figure><blockquote><p>删除数据库</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE test</span><br></pre></td></tr></table></figure><blockquote><p>选择数据库</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE test;</span><br></pre></td></tr></table></figure><h2 id="数据表table"><a class="markdownIt-Anchor" href="#数据表table"></a> 数据表（TABLE）</h2><h3 id="数据表的创建与删除"><a class="markdownIt-Anchor" href="#数据表的创建与删除"></a> 数据表的创建与删除</h3><blockquote><p>创建数据表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">  id <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;Id&#x27;</span>,</span><br><span class="line">  username <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;default&#x27;</span> COMMENT <span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">  password <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;default&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  email <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;default&#x27;</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span></span><br><span class="line">) COMMENT<span class="operator">=</span><span class="string">&#x27;用户表&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>根据已有表创建</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> viper_user <span class="keyword">AS</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><blockquote><p>删除数据表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><h3 id="修改数据表"><a class="markdownIt-Anchor" href="#修改数据表"></a> 修改数据表</h3><blockquote><p>添加列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">ADD</span> age <span class="type">int</span>(<span class="number">3</span>);</span><br></pre></td></tr></table></figure><blockquote><p>删除列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">column</span> age;</span><br></pre></td></tr></table></figure><blockquote><p>修改列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> <span class="keyword">user</span></span><br><span class="line">MODIFY <span class="keyword">COLUMN</span> age tinyint;</span><br></pre></td></tr></table></figure><blockquote><p>添加主键</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">PRIMARY KEY</span> (id);</span><br></pre></td></tr></table></figure><blockquote><p>删除主键</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PRIMARY KEY</span>;</span><br></pre></td></tr></table></figure><h2 id="视图view"><a class="markdownIt-Anchor" href="#视图view"></a> 视图（VIEW）</h2><p>视图是基于SQL语句的结果集的可视化表。视图是虚拟的表，本身不储存数据，也不处理数据。主要用于简化和方便我们的操作，但是视图的操作和普通的表的操作方式类似</p><blockquote><p>视图的作用</p></blockquote><ul><li>简化复杂的sql操作</li></ul><blockquote><p>创建视图</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> top_10_user_view <span class="keyword">AS</span> </span><br><span class="line"><span class="keyword">SELECT</span> id,username </span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">WHERE</span> id <span class="operator">&lt;</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure><blockquote><p>删除视图</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> top_10_user_view;</span><br></pre></td></tr></table></figure><h2 id="索引index"><a class="markdownIt-Anchor" href="#索引index"></a> 索引（INDEX）</h2><p>索引可以更加高效的查询数据。用户无法看到索引，但是可以用它来加速查询。</p><p>但是维护索引需要额外的空间和时间，所以更新一个含有索引的表花费的代价会比不含有索引的表更大，所以一般推荐是只在被频繁搜索的列上创建索引</p><blockquote><p>唯一索引</p></blockquote><p>表面此索引的每一个索引值都可以唯一标识表中的一个记录</p><blockquote><p>创建索引</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> INDEX user_index</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">user</span> (id);</span><br></pre></td></tr></table></figure><blockquote><p>创建唯一索引</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> INDEX user_index</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">user</span> (id);</span><br></pre></td></tr></table></figure><blockquote><p>删除索引</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER TABlE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">DROP</span> INDEX user_index;</span><br></pre></td></tr></table></figure><h2 id="约束"><a class="markdownIt-Anchor" href="#约束"></a> 约束</h2><blockquote><p>SQL 约束用于规定表中的数据规则。</p></blockquote><ul><li>如果存在违反约束的数据行为，行为会被约束终止。</li><li>约束可以在创建表时规定（通过 CREATE TABLE 语句），或者在表创建之后规定（通过 ALTER TABLE 语句）。</li><li>约束类型<ul><li><code>NOT NULL</code> - 指示某列不能存储 NULL 值。</li><li><code>UNIQUE</code> - 保证某列的每行必须有唯一的值。</li><li><code>PRIMARY KEY</code> - NOT NULL 和 UNIQUE 的结合。确保某列（或两个列多个列的结合）有唯一标识，有助于更容易更快速地找到表中的一个特定的记录。</li><li><code>FOREIGN KEY</code> - 保证一个表中的数据匹配另一个表中的值的参照完整性。</li><li><code>CHECK</code> - 保证列中的值符合指定的条件。</li><li><code>DEFAULT</code> - 规定没有给列赋值时的默认值。</li></ul></li></ul><p>创建表时使用约束条件：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> Users (</span><br><span class="line">  Id <span class="type">INT</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;自增Id&#x27;</span>,</span><br><span class="line">  Username <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT NULL</span> <span class="keyword">UNIQUE</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;default&#x27;</span> COMMENT <span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">  Password <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;default&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  Email <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;default&#x27;</span> COMMENT <span class="string">&#x27;邮箱地址&#x27;</span>,</span><br><span class="line">  Enabled TINYINT(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否有效&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (Id)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">2</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 COMMENT<span class="operator">=</span><span class="string">&#x27;用户表&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="二-增删改查"><a class="markdownIt-Anchor" href="#二-增删改查"></a> 二、增删改查</h1><p>又称为CRUD，数据库基本操作</p><ul><li><code>create</code>-增</li><li><code>delete</code>-删</li><li><code>update</code>-改</li><li><code>retrieve</code>-查</li></ul><h2 id="插入数据"><a class="markdownIt-Anchor" href="#插入数据"></a> 插入数据</h2><p>使用<code>INSERT INTO</code></p><blockquote><p>插入完整的行</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT INTO</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">10</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;test@test.com&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>插入行的一部分</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT INTO</span> <span class="keyword">user</span>(username,password,email)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;test@test.com&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>插入查询出来的数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT INTO</span> <span class="keyword">user</span> (username)</span><br><span class="line"><span class="keyword">SELECT</span> name</span><br><span class="line"><span class="keyword">FROM</span> account;</span><br></pre></td></tr></table></figure><h2 id="更新数据"><a class="markdownIt-Anchor" href="#更新数据"></a> 更新数据</h2><p>使用<code>UPDATE</code></p><blockquote><p>更新数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">SET</span> username<span class="operator">=</span><span class="string">&#x27;Mike&#x27;</span>,password<span class="operator">=</span><span class="string">&#x27;test&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> username<span class="operator">=</span><span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="删除数据"><a class="markdownIt-Anchor" href="#删除数据"></a> 删除数据</h2><p>使用<code>DELETE</code></p><blockquote><p>删除指定数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span>  <span class="keyword">user</span></span><br><span class="line"><span class="keyword">WHERE</span> username<span class="operator">=</span><span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>删除表中所有数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><h2 id="查询数据"><a class="markdownIt-Anchor" href="#查询数据"></a> 查询数据</h2><ul><li><code>SELECT</code>- 查询</li><li><code>DISTINCT</code>-返回不同的值</li><li><code>LIMIT</code>-限制返回的行数，可以接受两个参数，第一个参数是开始查询的行数，第一行是0；第二个是返回的总行数</li></ul><blockquote><p>单列查询</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> id <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><blockquote><p>查询多列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> id,username <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><blockquote><p>查询所有列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><blockquote><p>查询不同值</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> </span><br><span class="line"><span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><blockquote><p>限制查询结构</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 返回前<span class="number">5</span>行</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span> LIMIT <span class="number">5</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span> LIMIT <span class="number">0</span>,<span class="number">5</span></span><br><span class="line"># 返回<span class="number">3</span><span class="operator">~</span><span class="number">5</span>行</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span> LIMIT <span class="number">2</span>,<span class="number">3</span>;</span><br></pre></td></tr></table></figure><h1 id="三-子查询"><a class="markdownIt-Anchor" href="#三-子查询"></a> 三、子查询</h1><p>子查询是嵌套较大的查询中的一个小查询，子查询也被称为<code>内部查询</code>或者<code>内部选择</code></p><ul><li>子查询嵌套在<code>SELECT</code>、<code>UPDATE</code>、<code>DELETE</code>、<code>INSERT</code> 或者另一个子查询中</li><li>子查询需要用<code>()</code> 括起来</li><li>子查询优先于父查询执行，因为需要先获得子查询的结果</li></ul><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/sql-subqueries.gif" alt="sql-subqueries" /></p><blockquote><p>子查询中的子查询</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> cust_name, cust_contact</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> cust_id <span class="keyword">IN</span> (<span class="keyword">SELECT</span> cust_id</span><br><span class="line">                  <span class="keyword">FROM</span> orders</span><br><span class="line">                  <span class="keyword">WHERE</span> order_num <span class="keyword">IN</span> (<span class="keyword">SELECT</span> order_num</span><br><span class="line">                                      <span class="keyword">FROM</span> orderitems</span><br><span class="line">                                      <span class="keyword">WHERE</span> prod_id <span class="operator">=</span> <span class="string">&#x27;RGAN01&#x27;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="where"><a class="markdownIt-Anchor" href="#where"></a> WHERE</h2><p><code>WHERE</code>用于过滤记录，<code>WHERE</code>后跟着一个<code>true</code>或者<code>false</code>的条件</p><p>可以在<code>WHERE</code>中使用的操作符</p><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>=</td><td>等于</td></tr><tr><td>&lt;&gt;</td><td>不等于。注释：在 SQL 的一些版本中，该操作符可被写成 !=</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>BETWEEN</td><td>在某个范围内</td></tr><tr><td>LIKE</td><td>搜索某种模式</td></tr><tr><td>IN</td><td>指定针对某个列的多个可能值</td></tr></tbody></table><blockquote><p>SELECT</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">WHERE</span> username<span class="operator">=</span><span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>UPDATE</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">SET</span> username<span class="operator">=</span><span class="string">&#x27;root&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> username<span class="operator">=</span><span class="string">&#x27;Mike&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>DELETE</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> uesr</span><br><span class="line"><span class="keyword">WHERE</span> username<span class="operator">=</span><span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="in和between"><a class="markdownIt-Anchor" href="#in和between"></a> IN和BETWEEN</h2><p><code>IN</code>在<code>WHERE</code>子句中使用，用于在记录中找到特定的值。</p><p><code>BETWEEN</code>在<code>WHERE</code>子句中使用，用于在记录中找到特定范围的值。</p><blockquote><p>IN</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">WHERE</span> username <span class="keyword">IN</span> (<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;Mike&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>BETWEEN</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span> </span><br><span class="line"><span class="keyword">WHERE</span> age BWTWEEN <span class="number">30</span> <span class="keyword">AND</span> <span class="number">35</span>;</span><br></pre></td></tr></table></figure><h2 id="and-or-not"><a class="markdownIt-Anchor" href="#and-or-not"></a> AND、OR、NOT</h2><p>三者用于对过滤条件的逻辑处理</p><blockquote><p>AND</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">WHERE</span> age <span class="operator">=</span> <span class="number">10</span> <span class="keyword">AND</span> username <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>OR</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">WHERE</span> age <span class="operator">=</span> <span class="number">10</span> <span class="keyword">OR</span> username <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>NOT</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">WHERE</span> id <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> <span class="number">3</span> <span class="keyword">AND</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure><h2 id="like"><a class="markdownIt-Anchor" href="#like"></a> LIKE</h2><p><code>LIKE</code>在<code>WHERE</code>子句中使用，用于确定字符串是否匹配模式，所以只有在字段是文本值的时候才可以使用。</p><p>LIKE支持两个通配符,<code>_</code>和<code>%</code></p><ul><li><code>_</code>表示任意字符出现一次</li><li><code>%</code>表示任意字符出现任意次数</li></ul><p>不要随意的使用通配符，这可能会导致你的查询非常缓慢</p><p>当我们要匹配的字符串中真的含有<code>_</code>和<code>%</code>时，我们可以使用转义字符<code>\%</code>和<code>\_</code></p><blockquote><p>%</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">USER</span></span><br><span class="line"><span class="keyword">WHERE</span> username <span class="keyword">LIKE</span> <span class="string">&#x27;%root%&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>_</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">USER</span></span><br><span class="line"><span class="keyword">WHERE</span> username <span class="keyword">LIKE</span> <span class="string">&#x27;_root_&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="四-连接和组合"><a class="markdownIt-Anchor" href="#四-连接和组合"></a> 四、连接和组合</h1><h2 id="连接join"><a class="markdownIt-Anchor" href="#连接join"></a> 连接（JOIN）</h2><p>连接用于连接多个表，而且条件语句使用<code>ON</code>而不是<code>WHERE</code>。</p><p>连接可以替换子查询，而且效率往往比子查询效率更高。</p><p>连接分为三种类型：</p><ul><li>外连接<ul><li>左（外）连接</li><li>右（外）连接</li><li>全外连接</li></ul></li><li>内连接<ul><li>自连接</li><li>自然连接</li></ul></li><li>全外连接(mysql不支持)</li></ul><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/sql-join.png" alt="sql-join" /></p><blockquote><p>内连接(INNER JOIN)</p></blockquote><p>内连接又称等值连接，默认情况下，返回表之间的公共部分，没有条件的情况下返回笛卡尔积（最好不要这样做，这样会很容易返回爆炸多的行数）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> users <span class="keyword">INNER</span> <span class="keyword">JOIN</span> students</span><br><span class="line"><span class="keyword">ON</span> user.id <span class="operator">=</span> students.id;</span><br></pre></td></tr></table></figure><blockquote><p>自连接(=)</p></blockquote><p>自连接看看出内连接的一种，只是连接的是表的自身而已。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c1.cust_id, c1.cust_name, c1.cust_contact</span><br><span class="line"><span class="keyword">FROM</span> customers c1, customers c2</span><br><span class="line"><span class="keyword">WHERE</span> c1.cust_name <span class="operator">=</span> c2.cust_name</span><br><span class="line"><span class="keyword">AND</span> c2.cust_contact <span class="operator">=</span> <span class="string">&#x27;Jim Jones&#x27;</span>;</span><br></pre></td></tr></table></figure><p>ps：没感觉到用处</p><p>为什么不直接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c1.cust_id, c1.cust_name, c1.cust_contact</span><br><span class="line"><span class="keyword">FROM</span> customers c1</span><br><span class="line"><span class="keyword">WHERE</span> c1.cust_contact <span class="operator">=</span> <span class="string">&#x27;Jim Jones&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>自然连接(NATURAL JOIN)</p></blockquote><p>可以自动的连接同名列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users</span><br><span class="line"><span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> students;</span><br></pre></td></tr></table></figure><p>等价于上面内连接的写法，但是内连接不同的是内连接可以自己指定列，而不需要列明相同</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> users <span class="keyword">INNER</span> <span class="keyword">JOIN</span> students</span><br><span class="line"><span class="keyword">ON</span> user.uid <span class="operator">=</span> students.sid;</span><br></pre></td></tr></table></figure><blockquote><p>外连接(OUTER JOIN)</p></blockquote><p>Mysql不支持</p><blockquote><p>左连接(LEFT JOIN)</p></blockquote><p>以左边的表为主，即便左边的表没有与右边的表关联也会被保留</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> customers.cust_id, orders.order_num</span><br><span class="line"><span class="keyword">FROM</span> customers <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> orders</span><br><span class="line"><span class="keyword">ON</span> customers.cust_id <span class="operator">=</span> orders.cust_id;</span><br></pre></td></tr></table></figure><blockquote><p>右连接(RIGHT JOIN)</p></blockquote><p>与左连接相反，以右边的表为主</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> customers.cust_id, orders.order_num</span><br><span class="line"><span class="keyword">FROM</span> customers <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> orders</span><br><span class="line"><span class="keyword">ON</span> customers.cust_id <span class="operator">=</span> orders.cust_id;</span><br></pre></td></tr></table></figure><h2 id="组合union"><a class="markdownIt-Anchor" href="#组合union"></a> 组合（UNION）</h2><p><code>UNION</code>将多个结果集合并成一个并返回</p><p>基本规则：</p><ul><li>所有查询的列数和列顺序必须相同</li><li>列的数据类型必须兼容</li></ul><p>只能有一个<code>ORDER BY</code>语句，且位于语句的最后。<br />默认去除相同行，如需保留，使用<code>UNION ALL</code>。</p><p>应用场景：</p><ul><li>一个查询从多个表中返回结果</li><li>一个表执行多个查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> cust_name, cust_contact, cust_email</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> cust_state <span class="keyword">IN</span> (<span class="string">&#x27;IL&#x27;</span>, <span class="string">&#x27;IN&#x27;</span>, <span class="string">&#x27;MI&#x27;</span>)</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> cust_name, cust_contact, cust_email</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> cust_name <span class="operator">=</span> <span class="string">&#x27;Fun4All&#x27;</span>;</span><br></pre></td></tr></table></figure><p>JOIN vs UNION</p><ul><li><code>JOIN</code>中连接的列可能不同，但是<code>UNION</code>中，查询的列数和顺序必须相同</li><li><code>JOIN</code>把查询的列水平放置，也就是构成笛卡尔积， <code>UNION</code>把查询的列垂直放置</li></ul><h1 id="五-函数"><a class="markdownIt-Anchor" href="#五-函数"></a> 五、函数</h1><p>不同数据库的函数往往不同，下面以Mysql为例</p><h3 id="文本处理"><a class="markdownIt-Anchor" href="#文本处理"></a> 文本处理</h3><table><thead><tr><th style="text-align:center">函数</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>LEFT()</code>、<code>RIGHT()</code></td><td style="text-align:center">左边或者右边的字符</td></tr><tr><td style="text-align:center"><code>LOWER()</code>、<code>UPPER()</code></td><td style="text-align:center">转换为小写或者大写</td></tr><tr><td style="text-align:center"><code>LTRIM()</code>、<code>RTIM()</code></td><td style="text-align:center">去除左边或者右边的空格</td></tr><tr><td style="text-align:center"><code>LENGTH()</code></td><td style="text-align:center">长度</td></tr><tr><td style="text-align:center"><code>SOUNDEX()</code></td><td style="text-align:center">转换为语音值</td></tr></tbody></table><p>其中， <strong>SOUNDEX()</strong> 可以将一个字符串转换为描述其语音表示的字母数字模式。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> SOUNDEX(col1) <span class="operator">=</span> SOUNDEX(<span class="string">&#x27;apple&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="日期和时间处理日期和时间处理"><a class="markdownIt-Anchor" href="#日期和时间处理日期和时间处理"></a> 日期和时间处理日期和时间处理</h3><ul><li>日期格式：<code>YYYY-MM-DD</code></li><li>时间格式：<code>HH:MM:SS</code></li></ul><table><thead><tr><th style="text-align:center">函 数</th><th style="text-align:center">说 明</th></tr></thead><tbody><tr><td style="text-align:center"><code>AddDate()</code></td><td style="text-align:center">增加一个日期（天、周等）</td></tr><tr><td style="text-align:center"><code>AddTime()</code></td><td style="text-align:center">增加一个时间（时、分等）</td></tr><tr><td style="text-align:center"><code>CurDate()</code></td><td style="text-align:center">返回当前日期</td></tr><tr><td style="text-align:center"><code>CurTime()</code></td><td style="text-align:center">返回当前时间</td></tr><tr><td style="text-align:center"><code>Date()</code></td><td style="text-align:center">返回日期时间的日期部分</td></tr><tr><td style="text-align:center"><code>DateDiff()</code></td><td style="text-align:center">计算两个日期之差</td></tr><tr><td style="text-align:center"><code>Date_Add()</code></td><td style="text-align:center">高度灵活的日期运算函数</td></tr><tr><td style="text-align:center"><code>Date_Format()</code></td><td style="text-align:center">返回一个格式化的日期或时间串</td></tr><tr><td style="text-align:center"><code>Day()</code></td><td style="text-align:center">返回一个日期的天数部分</td></tr><tr><td style="text-align:center"><code>DayOfWeek()</code></td><td style="text-align:center">对于一个日期，返回对应的星期几</td></tr><tr><td style="text-align:center"><code>Hour()</code></td><td style="text-align:center">返回一个时间的小时部分</td></tr><tr><td style="text-align:center"><code>Minute()</code></td><td style="text-align:center">返回一个时间的分钟部分</td></tr><tr><td style="text-align:center"><code>Month()</code></td><td style="text-align:center">返回一个日期的月份部分</td></tr><tr><td style="text-align:center"><code>Now()</code></td><td style="text-align:center">返回当前日期和时间</td></tr><tr><td style="text-align:center"><code>Second()</code></td><td style="text-align:center">返回一个时间的秒部分</td></tr><tr><td style="text-align:center"><code>Time()</code></td><td style="text-align:center">返回一个日期时间的时间部分</td></tr><tr><td style="text-align:center"><code>Year()</code></td><td style="text-align:center">返回一个日期的年份部分</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> NOW();</span><br><span class="line"><span class="number">2018</span><span class="number">-4</span><span class="number">-14</span> <span class="number">20</span>:<span class="number">25</span>:<span class="number">11</span></span><br></pre></td></tr></table></figure><h3 id="数值处理"><a class="markdownIt-Anchor" href="#数值处理"></a> 数值处理</h3><table><thead><tr><th style="text-align:center">函数</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">SIN()</td><td style="text-align:center">正弦</td></tr><tr><td style="text-align:center">COS()</td><td style="text-align:center">余弦</td></tr><tr><td style="text-align:center">TAN()</td><td style="text-align:center">正切</td></tr><tr><td style="text-align:center">ABS()</td><td style="text-align:center">绝对值</td></tr><tr><td style="text-align:center">SQRT()</td><td style="text-align:center">平方根</td></tr><tr><td style="text-align:center">MOD()</td><td style="text-align:center">余数</td></tr><tr><td style="text-align:center">EXP()</td><td style="text-align:center">指数</td></tr><tr><td style="text-align:center">PI()</td><td style="text-align:center">圆周率</td></tr><tr><td style="text-align:center">RAND()</td><td style="text-align:center">随机数</td></tr></tbody></table><h3 id="汇总"><a class="markdownIt-Anchor" href="#汇总"></a> 汇总</h3><table><thead><tr><th style="text-align:center">函 数</th><th style="text-align:center">说 明</th></tr></thead><tbody><tr><td style="text-align:center"><code>AVG()</code></td><td style="text-align:center">返回某列的平均值</td></tr><tr><td style="text-align:center"><code>COUNT()</code></td><td style="text-align:center">返回某列的行数</td></tr><tr><td style="text-align:center"><code>MAX()</code></td><td style="text-align:center">返回某列的最大值</td></tr><tr><td style="text-align:center"><code>MIN()</code></td><td style="text-align:center">返回某列的最小值</td></tr><tr><td style="text-align:center"><code>SUM()</code></td><td style="text-align:center">返回某列值之和</td></tr></tbody></table><p><code>AVG()</code> 会忽略 NULL 行。</p><p>使用 DISTINCT 可以让汇总函数值汇总不同的值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(<span class="keyword">DISTINCT</span> col1) <span class="keyword">AS</span> avg_col</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br></pre></td></tr></table></figure><h1 id="六-排序和分组"><a class="markdownIt-Anchor" href="#六-排序和分组"></a> 六、排序和分组</h1><blockquote><p>order by</p></blockquote><p>用于对结果集排序，有两种排序模式</p><ul><li><code>ASC</code>：升序（默认）</li><li><code>DESC</code>：降序</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_price <span class="keyword">DESC</span>,prod_name <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><blockquote><p>group by</p></blockquote><p>把记录分组到汇总行中，为每个汇总行返回一个记录</p><p>通常配合汇总函数使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> cust_name, <span class="built_in">COUNT</span>(cust_address) <span class="keyword">AS</span> addr_num</span><br><span class="line"><span class="keyword">FROM</span> Customers <span class="keyword">GROUP</span> <span class="keyword">BY</span> cust_name</span><br></pre></td></tr></table></figure><p>所有<code>cust_name</code>相同的字段会被汇总成一个字段返回</p><blockquote><p>HAVING</p></blockquote><p>专门用于过滤汇总的组记录</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> cust_name,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> num</span><br><span class="line"><span class="keyword">FROM</span> Customers</span><br><span class="line"><span class="keyword">WHERE</span> cust_email <span class="keyword">IS</span> <span class="keyword">NOT NULL</span></span><br><span class="line">GRUOP <span class="keyword">BY</span> cust_name</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h1 id="七-事务处理"><a class="markdownIt-Anchor" href="#七-事务处理"></a> 七、事务处理</h1><p>MYSQL默认采用隐式提交策略(autocommit)，每执行一条语句就会把这条语句当成一个事务提交。</p><p>通过<code>set autocommit=0</code>可以关闭自动提交，这是命令针对连接的、</p><p>当我们显式的开启一个事务<code>START TRANSACTION</code>时，会关闭隐式提交；当<code>COMMIT</code>或者<code>ROLLBACK</code>之后会重新开启隐式提交</p><p>事务命令:</p><ul><li><code>START TRANSACTION</code>-开启一个事务</li><li><code>SAVEPOINT</code>-在事务中创建保存点</li><li><code>ROLLBACK TO</code>-回滚到某个保存点，如果没有设置则返回到<code>START TRANSACTION</code>的位置</li><li><code>COMMIT</code>-提交事务</li></ul><p>示例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 开启事务</span><br><span class="line"><span class="keyword">START</span> TRANSACTION</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT INTO</span> `<span class="keyword">user</span>`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;root&#x27;</span>);</span><br><span class="line"></span><br><span class="line"># 设置保存点</span><br><span class="line"><span class="keyword">SAVEPOINT</span> updateA;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT INTO</span> `<span class="keyword">user</span>`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">2</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"></span><br><span class="line"># 回滚到保存带你</span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> updateA;</span><br><span class="line"></span><br><span class="line"># 提交事务，此时只有第一个<span class="keyword">insert</span>被提交</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure><h1 id="八-权限控制"><a class="markdownIt-Anchor" href="#八-权限控制"></a> 八、权限控制</h1><p>采用<code>GRANT</code>和<code>REVOKE</code>控制访问权限。</p><p>该命令可以在以下这些层次上控制访问权限：</p><ul><li>整个服务器，使用<code>GRANT ALL</code> 和<code>REVOKE ALL</code></li><li>整个数据库，使用<code>ON database.*</code>，第一个参数式数据库，第二个参数是数据表，<code>*</code>代表对全部表都授予权限</li><li>特定的表，使用<code>ON database.table</code></li><li>特定的列</li><li>特定的储存过程</li></ul><blockquote><p>查询mysql中的所有用户信息</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><blockquote><p>创建账户</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">user</span> myuser INDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypassword&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>修改账户名</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span> <span class="keyword">SET</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;newuser&#x27;</span> <span class="keyword">WHERE</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;myeser&#x27;</span>;</span><br><span class="line">FLUSH PREVILEGES;</span><br></pre></td></tr></table></figure><blockquote><p>查看权限</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> GTANTS <span class="keyword">FOR</span> myuser;</span><br></pre></td></tr></table></figure><blockquote><p>授予权限</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> myuser;</span><br></pre></td></tr></table></figure><blockquote><p>删除权限</p></blockquote> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span> <span class="keyword">TO</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">FROM</span> myuser;</span><br></pre></td></tr></table></figure><blockquote><p>更改密码</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> myuser <span class="operator">=</span> <span class="string">&#x27;mypass&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>『mysql』mysql快速入门</title>
      <link href="/2022/10/15/mysql%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
      <url>/2022/10/15/mysql%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="一-基本概念"><a class="markdownIt-Anchor" href="#一-基本概念"></a> 一、基本概念</h1><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/20200115160512.png" alt="" /></p><h2 id="数据库术语"><a class="markdownIt-Anchor" href="#数据库术语"></a> 数据库术语</h2><ul><li><code>数据库（database）</code>-保存有组织的数据的容器</li><li><code>数据表（table）</code>-某种特定数据类型的结构化清单</li><li><code>模式（schema）</code>-关于数据库和数据表的特性信息</li><li><code>列（column）</code>：表中的一个字段</li><li><code>行（row）</code>表中的一个记录</li><li><code>主键（primary key）</code>：一个特殊的列，可以唯一的标识数据表中的一行数据</li></ul><h2 id="sql语法"><a class="markdownIt-Anchor" href="#sql语法"></a> SQL语法</h2><p>SQL即Structed Query Language，在此基础上每个数据库都有对自己SQL的实现</p><h2 id="sql语法结构"><a class="markdownIt-Anchor" href="#sql语法结构"></a> SQL语法结构</h2><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/sql-syntax.png" alt="" /></p><h2 id="sql语法要点"><a class="markdownIt-Anchor" href="#sql语法要点"></a> SQL语法要点</h2><ul><li>SQL不区分大小写</li><li>SQL之间必须要以分号隔开</li><li>SQL处理时所有中间的空格都会被忽略，SQL可以写成一行，也可以写成多行</li><li>SQL的三种注释方法</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 注释<span class="number">1</span></span><br><span class="line"><span class="comment">-- 注释2</span></span><br><span class="line"><span class="comment">/* 注释3 */</span></span><br></pre></td></tr></table></figure><h2 id="sql分类"><a class="markdownIt-Anchor" href="#sql分类"></a> SQL分类</h2><h3 id="数据定义语言ddl"><a class="markdownIt-Anchor" href="#数据定义语言ddl"></a> 数据定义语言（DDL）</h3><blockquote><p>什么是DDL</p></blockquote><p>数据定义语言（Data Definition Language）是SQL语言集中负责数据结构定义和数据对象定义的语言。</p><blockquote><p>核心功能</p></blockquote><p>定义数据库对象</p><blockquote><p>核心指令</p></blockquote><ul><li><code>CREATE</code></li><li><code>ALTER</code></li><li><code>DROP</code></li></ul><h3 id="数据操纵语言dml"><a class="markdownIt-Anchor" href="#数据操纵语言dml"></a> 数据操纵语言（DML）</h3><blockquote><p>什么是DML</p></blockquote><p>数据操纵语言（Data Manipulation Language）用于操作数据库，对数据其中的对象操作和访问的编程语句。</p><blockquote><p>核心功能</p></blockquote><p>访问数据，主要功能在于读写数据库</p><blockquote><p>核心指令</p></blockquote><ul><li><code>INSERT</code></li><li><code>UPDATE</code></li><li><code>DELETE</code></li><li><code>SELECT</code></li></ul><h3 id="事务控制语言tcl"><a class="markdownIt-Anchor" href="#事务控制语言tcl"></a> 事务控制语言（TCL）</h3><blockquote><p>什么是TCL</p></blockquote><p>事务控制语言（Transaction Control Language）是用于控制事务的语言。</p><blockquote><p>核心功能</p></blockquote><p>事务控制</p><blockquote><p>核心指令</p></blockquote><ul><li><code>COMMIT</code>-提交事务</li><li><code>ROLLBACK</code>-事务回滚</li></ul><h3 id="数据控制语言dcl"><a class="markdownIt-Anchor" href="#数据控制语言dcl"></a> 数据控制语言（DCL）</h3><blockquote><p>什么是DCL</p></blockquote><p>数据控制语言（Data Control ）用于控制数据访问权限</p><blockquote><p>核心功能</p></blockquote><p>控制数据访问权</p><blockquote><p>核心指令</p></blockquote><ul><li><code>GRANT</code></li><li><code>REVOKE</code></li></ul><p>不同数据库管理系统之间的安全实体有所不同</p><h1 id="二-快速开始"><a class="markdownIt-Anchor" href="#二-快速开始"></a> 二、快速开始</h1><h2 id="登录mysql"><a class="markdownIt-Anchor" href="#登录mysql"></a> 登录mysql</h2><p>首先登录我们的mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mysql -u root -p</span></span><br></pre></td></tr></table></figure><p>然后输入密码</p><h2 id="使用mysql增删改查"><a class="markdownIt-Anchor" href="#使用mysql增删改查"></a> 使用mysql增删改查</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># 创建数据库</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE mysql_practice;</span><br><span class="line">#  使用这个数据库</span><br><span class="line">USE mysql_practice;</span><br><span class="line"># 创建数据表</span><br><span class="line"><span class="keyword">CREATE TABLE</span> users(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    username <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">);</span><br><span class="line"># 我们先插入一条数据</span><br><span class="line"><span class="keyword">INSERT INTO</span> users <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;Mike&#x27;</span>);</span><br><span class="line"># 查出我们之前插入的数据</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> username <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> Mike     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+</span></span><br><span class="line"># 更新</span><br><span class="line"><span class="keyword">UPDATE</span> users <span class="keyword">SET</span> username<span class="operator">=</span><span class="string">&#x27;john&#x27;</span>;</span><br><span class="line">## 再次查询一下</span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> username <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> john     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+</span></span><br><span class="line"># 最后我们尝试把这个数据删除</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>; </span><br><span class="line"># 再查询一下，出现这样就成功了</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span></span><br></pre></td></tr></table></figure><p>到目前为止，你已经会mysql最基本的增删改查了</p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>『git』git和github入门教程</title>
      <link href="/2022/10/15/git%E5%92%8Cgithub%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2022/10/15/git%E5%92%8Cgithub%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="git简介"><a class="markdownIt-Anchor" href="#git简介"></a> git简介</h1><p>git是一个分布式的版本控制系统。</p><h1 id="git快速开始"><a class="markdownIt-Anchor" href="#git快速开始"></a> git快速开始</h1><h2 id="安装git"><a class="markdownIt-Anchor" href="#安装git"></a> 安装git</h2><p><a href="https://git-scm.com/download/win">Git - Download</a></p><p>这里不讲述安装教程</p><h2 id="体验git"><a class="markdownIt-Anchor" href="#体验git"></a> 体验git</h2><p>我们先来快速的体验一下git，这一部分我将尽量避开git的细节，专注于git的使用</p><h3 id="git和github"><a class="markdownIt-Anchor" href="#git和github"></a> git和github</h3><p>要体验git的强大功能，github是必不可少的。</p><p>但是虽然两者之间有着类似的名字，但两者之间的关系就好像是java和JavaScript之间的关系一样——两者之间完全不相同。</p><p>那么github有什么用呢？git是一个分布式版本控制系统，是一个工具，git是如何完成版本控制的呢，它会在本地创建一个仓库，这个仓库会记录下仓库中文件的各种信息。通过了git和他创建的仓库，我们就可以在本地实现版本控制，但是仅仅在本地的仓库很多时候并不能满足我们的需求。</p><p>我们更希望仓库保存本地的同时可以保存在云端，这样我们可以更好的保存我们创建的内容；于此同时，我们想要把自己创建的东西分享给其他人。那么github就是这样的远程代码托管平台。</p><p>我们可以借助于git，把本地的仓库放在github上，而放在github上的内容也可以被更多人看到，分享给更多的人，这对于互联网的发展是极其重要的。无数的开发者可以把自己的代码托管在github上，全世界范围内无数优秀的代码和智慧都开源在github上，我们可以去学习这些思想和代码，让自己的代码水平得以提升。</p><p>这样的代码托管平台并不只有github，在国内我们有自己的gitee，但是可以预见的是，github的体量和gitee的体量之间存在较大的差别，github是世界性的，gitee是国内的，这也直接导致了两者平台上代码质量的差距，所以我们一般来说会更多的使用github</p><h3 id="使用git"><a class="markdownIt-Anchor" href="#使用git"></a> 使用git</h3><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/bg2015120901.png" alt="img" /></p><blockquote><p>git中的几个概念</p></blockquote><p>通过上面git和github的概述，我们对git的工作流程有了一个大概的了解，至少已知的概念是本地文件，本地仓库和远程仓库。事实上，git的工作流程大概也是如此。</p><p>git在工作中有4个区域</p><ul><li>Workspace：工作区</li><li>Index / Stage：暂存区</li><li>Repository：仓库区（或本地仓库）</li><li>Remote：远程仓库</li></ul><p>本地文件所在位置就是工作区，在本地文件所在位置会有一个本地仓库，而github就是远程仓库，此外，在工作区和本地仓库之间有一个暂存区，用于暂时的保存文件</p><blockquote><p>git初体验</p></blockquote><p>说了这么多，现在我们就要真正的开始使用git了</p><p>我们打开先尝试把github上的内容拉取到本地</p><p><a href="https://github.com/jking412/hello-github">https://github.com/jking412/hello-github</a></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012193257256.png" alt="image-20221012193257256" /></p><p>我们打开这个仓库，点击右上角绿色的<code>Code</code>，复制下URL</p><p>接着，找到我们想要放置仓库的文件位置，在当前文件夹下打开git bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/jking412/hello-github</span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012193553880.png" alt="image-20221012193553880" /></p><p>接着我们就可以看到<code>hello-github</code>文件夹</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012193630137.png" alt="image-20221012193630137" /></p><p>点进去之后就可以看到仓库里的文件了</p><h3 id="添加ssh-key"><a class="markdownIt-Anchor" href="#添加ssh-key"></a> 添加ssh key</h3><p>在我们创建自己的仓库之前，我们要配置一下ssh key。</p><p>为什么要配置这个呢，加入你自己创建了仓库，如果谁都可以向这个仓库去推送和修改内容，那么这个仓库显然是不安全的，所以本地的git必须要获得远程仓库的许可之后才可以向远程仓库推送内容，这个许可就是ssh key。</p><p>我们打开git bash，按照下面的步骤执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global user.name <span class="string">&#x27;yourname&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global user.email <span class="string">&#x27;youremail&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh-keygen -t rsa -C <span class="string">&#x27;youremail&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">接下来会出现一些信息需要填写，我们不必管它，一直按空格就可以了</span></span><br></pre></td></tr></table></figure><p>这个时候我们ssh key就生成好了，我们打开ssh key所在位置，在你的C盘下的Users目录中，注意你可能会找不到.ssh目录，要注意打开隐藏文件夹</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012195206365.png" alt="image-20221012195206365" /></p><p>我们打开.ssh目录</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012195336400.png" alt="image-20221012195336400" /></p><p>我们打开<code>id_rsa.pub</code>，复制下其中的内容，然后打开github的settings</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012195432506.png" alt="image-20221012195432506" /></p><p>去创建一个ssh key</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012195506157.png" alt="image-20221012195506157" /></p><p>Title可以随便取，用于标识给你自己看，下面的Key就是复制下来的内容</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012195541215.png" alt="image-20221012195541215" /></p><p>完成后添加就完成了配置</p><h3 id="创建自己的仓库"><a class="markdownIt-Anchor" href="#创建自己的仓库"></a> 创建自己的仓库</h3><p>接下来，我们终于可以创建自己的代码仓库并把本地仓库内容推送到远程仓库中</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012195714629.png" alt="image-20221012195714629" /></p><p>去New一个仓库</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012195959441.png" alt="image-20221012195959441" /></p><p>填写仓库名字就可以创建了</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012200144465.png" alt="image-20221012200144465" /></p><p>我们先在一个你想要选取作为git本地仓库的位置创建文件（内容随意）</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012200343990.png" alt="image-20221012200343990" /></p><p>打开git bash</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git init</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add .</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&#x27;first commit&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">复制你的git仓库的URL</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote add origin &lt;你的代码仓库URL&gt;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -M main</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push -u origin main</span></span><br></pre></td></tr></table></figure><p>这样你就可以看到本地的文件出现在github仓库上了</p><h3 id="关键命令的解释"><a class="markdownIt-Anchor" href="#关键命令的解释"></a> 关键命令的解释</h3><p>下面我们来解释一下上面命令的具体含义</p><blockquote><p>git init</p></blockquote><p>初始化一个仓库</p><blockquote><p>git add .</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add &lt;filename&gt; <span class="comment"># 把文件添加到暂存区，‘.’表示把当前文件夹下所有内容加入到暂存区</span></span></span><br></pre></td></tr></table></figure><blockquote><p>git commit</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&#x27;comment content&#x27;</span> <span class="comment"># commit命令把暂存区的内容提交到本地仓库，-m为这个提交添加注释</span></span></span><br></pre></td></tr></table></figure><blockquote><p>git remote</p></blockquote><p>添加远程仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote add origin &lt;你的代码仓库URL&gt;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">大家注意这里的origin实际上是&lt;你的代码仓库URL&gt;的一个别名</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">也就是说你可以在最后push的时候把origin的位置改成&lt;你的代码仓库URL&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>git branch -M</p></blockquote><p>给当前分支重命名（默认是master）</p><blockquote><p>git push</p></blockquote><p>将本地内容提交到远程仓库</p><p>这里只提一下<code>-u</code>参数，git在提交的时候需要知道远程仓库的位置，这个<code>-u</code>就是告诉我们要将本地仓库推送到的远程仓库的位置，这个参数只需要在第一次push的时候添加，后面push的过程中直接<code>git push</code>就可以了</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>『rss』ttrss极速搭建rss服务</title>
      <link href="/2022/10/12/ttrss%E6%9E%81%E9%80%9F%E6%90%AD%E5%BB%BArss%E6%9C%8D%E5%8A%A1/"/>
      <url>/2022/10/12/ttrss%E6%9E%81%E9%80%9F%E6%90%AD%E5%BB%BArss%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是rss"><a class="markdownIt-Anchor" href="#什么是rss"></a> 什么是rss</h1><p><code>Really Simple Syndication</code>，简易资讯聚合。</p><p>名字并不重要，你可以理解为这是一个软件，可以帮助你订阅互联网上各种各样的信息，就好像微博你订阅了博主，然后你就可以特别的收到它的消息一样。只不过现在你可以订阅的范围变成了所有支持rss的网站</p><p>下面我们就尝试着使用ttrss来订阅著名大佬阮一峰的博客</p><h1 id="ttrss"><a class="markdownIt-Anchor" href="#ttrss"></a> ttrss</h1><p>注意，以下的rss服务没有配置域名和https</p><h2 id="开始的准备"><a class="markdownIt-Anchor" href="#开始的准备"></a> 开始的准备</h2><p>在开始之前，你需有一些必要的工具</p><ul><li>docker</li><li>云服务器</li></ul><h2 id="什么是ttrss"><a class="markdownIt-Anchor" href="#什么是ttrss"></a> 什么是ttrss</h2><p>ttrss即<code>tiny tiny rss</code>，是一个基于php的免费开源的rss聚合阅读器，下面我们将使用<code>docker compose</code>来搭建服务</p><h2 id="开始搭建"><a class="markdownIt-Anchor" href="#开始搭建"></a> 开始搭建</h2><p>首先在任意的地方创建<code>docker-compose.yml</code>文件，内容如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">service.rss:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wangqiru/ttrss:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ttrss</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">181</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SELF_URL_PATH=http://localhost:181/</span> <span class="comment"># please change to your own domain</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_PASS=ttrss</span> <span class="comment"># use the same password defined in `database.postgres`</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">feed-icons:/var/www/feed-icons/</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">public_access</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">service_only</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">database_only</span></span><br><span class="line">    <span class="attr">stdin_open:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">service.mercury:</span> <span class="comment"># set Mercury Parser API endpoint to `service.mercury:3000` on TTRSS plugin setting page</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wangqiru/mercury-parser-api:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mercury</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">public_access</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">service_only</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">service.opencc:</span> <span class="comment"># set OpenCC API endpoint to `service.opencc:3000` on TTRSS plugin setting page</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wangqiru/opencc-api-server:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">opencc</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NODE_ENV=production</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">service_only</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">database.postgres:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:13-alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">postgres</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=ttrss</span> <span class="comment"># feel free to change the password</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">~/postgres/data/:/var/lib/postgresql/data</span> <span class="comment"># persist postgres data to ~/postgres/data/ on the host</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">database_only</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># utility.watchtower:</span></span><br><span class="line">  <span class="comment">#   container_name: watchtower</span></span><br><span class="line">  <span class="comment">#   image: containrrr/watchtower:latest</span></span><br><span class="line">  <span class="comment">#   volumes:</span></span><br><span class="line">  <span class="comment">#     - /var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">  <span class="comment">#   environment:</span></span><br><span class="line">  <span class="comment">#     - WATCHTOWER_CLEANUP=true</span></span><br><span class="line">  <span class="comment">#     - WATCHTOWER_POLL_INTERVAL=86400</span></span><br><span class="line">  <span class="comment">#   restart: always</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">feed-icons:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">public_access:</span> <span class="comment"># Provide the access for ttrss UI</span></span><br><span class="line">  <span class="attr">service_only:</span> <span class="comment"># Provide the communication network between services only</span></span><br><span class="line">    <span class="attr">internal:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">database_only:</span> <span class="comment"># Provide the communication between ttrss and database only</span></span><br><span class="line">    <span class="attr">internal:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p>修改docker-compose.yml文件</p></blockquote><p>将下面的url改成你访问该服务的url，在其它配置保持默认的情况下，把localhost改成服务器IP即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">SELF_URL_PATH=http://localhost:181/</span> <span class="comment"># please change to your own domain</span></span><br></pre></td></tr></table></figure><p>强烈建议你修改这两处的密码（虽然不修改依然可以运行，但是最好不要这样做），保持一致即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">DB_PASS=ttrss</span> <span class="comment"># use the same password defined in `database.postgres`</span></span><br><span class="line"></span><br><span class="line"><span class="attr">environment:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=ttrss</span> <span class="comment"># feel free to change the password</span></span><br></pre></td></tr></table></figure><p>然后再当前目录下执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker compose up -d</span></span><br></pre></td></tr></table></figure><p>等待一小段时间即可部署成功</p><h2 id="配置rss网站"><a class="markdownIt-Anchor" href="#配置rss网站"></a> 配置rss网站</h2><blockquote><p>修改默认密码</p></blockquote><p>访问<code>ip:181</code>，默认账号<code>admin</code>，默认密码<code>password</code>，</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/1%7BP(%609FLRYI3OCK)%7B6~%6045H.png" alt="" /></p><p>登录后在用户位置修改密码</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221006212555462.png" alt="image-20221006212555462" /></p><p>配置好密码以后我们开启API，为之后我们可以手机上阅读做准备</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221006213433683.png" alt="image-20221006213433683" /></p><p>再然后我们打开设置配置RSS源</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221006213607133.png" alt="image-20221006213607133" /></p><p>填入阮一峰大佬的RSS源</p><p><a href="http://www.ruanyifeng.com/blog/atom.xml">http://www.ruanyifeng.com/blog/atom.xml</a></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221006213642604.png" alt="image-20221006213642604" /></p><p>然后刷新一下就可以看到文章了（我这里在之前已经提前配置了RSS源，所以已经有了文章）</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221006213829694.png" alt="image-20221006213829694" /></p><p>如果你看到的文章是直接展开的，可以在一旁的设置中把它收起</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221006213916201.png" alt="image-20221006213916201" /></p><p>好了，至此我们就完成了RSS在PC端的配置，然后我们再去配置手机端</p><h2 id="手机端rss阅读器"><a class="markdownIt-Anchor" href="#手机端rss阅读器"></a> 手机端RSS阅读器</h2><p>首先下载阅读软件</p><p><a href="https://go-aliyun-oss.oss-cn-hangzhou.aliyuncs.com/FeedMe.apk?Expires=1665134217&amp;OSSAccessKeyId=TMP.3KggvUkN12e6GAYuXtqhEuEfwKroxoxX85jgQpYHMug975JjxjyJJxju6i6sEu6kwjhn1U162cqy9WvzMF7PKrWfhfneP9&amp;Signature=JO2w1YW0ZkynaoF1BgkqPedSqZs%3D">FeedMe</a></p><p>打开软件，我们在<code>tiny tiny RSS</code>的位置输入信息</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Screenshot_2022-10-07-17-14-27-742_com.seazon.fee.jpg" alt="Screenshot_2022-10-07-17-14-27-742_com.seazon.fee" /></p><p>域名就是<code>http://ip:port</code></p><p>登录之后按一下刷新按钮就可以看到文章了</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Screenshot_2022-10-07-17-15-33-169_com.seazon.fee.jpg" alt="Screenshot_2022-10-07-17-15-33-169_com.seazon.fee" /></p><p>这样就完成了RSS的基本配置，开启你的RSS之旅吧</p>]]></content>
      
      
      
        <tags>
            
            <tag> rss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>『JavaWeb』基本坏境配置</title>
      <link href="/2022/10/12/JavaWeb%E5%9F%BA%E6%9C%AC%E5%9D%8F%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/10/12/JavaWeb%E5%9F%BA%E6%9C%AC%E5%9D%8F%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="配置tomcat"><a class="markdownIt-Anchor" href="#配置tomcat"></a> 配置Tomcat</h1><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012153129573.png" alt="image-20221012153129573" /></p><p>下载Tomcat9或者更低版本，Tomcat10的包目录结构有较大的改变，没有熟悉之前不建议使用</p><p><a href="https://tomcat.apache.org/download-90.cgi">Apache Tomcat® - Apache Tomcat 9 Software Downloads</a></p><p>下载好之后解压到任意目录里</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012153302786.png" alt="image-20221012153302786" /></p><p>然后把Tomcat配置到环境变量里，我们需要有三个必须的环境变量</p><ul><li>JAVA_HOME：tomcat由java编写，必须要jdk环境，在开始之前就应该配置好</li><li>CATALINA_HOME：tomcat的所在目录</li><li>tomcat的bin目录</li></ul><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012153708037.png" alt="image-20221012153708037" /></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012153825082.png" alt="image-20221012153825082" /></p><p>这样就完成了基本的环境变量配置了，然后我们来简单的检测一下环境变量是否配置成功</p><p>打开cmd控制台</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">startup.bat</span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012154158959.png" alt="image-20221012154158959" /></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012154206082.png" alt="image-20221012154206082" /></p><p>这样就启动成功了，然后我们访问<code>localhost:8080</code>，出现以下页面就成功了</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012154331045.png" alt="image-20221012154331045" /></p><p>测试成功就可以关闭服务了</p><h1 id="配置maven"><a class="markdownIt-Anchor" href="#配置maven"></a> 配置maven</h1><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012155135786.png" alt="image-20221012155135786" /></p><p><a href="https://maven.apache.org/download.cgi">Maven – Download Apache Maven</a></p><p>下载好之后解压到任务目录</p><p>需要配置两个环境变量</p><ul><li>MAVEN_HOME：maven所在目录</li><li>maven的bin目录</li></ul><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012155346953.png" alt="image-20221012155346953" /></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012155327550.png" alt="image-20221012155327550" /></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012155408605.png" alt="image-20221012155408605" /></p><p>打开控制测试一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mvn -v</span></span><br></pre></td></tr></table></figure><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012155441330.png" alt="image-20221012155441330" /></p><p>这样maven就配置好了</p><h1 id="在idea中使用tomcat和maven"><a class="markdownIt-Anchor" href="#在idea中使用tomcat和maven"></a> 在IDEA中使用Tomcat和maven</h1><p>创建一个maven项目，如果你的界面和我不一样也不用担心，在<code>Archetype</code>这一项选择<code>webapp</code>然后创建项目就可以了</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012161710988.png" alt="image-20221012161710988" /></p><p>打开设置</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012155731409.png" alt="image-20221012155731409" /></p><p>找到maven设置</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012155823822.png" alt="image-20221012155823822" /></p><p>设置配置文件和仓库位置，给右边的<code>Override</code>选项打勾，如果没有<code>repository</code>目录可以新建一个</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012160008374.png" alt="image-20221012160008374" /></p><p>在IDEA中配置tomcat</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012160102350.png" alt="image-20221012160102350" /></p><p>找到tomcat选项</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012160144792.png" alt="image-20221012160144792" /></p><p>这两个文件夹设置成tomcat所在目录就可以了，如果你配置好了环境变量这里应该会自动出现，如果没有出现就手动选择一下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012160419644.png" alt="image-20221012160419644" /></p><p>下面有一个浏览器的选择，在项目启动之后会自动在浏览器打开网页，如果没有google可以切换，也可以把这个功能关闭</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012161304523.png" alt="image-20221012161304523" /></p><p>选择好之后继续配置</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012160713348.png" alt="image-20221012160713348" /></p><p>选择第一个就ok</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012160738226.png" alt="image-20221012160738226" /></p><p>记录一下下面这个数值，这就是你的web根目录，当然这个根目录很长，不太好用，你可以修改一下，这个值任意</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012160853525.png" alt="image-20221012160853525" /></p><p>好了，现在就已经配置好了所有内容，启动项目吧</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012161143532.png" alt="image-20221012161143532" /></p><p>如果你没有关闭自动打开，那么此时你已经可以看到这个界面，如果没有打开，</p><p>输入<code>localhost:8080/你的web根目录</code></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221012161529357.png" alt="image-20221012161529357" /></p><p>至此，已经完全配置完成了</p>]]></content>
      
      
      
        <tags>
            
            <tag> tomcat </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>『创新实践』创新实践总结1</title>
      <link href="/2022/10/06/%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%931/"/>
      <url>/2022/10/06/%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%931/</url>
      
        <content type="html"><![CDATA[<h1 id="web服务器"><a class="markdownIt-Anchor" href="#web服务器"></a> Web服务器⛵</h1><blockquote><p>什么是Web服务器</p></blockquote><p>Web服务器一般指网站服务器，是指驻留于因特网上某种类型计算机的程序，可以处理浏览器等Web客户端的请求并返回相应响应，也可以放置网站文件，让全世界浏览；可以放置数据文件，让全世界下载。</p><blockquote><p>Web服务器的本质</p></blockquote><p>Web服务器的本质就是一个程序，不过这个程序比较特殊，在Web中，它更像是一个中间人，可以接受来自于客户端的请求，并把这个请求交给后台的程序处理。</p><p>再从这个程序的角度出发，Web服务器帮助我们完成了对端口的监听，实现了对后台后台程序的调度，让我们专注于实现后台逻辑</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20221004110318399.png" alt="image-20221004110318399" /></p><h1 id="web服务器有哪些以及它们的特点"><a class="markdownIt-Anchor" href="#web服务器有哪些以及它们的特点"></a> Web服务器有哪些，以及它们的特点📲</h1><p>Web服务器很多，我这里就列举一下我用过的，讲讲自己的感受，也就不细细列举其它的Web服务器了</p><blockquote><p>apache</p></blockquote><p>一个相当经典的web服务器，常常和php环境一起出现，为php提供开发环境，但是现在在其它领域用的比较少了</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/apache.jpg" alt="" /></p><blockquote><p>nginx</p></blockquote><p>当下依旧火热的Web服务器，由C语言编写，速度相当快，并发能力很强。此外，除了上面讲的Web服务器的经典功能以外，nginx还提供了反向代理，负载均衡，动静分离等功能，在Web开发中非常常见，即便在开发中已经使用了其它的Web服务器，继续使用nginx作反向代理和负载均衡的场景非常普遍</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/download.jpg" alt="" /></p><blockquote><p>tomcat</p></blockquote><p>一个由Java编写的Web服务器，是Java开发中最流行的Web服务器之一，最主要还是这款Web服务器完全开源，免费，在日常开发中大量使用</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/tomcat.jpg" alt="" /></p><h1 id="web浏览器️"><a class="markdownIt-Anchor" href="#web浏览器️"></a> Web浏览器💇‍♀️</h1><p>Web浏览器就是一个用来浏览网络网页的软件。</p><blockquote><p>谈谈个人对Web浏览器的认知</p></blockquote><p>浏览器我没有什么深入的了解，仅仅作为使用者谈谈感受，作为使用者，浏览器给我的感觉是这样的</p><ol><li>输入URI（不一定是手动输入）</li><li>获取内容并渲染给我们看</li></ol><p>基于此，我认为浏览至少需要两个功能</p><ol><li>对http，https等协议的支持</li><li>支持对html，css，js的渲染</li></ol><h1 id="web浏览器有哪些"><a class="markdownIt-Anchor" href="#web浏览器有哪些"></a> Web浏览器有哪些📟</h1><p>还是谈谈感受吧，不过认识不多</p><blockquote><p>IE</p></blockquote><p>虽然已经停止维护了，但是作为童年时代用的最多的浏览器还是值得提一嘴的。众所周知，IE从诞生开始，就充满了不光彩，靠着逆向工程和windows对市场的垄断，在浏览器大战中击败了当时的网景公司。这种依赖于外力的胜利为浏览器的发展埋下了伏笔，人只有在竞争中才会快速进步，依赖着windows在全球的盛行，与windows绑定的IE不再需要与他人辛苦的竞争，在之后的20年里，IE成功的赢得了Web开发者们的厌恶，IE固步自封，不与去兼容浏览器的一些标准，让开发者们大为头疼，但最终随着时间的推移，IE退出历史舞台似乎也证明了一个道理，不是你的，终究会失去。</p><p>回过头来看，互联网已经为全世界构建起了一张大网，全世界的信息已经被连通了起来，此刻颇有些感想，多了也不说了，先这样吧，后面还有很多要写呢</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/IE.jpg" alt="" /></p><blockquote><p>edge</p></blockquote><p>windows默认浏览器，代替了IE，使用chrome内核，各项功能都在向chrome标齐</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/edge.jpg" alt="" /></p><blockquote><p>chrome</p></blockquote><p>需要魔法才能用的浏览器，虽然有魔法但是感觉edge的必应也挺好用的，所以不怎么使用</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/chrome.jpg" alt="" /></p><blockquote><p>firefox</p></blockquote><p>linux桌面版的默认浏览器，非常注重安全性</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/firefox.jpg" alt="" /></p><h1 id="浏览器app和桌面app的区别️"><a class="markdownIt-Anchor" href="#浏览器app和桌面app的区别️"></a> 浏览器app和桌面app的区别⚙️</h1><p>这个问题的原问题是<code>安装一个网站软件与安装一个桌面软件有什么不同？</code></p><p>但是我有点每太理解安装网站软件的概念，所以就按照我的理解回答问题</p><blockquote><p>使用方式的不同</p></blockquote><p>浏览器软件我们可以直接基于浏览器访问，不需要提前下载。桌面app需要我们提前下载好软件才可以使用</p><blockquote><p>底层不同</p></blockquote><p>浏览器软件是依赖浏览器的，所以底层是js，但是桌面app的开发则多种多样。</p><p>但是在现代开发中也并不绝对，例如使用<code>electron</code>可以让我们用js开发桌面应用，例如常用的编辑器<code>vscode</code>就是<code>electron</code>的代表作品之一</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/electron.jpg" alt="" /></p><p>相对的，开发浏览器软件也不一定要依赖于js，<code>WebAssembly</code>是一种二进制的编码格式，可以在浏览器中运行，这成了一些语言的一个新的编译了目标，只要编译成这种格式就可以在让软件在浏览器种运行</p><blockquote><p>讲点别的</p></blockquote><p>谈谈设计软件Figma和sketch</p><p>近日，Adobe宣布200亿美元收购Figma，Figma是一个在浏览器端的设计软件，而sketch则是一个MacOS应用，Figma相较于sketch是一个非常年轻的应用，而在今年，Figma已经赢过了sketch</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/figma.jpg" alt="" /></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/sketch.jpg" alt="" /></p><p>我不得不提提原生应用和浏览器应用的另一个区别，速度。要知道，原生应用大多采用C，C++，Java等编译型高级语言编写，而js则是一种解释型的脚本语言，所以原生应用的速度一般来说肯定是快于浏览器应用的</p><p>但是Figma给出的解决方案是<code>Rust</code>，<code>Rust</code>作为一门类C的新兴语言，已经在很多方面展现了强大的能力，其中一项就是可以编译成<code>WebAssembly</code>，这让浏览器应用有了接近原生的速度，而Figma也正是借助者<code>Rust</code>的高性能在实现了速度上的巨大提升，为了它的胜利做出巨大的贡献</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/rust.jpg" alt="" /></p><h1 id="wordpress"><a class="markdownIt-Anchor" href="#wordpress"></a> Wordpress</h1><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/wordpress.jpg" alt="" /></p><p>一个简单易用的博客框架</p><h2 id="必要的软件"><a class="markdownIt-Anchor" href="#必要的软件"></a> 必要的软件</h2><blockquote><p>php开发环境</p></blockquote><p>后端使用的是php，所以必须要有相应的开发环境</p><blockquote><p>mysql</p></blockquote><p>用于储存数据</p><blockquote><p>apache等web服务器</p></blockquote><p>起到web服务器的功能，具体见前面Web服务器篇</p><h1 id="hexo"><a class="markdownIt-Anchor" href="#hexo"></a> hexo</h1><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/hexo.jpg" alt="" /></p><p>也是一个简单易用的博客框架</p><h2 id="必要的软件-2"><a class="markdownIt-Anchor" href="#必要的软件-2"></a> 必要的软件</h2><blockquote><p>nodejs</p></blockquote><p>使用js生成静态网页，需要nodejs提供环境</p><h2 id="关键步骤"><a class="markdownIt-Anchor" href="#关键步骤"></a> 关键步骤</h2><ol><li>编写好markdown文件</li><li>使用hexo脚本将markdown生成对那个的静态网站</li><li>将网页部署到服务器</li></ol><h1 id="hexo和wordpress的区别"><a class="markdownIt-Anchor" href="#hexo和wordpress的区别"></a> hexo和wordpress的区别</h1><blockquote><p>静态网站与动态网站</p></blockquote><ul><li><p>hexo生成的是静态html文件，无法修改，如果想要修改只能修改markdown源文件然后使用hexo脚本重新生成对应的静态页面</p></li><li><p>wordpress则是一个动态的应用程序，每次的网站都是动态生成的，数据保存在数据库</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> 创新实践 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>『Go』在Go中使用JWT</title>
      <link href="/2022/10/01/%E5%9C%A8Go%E4%B8%AD%E4%BD%BF%E7%94%A8JWT/"/>
      <url>/2022/10/01/%E5%9C%A8Go%E4%B8%AD%E4%BD%BF%E7%94%A8JWT/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是jwt"><a class="markdownIt-Anchor" href="#什么是jwt"></a> 什么是JWT</h1><p>JWT即<code>JSON Web Token</code>，工作机制是在用户通过鉴权之后，服务端发送一个JSON作为凭证给客户端，让客户端又权限可以访问一些资源</p><p>JWT 的三个部分依次如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- Header（头部）</span><br><span class="line">包含了一些元数据</span><br><span class="line">- Payload（负载）</span><br><span class="line">存放实际需要传递的数据</span><br><span class="line">- Signature（签名）</span><br><span class="line">对前两部分进行签名，防止jwt被篡改</span><br></pre></td></tr></table></figure><p>我们需要注意的是<code>Payload</code>中的数据不会被加密，所以不要存放重要</p><p>签名保存在服务端，是绝对不可泄露的</p><p>最后，服务器会对整个JSON进行加密，然后把加密后的数据传回给客户端，最后我们拿到的jwt大概是这样的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</span><br></pre></td></tr></table></figure><h1 id="go使用jwt"><a class="markdownIt-Anchor" href="#go使用jwt"></a> GO使用JWT</h1><p>下面的代码同时被保存在github仓库中</p><p><a href="https://github.com/jking412/go-example">jking412/go-example: 小demo，go的整合技术案例 (github.com)</a></p><p>我们先下载一种jwt包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get <span class="string">&quot;github.com/golang-jwt/jwt&quot;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;fmt&quot;</span></span><br><span class="line">   <span class="string">&quot;github.com/golang-jwt/jwt&quot;</span></span><br><span class="line">   <span class="string">&quot;net/http&quot;</span></span><br><span class="line">   <span class="string">&quot;strconv&quot;</span></span><br><span class="line">   <span class="string">&quot;strings&quot;</span></span><br><span class="line">   <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> JWTCustomClaims <span class="keyword">struct</span> &#123;</span><br><span class="line">   UserId <span class="type">int</span></span><br><span class="line">   jwt.StandardClaims</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   http.HandleFunc(<span class="string">&quot;/register&quot;</span>, registerHandler)</span><br><span class="line">   http.HandleFunc(<span class="string">&quot;/login&quot;</span>, loginHandler)</span><br><span class="line">   http.HandleFunc(<span class="string">&quot;/user&quot;</span>, userHandler)</span><br><span class="line">   http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">userHandler</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">   token, err := authJWT(r)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      w.Write([]<span class="type">byte</span>(<span class="string">&quot;权限不足&quot;</span>))</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line">   id := <span class="string">&quot;user是:&quot;</span> + strconv.Itoa(token.Claims.(*JWTCustomClaims).UserId)</span><br><span class="line">   w.Write([]<span class="type">byte</span>(id))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">registerHandler</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">   token, err := generateToken(<span class="number">1</span>)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      w.Write([]<span class="type">byte</span>(<span class="string">&quot;注册失败&quot;</span>))</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line">   w.Write([]<span class="type">byte</span>(token))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">loginHandler</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">   _, err := authJWT(r)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      w.Write([]<span class="type">byte</span>(<span class="string">&quot;登录失败&quot;</span>))</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line">   w.Write([]<span class="type">byte</span>(<span class="string">&quot;登录成功&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">authJWT</span><span class="params">(r *http.Request)</span></span> (*jwt.Token, <span class="type">error</span>) &#123;</span><br><span class="line">   tokenString, err := getJwtTokenFromHeader(r)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   token, err := parseToken(tokenString)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> token, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">parseToken</span><span class="params">(tokenString <span class="type">string</span>)</span></span> (*jwt.Token, <span class="type">error</span>) &#123;</span><br><span class="line">   token, err := jwt.ParseWithClaims(tokenString, &amp;JWTCustomClaims&#123;&#125;, <span class="function"><span class="keyword">func</span><span class="params">(token *jwt.Token)</span></span> (<span class="keyword">interface</span>&#123;&#125;, <span class="type">error</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> []<span class="type">byte</span>(<span class="string">&quot;secret&quot;</span>), <span class="literal">nil</span></span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="keyword">return</span> token, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">generateToken</span><span class="params">(userId <span class="type">int</span>)</span></span> (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">   claims := JWTCustomClaims&#123;</span><br><span class="line">      userId,</span><br><span class="line">      jwt.StandardClaims&#123;</span><br><span class="line">         ExpiresAt: time.Now().Unix() + <span class="number">3600</span>,</span><br><span class="line">         Issuer:    <span class="string">&quot;test&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;</span><br><span class="line">   token := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)</span><br><span class="line">   <span class="keyword">return</span> token.SignedString([]<span class="type">byte</span>(<span class="string">&quot;secret&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getJwtTokenFromHeader</span><span class="params">(r *http.Request)</span></span> (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">   tokenString := r.Header.Get(<span class="string">&quot;Authorization&quot;</span>)</span><br><span class="line">   fmt.Println(tokenString)</span><br><span class="line"></span><br><span class="line">   tokenResult := strings.SplitN(tokenString, <span class="string">&quot; &quot;</span>, <span class="number">2</span>)</span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(tokenResult) != <span class="number">2</span> || tokenResult[<span class="number">0</span>] != <span class="string">&quot;Bearer&quot;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;&quot;</span>, fmt.Errorf(<span class="string">&quot;token格式错误&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> tokenResult[<span class="number">1</span>], <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里只是一个简单实例，体会一下如何生成和解析JWT</p><p><code>/register</code>接口可以像客户端随机生成一个JWT</p><p><code>/login</code>接口模拟了用户的登录</p><p><code>/user</code>模拟了需要JWT鉴权才能获取用户信息的过程</p><p>客户端在拿到JWT之后，需要把JWT放在请求头中的<code>Authorization</code>字段中，</p><p>使用方式如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Authorization:Bearer &lt;服务端的JWT&gt;</span><br></pre></td></tr></table></figure><p>这样JWT的一个简单使用流程就结束了</p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> JWT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>『springboot』shiro鉴权</title>
      <link href="/2022/09/28/springboot%E4%BD%BF%E7%94%A8shiro%E5%AE%8C%E6%88%90%E9%89%B4%E6%9D%83/"/>
      <url>/2022/09/28/springboot%E4%BD%BF%E7%94%A8shiro%E5%AE%8C%E6%88%90%E9%89%B4%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<h1 id="shiro是什么"><a class="markdownIt-Anchor" href="#shiro是什么"></a> Shiro是什么</h1><p>shiro是java的一个安全框架，关于它的优势和一些功能就不细讲了</p><h1 id="shiro的架构"><a class="markdownIt-Anchor" href="#shiro的架构"></a> Shiro的架构</h1><p>先放一张经典的Shiro架构图</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/v2-c0841dfc8cb19a94c322eef635371cf6_720w.webp" alt="img" /></p><ul><li>Subject：可以理解为资源的请求者</li><li>Shiro SecurityManager：作为一个中间的过度，管理着shiro各种资源</li><li>Realm：存放着真正的认证和授权信息</li></ul><h1 id="快速入门"><a class="markdownIt-Anchor" href="#快速入门"></a> 快速入门</h1><p>下面就是一个shiro在项目中应用的简单例子，因为是shiro的快速入门，所以shiro之外的其它技术如何使用包括sql语句的编写不会去具体讲解，所以建议开始前把代码拉下来</p><p>完整代码请访问仓库</p><p><a href="https://github.com/jking412/java-example">jking412/java-example: 一些java的demo，主要是springboot整合框架的案例 (github.com)</a></p><h2 id="数据库的设计"><a class="markdownIt-Anchor" href="#数据库的设计"></a> 数据库的设计</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> goods</span><br><span class="line">(</span><br><span class="line">    id    <span class="type">int</span> auto_increment</span><br><span class="line">        <span class="keyword">primary key</span>,</span><br><span class="line">    name  <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">null</span>,</span><br><span class="line">    price <span class="type">int</span>         <span class="keyword">null</span></span><br><span class="line">)</span><br><span class="line">    <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_0900_ai_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create table</span> sys_permission</span><br><span class="line">(</span><br><span class="line">    permission_id   <span class="type">int</span> auto_increment</span><br><span class="line">        <span class="keyword">primary key</span>,</span><br><span class="line">    permission_name <span class="type">varchar</span>(<span class="number">50</span>)  <span class="keyword">not null</span>,</span><br><span class="line">    permission_desc <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not null</span>,</span><br><span class="line">    permission_url  <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not null</span></span><br><span class="line">)</span><br><span class="line">    <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_0900_ai_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create table</span> sys_role</span><br><span class="line">(</span><br><span class="line">    role_id   <span class="type">int</span> auto_increment</span><br><span class="line">        <span class="keyword">primary key</span>,</span><br><span class="line">    role_name <span class="type">varchar</span>(<span class="number">50</span>)  <span class="keyword">not null</span>,</span><br><span class="line">    role_desc <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not null</span></span><br><span class="line">)</span><br><span class="line">    <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_0900_ai_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create table</span> sys_role_permission</span><br><span class="line">(</span><br><span class="line">    role_id       <span class="type">int</span> <span class="keyword">not null</span>,</span><br><span class="line">    permission_id <span class="type">int</span> <span class="keyword">not null</span></span><br><span class="line">)</span><br><span class="line">    <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_0900_ai_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create table</span> sys_user</span><br><span class="line">(</span><br><span class="line">    user_id       <span class="type">int</span> auto_increment</span><br><span class="line">        <span class="keyword">primary key</span>,</span><br><span class="line">    user_name     <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not null</span>,</span><br><span class="line">    user_password <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not null</span>,</span><br><span class="line">    user_salt     <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not null</span></span><br><span class="line">)</span><br><span class="line">    <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_0900_ai_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create table</span> sys_user_role</span><br><span class="line">(</span><br><span class="line">    user_id <span class="type">int</span> <span class="keyword">not null</span>,</span><br><span class="line">    role_id <span class="type">int</span> <span class="keyword">not null</span></span><br><span class="line">)</span><br><span class="line">    <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_0900_ai_ci;</span><br></pre></td></tr></table></figure><p>我们需要六张表</p><p>五张表用于系统的安全管理</p><table><thead><tr><th>表名</th><th>作用</th></tr></thead><tbody><tr><td>sys_user</td><td>用户信息</td></tr><tr><td>sys_role</td><td>角色</td></tr><tr><td>sys_permission</td><td>权限</td></tr><tr><td>sys_role_permission</td><td>角色和权限之间的关系</td></tr><tr><td>sys_user_role</td><td>用户于角色的关系</td></tr></tbody></table><p>最后一张goods表用户测试，可以随意建</p><h2 id="使用shiro"><a class="markdownIt-Anchor" href="#使用shiro"></a> 使用shiro</h2><p>shiro的使用其实相当的简单，我们只需要配置好两个类即可</p><h3 id="realm配置"><a class="markdownIt-Anchor" href="#realm配置"></a> Realm配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.shirotest.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.shirotest.entity.SysPermission;</span><br><span class="line"><span class="keyword">import</span> com.example.shirotest.entity.SysRole;</span><br><span class="line"><span class="keyword">import</span> com.example.shirotest.entity.UserInfo;</span><br><span class="line"><span class="keyword">import</span> com.example.shirotest.mapper.SysPermissionMapper;</span><br><span class="line"><span class="keyword">import</span> com.example.shirotest.mapper.UserInfoMapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.SimpleAuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.ByteSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShiroRealm</span> <span class="keyword">extends</span> <span class="title class_">AuthorizingRealm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserInfoMapper userInfoMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SysPermissionMapper sysPermissionMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthorizationInfo <span class="title function_">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> &#123;</span><br><span class="line">        <span class="type">UserInfo</span> <span class="variable">userInfo</span> <span class="operator">=</span> (UserInfo) principalCollection.getPrimaryPrincipal();</span><br><span class="line">        <span class="type">SimpleAuthorizationInfo</span> <span class="variable">simpleAuthorizationInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthorizationInfo</span>();</span><br><span class="line">        <span class="keyword">for</span>(SysRole role : userInfo.getRoles())&#123;</span><br><span class="line">            simpleAuthorizationInfo.addRole(role.getRole());</span><br><span class="line">            List&lt;SysPermission&gt; sysPermissions = sysPermissionMapper.selectPermissionByRoleId(role.getId());</span><br><span class="line">            <span class="keyword">for</span>(SysPermission sysPermission : sysPermissions)&#123;</span><br><span class="line">                simpleAuthorizationInfo.addStringPermission(sysPermission.getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> simpleAuthorizationInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthenticationInfo <span class="title function_">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String)authenticationToken.getPrincipal();</span><br><span class="line">        <span class="type">UserInfo</span> <span class="variable">userInfo</span> <span class="operator">=</span> userInfoMapper.findByUsername(username);</span><br><span class="line">        <span class="keyword">if</span>(username == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">SimpleAuthenticationInfo</span> <span class="variable">simpleAuthenticationInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(userInfo,</span><br><span class="line">                userInfo.getPassword(),</span><br><span class="line">                ByteSource.Util.bytes(userInfo.getSalt()),</span><br><span class="line">                <span class="built_in">this</span>.getName());</span><br><span class="line">        <span class="keyword">return</span> simpleAuthenticationInfo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>认证和授权</p></blockquote><p>认证是针对某个用户的，认证成功可以认为是登录成功</p><p>虽然用户已经经过了登录，但用户并不对所有的资源具有操作权限，所以我们需要对用户进行授权</p><p>授权是针对具体的某个操作的，给予用户具体的操作权限</p><blockquote><p>doGetAuthenticationInfo()</p></blockquote><p>完成认证的函数，在我们调用登录的方法时，我们可以通过<code>authenticationToken.getPrincipal()</code>取得token中的username，我们可以通过这个username来取出dao层中的用户相关数据，并且把从数据库中取出的数据放到shiro中，shiro会把密码和token中的密码进行自动比对。</p><p>这里是在<code>UserController</code>中的登录代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(map.get(<span class="string">&quot;username&quot;</span>).toString(),map.get(<span class="string">&quot;password&quot;</span>).toString());</span><br><span class="line">subject.login(token);</span><br></pre></td></tr></table></figure><blockquote><p>userInfo.getSalt()</p></blockquote><p>这里是用户的盐，我们在存放用户密码时会对用户的密码进行加密，但是直接加密的方式还是不够安全，我们可以通过给密码添加上一段随机生成的字符再加密的方式提高用户密码的安全性</p><blockquote><p>doGetAuthorizationInfo()</p></blockquote><p>完成授权的函数，我们查询出用户的所有角色，然后查询角色拥有的权限，然后最后把这些数据都添加都shiro中</p><h3 id="shiroconfig配置"><a class="markdownIt-Anchor" href="#shiroconfig配置"></a> shiroconfig配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.shirotest.config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.credential.HashedCredentialsMatcher;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShiroConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ShiroFilterFactoryBean <span class="title function_">shirFilter</span><span class="params">(SecurityManager securityManager)</span> &#123;</span><br><span class="line">        <span class="type">ShiroFilterFactoryBean</span> <span class="variable">shiroFilterFactoryBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ShiroFilterFactoryBean</span>();</span><br><span class="line">        shiroFilterFactoryBean.setSecurityManager(securityManager);</span><br><span class="line"></span><br><span class="line">        Map&lt;String,String&gt; filterChainDefinitionMap = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;String,String&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置不会被拦截的链接 顺序判断</span></span><br><span class="line">        filterChainDefinitionMap.put(<span class="string">&quot;/static/**&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        <span class="comment">// 配置退出 过滤器,其中的具体的退出代码Shiro已经替我们实现了</span></span><br><span class="line">        filterChainDefinitionMap.put(<span class="string">&quot;/logout&quot;</span>, <span class="string">&quot;logout&quot;</span>);</span><br><span class="line">        <span class="comment">// &lt;!-- 过滤链定义，从上向下顺序执行，一般将/**放在最为下边 --&gt;:这是一个坑呢，一不小心代码就不好使了;</span></span><br><span class="line">        <span class="comment">// &lt;!-- authc:所有url都必须认证通过才可以访问; anon:所有url都都可以匿名访问--&gt;</span></span><br><span class="line">        filterChainDefinitionMap.put(<span class="string">&quot;/**&quot;</span>, <span class="string">&quot;authc&quot;</span>);</span><br><span class="line">        <span class="comment">// 如果不设置默认会自动寻找Web工程根目录下的&quot;/login.jsp&quot;页面</span></span><br><span class="line">        shiroFilterFactoryBean.setLoginUrl(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">        <span class="comment">// 登录成功后要跳转的链接</span></span><br><span class="line"><span class="comment">//        shiroFilterFactoryBean.setSuccessUrl(&quot;/index&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//未授权界面;</span></span><br><span class="line"><span class="comment">//        shiroFilterFactoryBean.setUnauthorizedUrl(&quot;/403&quot;);</span></span><br><span class="line">        shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap);</span><br><span class="line">        <span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> HashedCredentialsMatcher <span class="title function_">hashedCredentialsMatcher</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">HashedCredentialsMatcher</span> <span class="variable">hashedCredentialsMatcher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashedCredentialsMatcher</span>();</span><br><span class="line">        hashedCredentialsMatcher.setHashAlgorithmName(<span class="string">&quot;md5&quot;</span>);</span><br><span class="line">        hashedCredentialsMatcher.setHashIterations(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> hashedCredentialsMatcher;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SecurityManager <span class="title function_">securityManager</span><span class="params">(ShiroRealm shiroRealm)</span> &#123;</span><br><span class="line">        <span class="type">DefaultWebSecurityManager</span> <span class="variable">securityManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultWebSecurityManager</span>();</span><br><span class="line">        securityManager.setRealm(shiroRealm);</span><br><span class="line">        <span class="keyword">return</span> securityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ShiroRealm <span class="title function_">shiroRealm</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ShiroRealm</span> <span class="variable">shiroRealm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ShiroRealm</span>();</span><br><span class="line">        shiroRealm.setCredentialsMatcher(hashedCredentialsMatcher());</span><br><span class="line">        <span class="keyword">return</span> shiroRealm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> AuthorizationAttributeSourceAdvisor <span class="title function_">authorizationAttributeSourceAdvisor</span><span class="params">(SecurityManager securityManager)</span> &#123;</span><br><span class="line">        <span class="type">AuthorizationAttributeSourceAdvisor</span> <span class="variable">authorizationAttributeSourceAdvisor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AuthorizationAttributeSourceAdvisor</span>();</span><br><span class="line">        authorizationAttributeSourceAdvisor.setSecurityManager(securityManager);</span><br><span class="line">        <span class="keyword">return</span> authorizationAttributeSourceAdvisor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@description</span>:解决权限注解不生效问题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> DefaultAdvisorAutoProxyCreator <span class="title function_">getDefaultAdvisorAutoProxyCreator</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DefaultAdvisorAutoProxyCreator</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这部分内容就是一些配置，配置了shiro需要的bean</p><p>值得一提的是最后两个bean是启用shiro的注解的，所以如果使用注解配置shiro的过程中一定要加上</p>]]></content>
      
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(十五)密码加密和jwt认证</title>
      <link href="/2022/09/08/go-api-practice-15/"/>
      <url>/2022/09/08/go-api-practice-15/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前的准备"><a class="markdownIt-Anchor" href="#开始前的准备"></a> 开始前的准备</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get golang.org/x/crypto</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get github.com/golang-jwt/jwt</span></span><br></pre></td></tr></table></figure><h1 id="开始编码"><a class="markdownIt-Anchor" href="#开始编码"></a> 开始编码</h1><h2 id="密码加密"><a class="markdownIt-Anchor" href="#密码加密"></a> 密码加密</h2><p><code>pkg/hash/hash.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hash</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/logger&quot;</span></span><br><span class="line">   <span class="string">&quot;golang.org/x/crypto/bcrypt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BcryptHash</span><span class="params">(password <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">   bytes, err := bcrypt.GenerateFromPassword([]<span class="type">byte</span>(password), <span class="number">14</span>)</span><br><span class="line">   logger.LogIf(err)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="type">string</span>(bytes)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BcryptCheck</span><span class="params">(password, hash <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">   err := bcrypt.CompareHashAndPassword([]<span class="type">byte</span>(hash), []<span class="type">byte</span>(password))</span><br><span class="line">   <span class="keyword">return</span> err == <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BcryptIsHashed</span><span class="params">(str <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="built_in">len</span>(str) == <span class="number">60</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里要注意的是<code>BcryptCheck()</code>函数的参数位置不能错误，否则函数将无法正常运行</p><blockquote><p>添加钩子函数</p></blockquote><p><code>app/models/user/user_hooks.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> user</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/hash&quot;</span></span><br><span class="line">   <span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(userModel *User)</span></span> BeforeSave(tx *gorm.DB) (err <span class="type">error</span>) &#123;</span><br><span class="line">   <span class="keyword">if</span> !hash.BcryptIsHashed(userModel.Password) &#123;</span><br><span class="line">      userModel.Password = hash.BcryptHash(userModel.Password)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们使用了<code>gorm</code>的钩子函数，注意参数和函数名都不要出错</p><blockquote><p>验证密码</p></blockquote><p><code>app/models/user/user_model.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(userModel *User)</span></span> ComparePassword(_password <span class="type">string</span>) <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> hash.BcryptCheck(_password, userModel.Password)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试密码加密"><a class="markdownIt-Anchor" href="#测试密码加密"></a> 测试密码加密</h2><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220905082638470.png" alt="" /></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220905082658293.png" alt="" /></p><p>可以看到密码已经被加密</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220905082730346.png" alt="" /></p><h2 id="jwt授权"><a class="markdownIt-Anchor" href="#jwt授权"></a> jwt授权</h2><p><code>pkg/jwt/jwt.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jwt</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;errors&quot;</span></span><br><span class="line">   <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">   jwtpkg <span class="string">&quot;github.com/golang-jwt/jwt&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/app&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/config&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/logger&quot;</span></span><br><span class="line">   <span class="string">&quot;strings&quot;</span></span><br><span class="line">   <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">   ErrTokenExpired           <span class="type">error</span> = errors.New(<span class="string">&quot;令牌已过期&quot;</span>)</span><br><span class="line">   ErrTokenExpiredMaxRefresh <span class="type">error</span> = errors.New(<span class="string">&quot;令牌已过最大刷新时间&quot;</span>)</span><br><span class="line">   ErrTokenMalformed         <span class="type">error</span> = errors.New(<span class="string">&quot;请求令牌格式有误&quot;</span>)</span><br><span class="line">   ErrTokenInvalid           <span class="type">error</span> = errors.New(<span class="string">&quot;请求令牌无效&quot;</span>)</span><br><span class="line">   ErrHeaderEmpty            <span class="type">error</span> = errors.New(<span class="string">&quot;需要认证才能访问！&quot;</span>)</span><br><span class="line">   ErrHeaderMalformed        <span class="type">error</span> = errors.New(<span class="string">&quot;请求头中 Authorization 格式有误&quot;</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// JWT 定义一个jwt对象</span></span><br><span class="line"><span class="keyword">type</span> JWT <span class="keyword">struct</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 秘钥，用以加密 JWT，读取配置信息 app.key</span></span><br><span class="line">   SignKey []<span class="type">byte</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// 刷新 Token 的最大过期时间</span></span><br><span class="line">   MaxRefresh time.Duration</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// JWTCustomClaims 自定义载荷</span></span><br><span class="line"><span class="keyword">type</span> JWTCustomClaims <span class="keyword">struct</span> &#123;</span><br><span class="line">   UserID       <span class="type">string</span> <span class="string">`json:&quot;user_id&quot;`</span></span><br><span class="line">   UserName     <span class="type">string</span> <span class="string">`json:&quot;user_name&quot;`</span></span><br><span class="line">   ExpireAtTime <span class="type">int64</span>  <span class="string">`json:&quot;expire_time&quot;`</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// StandardClaims 结构体实现了 Claims 接口继承了  Valid() 方法</span></span><br><span class="line">   <span class="comment">// JWT 规定了7个官方字段，提供使用:</span></span><br><span class="line">   <span class="comment">// - iss (issuer)：发布者</span></span><br><span class="line">   <span class="comment">// - sub (subject)：主题</span></span><br><span class="line">   <span class="comment">// - iat (Issued At)：生成签名的时间</span></span><br><span class="line">   <span class="comment">// - exp (expiration time)：签名过期时间</span></span><br><span class="line">   <span class="comment">// - aud (audience)：观众，相当于接受者</span></span><br><span class="line">   <span class="comment">// - nbf (Not Before)：生效时间</span></span><br><span class="line">   <span class="comment">// - jti (JWT ID)：编号</span></span><br><span class="line">   jwtpkg.StandardClaims</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewJWT</span><span class="params">()</span></span> *JWT &#123;</span><br><span class="line">   <span class="keyword">return</span> &amp;JWT&#123;</span><br><span class="line">      SignKey:    []<span class="type">byte</span>(config.GetString(<span class="string">&quot;app.key&quot;</span>)),</span><br><span class="line">      MaxRefresh: time.Duration(config.GetInt64(<span class="string">&quot;jwt.max_refresh_time&quot;</span>)) * time.Minute,</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ParserToken 解析 Token，中间件中调用</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(jwt *JWT)</span></span> ParserToken(c *gin.Context) (*JWTCustomClaims, <span class="type">error</span>) &#123;</span><br><span class="line"></span><br><span class="line">   tokenString, parseErr := jwt.getTokenFromHeader(c)</span><br><span class="line">   <span class="keyword">if</span> parseErr != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, parseErr</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 1. 调用 jwt 库解析用户传参的 Token</span></span><br><span class="line">   token, err := jwt.parseTokenString(tokenString)</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 2. 解析出错</span></span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      validationErr, ok := err.(*jwtpkg.ValidationError)</span><br><span class="line">      <span class="keyword">if</span> ok &#123;</span><br><span class="line">         <span class="keyword">if</span> validationErr.Errors == jwtpkg.ValidationErrorMalformed &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span>, ErrTokenMalformed</span><br><span class="line">         &#125; <span class="keyword">else</span> <span class="keyword">if</span> validationErr.Errors == jwtpkg.ValidationErrorExpired &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span>, ErrTokenExpired</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, ErrTokenInvalid</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 3. 将 token 中的 claims 信息解析出来和 JWTCustomClaims 数据结构进行校验</span></span><br><span class="line">   <span class="keyword">if</span> claims, ok := token.Claims.(*JWTCustomClaims); ok &amp;&amp; token.Valid &#123;</span><br><span class="line">      <span class="keyword">return</span> claims, <span class="literal">nil</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="literal">nil</span>, ErrTokenInvalid</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// RefreshToken 更新 Token，用以提供 refresh token 接口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(jwt *JWT)</span></span> RefreshToken(c *gin.Context) (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 1. 从 Header 里获取 token</span></span><br><span class="line">   tokenString, parseErr := jwt.getTokenFromHeader(c)</span><br><span class="line">   <span class="keyword">if</span> parseErr != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;&quot;</span>, parseErr</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 2. 调用 jwt 库解析用户传参的 Token</span></span><br><span class="line">   token, err := jwt.parseTokenString(tokenString)</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 3. 解析出错，未报错证明是合法的 Token（甚至未到过期时间）</span></span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      validationErr, ok := err.(*jwtpkg.ValidationError)</span><br><span class="line">      <span class="comment">// 满足 refresh 的条件：只是单一的报错 ValidationErrorExpired</span></span><br><span class="line">      <span class="keyword">if</span> !ok || validationErr.Errors != jwtpkg.ValidationErrorExpired &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 4. 解析 JWTCustomClaims 的数据</span></span><br><span class="line">   claims := token.Claims.(*JWTCustomClaims)</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 5. 检查是否过了『最大允许刷新的时间』</span></span><br><span class="line">   x := app.TimenowInTimezone().Add(-jwt.MaxRefresh).Unix()</span><br><span class="line">   <span class="keyword">if</span> claims.IssuedAt &gt; x &#123;</span><br><span class="line">      <span class="comment">// 修改过期时间</span></span><br><span class="line">      claims.StandardClaims.ExpiresAt = jwt.expireAtTime()</span><br><span class="line">      <span class="keyword">return</span> jwt.createToken(*claims)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;&quot;</span>, ErrTokenExpiredMaxRefresh</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// IssueToken 生成  Token，在登录成功时调用</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(jwt *JWT)</span></span> IssueToken(userID <span class="type">string</span>, userName <span class="type">string</span>) <span class="type">string</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 1. 构造用户 claims 信息(负荷)</span></span><br><span class="line">   expireAtTime := jwt.expireAtTime()</span><br><span class="line">   claims := JWTCustomClaims&#123;</span><br><span class="line">      userID,</span><br><span class="line">      userName,</span><br><span class="line">      expireAtTime,</span><br><span class="line">      jwtpkg.StandardClaims&#123;</span><br><span class="line">         NotBefore: app.TimenowInTimezone().Unix(), <span class="comment">// 签名生效时间</span></span><br><span class="line">         IssuedAt:  app.TimenowInTimezone().Unix(), <span class="comment">// 首次签名时间（后续刷新 Token 不会更新）</span></span><br><span class="line">         ExpiresAt: expireAtTime,                   <span class="comment">// 签名过期时间</span></span><br><span class="line">         Issuer:    config.GetString(<span class="string">&quot;app.name&quot;</span>),   <span class="comment">// 签名颁发者</span></span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 2. 根据 claims 生成token对象</span></span><br><span class="line">   token, err := jwt.createToken(claims)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      logger.LogIf(err)</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> token</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// createToken 创建 Token，内部使用，外部请调用 IssueToken</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(jwt *JWT)</span></span> createToken(claims JWTCustomClaims) (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">   <span class="comment">// 使用HS256算法进行token生成</span></span><br><span class="line">   token := jwtpkg.NewWithClaims(jwtpkg.SigningMethodHS256, claims)</span><br><span class="line">   <span class="keyword">return</span> token.SignedString(jwt.SignKey)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// expireAtTime 过期时间</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(jwt *JWT)</span></span> expireAtTime() <span class="type">int64</span> &#123;</span><br><span class="line">   timenow := app.TimenowInTimezone()</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> expireTime <span class="type">int64</span></span><br><span class="line">   <span class="keyword">if</span> config.GetBool(<span class="string">&quot;app.debug&quot;</span>) &#123;</span><br><span class="line">      expireTime = config.GetInt64(<span class="string">&quot;jwt.debug_expire_time&quot;</span>)</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      expireTime = config.GetInt64(<span class="string">&quot;jwt.expire_time&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   expire := time.Duration(expireTime) * time.Minute</span><br><span class="line">   <span class="keyword">return</span> timenow.Add(expire).Unix()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// parseTokenString 使用 jwtpkg.ParseWithClaims 解析 Token</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(jwt *JWT)</span></span> parseTokenString(tokenString <span class="type">string</span>) (*jwtpkg.Token, <span class="type">error</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> jwtpkg.ParseWithClaims(tokenString, &amp;JWTCustomClaims&#123;&#125;, <span class="function"><span class="keyword">func</span><span class="params">(token *jwtpkg.Token)</span></span> (<span class="keyword">interface</span>&#123;&#125;, <span class="type">error</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> jwt.SignKey, <span class="literal">nil</span></span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// getTokenFromHeader 使用 jwtpkg.ParseWithClaims 解析 Token</span></span><br><span class="line"><span class="comment">// Authorization:Bearer xxxxx</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(jwt *JWT)</span></span> getTokenFromHeader(c *gin.Context) (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">   authHeader := c.Request.Header.Get(<span class="string">&quot;Authorization&quot;</span>)</span><br><span class="line">   <span class="keyword">if</span> authHeader == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;&quot;</span>, ErrHeaderEmpty</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 按空格分割</span></span><br><span class="line">   parts := strings.SplitN(authHeader, <span class="string">&quot; &quot;</span>, <span class="number">2</span>)</span><br><span class="line">   <span class="keyword">if</span> !(<span class="built_in">len</span>(parts) == <span class="number">2</span> &amp;&amp; parts[<span class="number">0</span>] == <span class="string">&quot;Bearer&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;&quot;</span>, ErrHeaderMalformed</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> parts[<span class="number">1</span>], <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是工具类</p><blockquote><p>时区</p></blockquote><p><code>pkg/app/app.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TimenowInTimezone</span><span class="params">()</span></span> time.Time &#123;</span><br><span class="line">   chinaTimezone, _ := time.LoadLocation(config.GetString(<span class="string">&quot;app.timezone&quot;</span>))</span><br><span class="line">   <span class="keyword">return</span> time.Now().In(chinaTimezone)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>配置信息</p></blockquote><p><code>config/jwt.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> config</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;go-api-practice/pkg/config&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">   config.Add(<span class="string">&quot;jwt&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 使用 config.GetString(&quot;app.key&quot;)</span></span><br><span class="line">         <span class="comment">// &quot;signing_key&quot;:</span></span><br><span class="line"></span><br><span class="line">         <span class="comment">// 过期时间，单位是分钟，一般不超过两个小时</span></span><br><span class="line">         <span class="string">&quot;expire_time&quot;</span>: config.Env(<span class="string">&quot;JWT_EXPIRE_TIME&quot;</span>, <span class="number">120</span>),</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 允许刷新时间，单位分钟，86400 为两个月，从 Token 的签名时间算起</span></span><br><span class="line">         <span class="string">&quot;max_refresh_time&quot;</span>: config.Env(<span class="string">&quot;JWT_MAX_REFRESH_TIME&quot;</span>, <span class="number">86400</span>),</span><br><span class="line"></span><br><span class="line">         <span class="comment">// debug 模式下的过期时间，方便本地开发调试</span></span><br><span class="line">         <span class="string">&quot;debug_expire_time&quot;</span>: <span class="number">86400</span>,</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>获得字符串ID</p></blockquote><p><code>app/models/model.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a BaseModel)</span></span> GetStringID() <span class="type">string</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> cast.ToString(a.ID)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在控制器中调用"><a class="markdownIt-Anchor" href="#在控制器中调用"></a> 在控制器中调用</h2><p><code>app/http/controllers/api/v1/auth/signup_controller.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sc *SignupController)</span></span> SignupUsingPhone(c *gin.Context) &#123;</span><br><span class="line">   request := requests.SignupUsingPhoneRequest&#123;&#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> ok := requests.Validate(c, &amp;request, requests.SignupUsingPhone); !ok &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line">   userModel := user.User&#123;</span><br><span class="line">      Name:     request.Name,</span><br><span class="line">      Phone:    request.Phone,</span><br><span class="line">      Password: request.Password,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   userModel.Create()</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> userModel.ID &gt; <span class="number">0</span> &#123;</span><br><span class="line">      token := jwt.NewJWT().IssueToken(userModel.GetStringID(), userModel.Name)</span><br><span class="line">      response.CreatedJSON(c, gin.H&#123;</span><br><span class="line">         <span class="string">&quot;token&quot;</span>: token,</span><br><span class="line">         <span class="string">&quot;data&quot;</span>:  userModel,</span><br><span class="line">      &#125;)</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      response.Abort500(c, <span class="string">&quot;创建用户失败&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sc *SignupController)</span></span> SignupUsingEmail(c *gin.Context) &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 1. 验证表单</span></span><br><span class="line">   request := requests.SignupUsingEmailRequest&#123;&#125;</span><br><span class="line">   <span class="keyword">if</span> ok := requests.Validate(c, &amp;request, requests.SignupUsingEmail); !ok &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 2. 验证成功，创建数据</span></span><br><span class="line">   userModel := user.User&#123;</span><br><span class="line">      Name:     request.Name,</span><br><span class="line">      Email:    request.Email,</span><br><span class="line">      Password: request.Password,</span><br><span class="line">   &#125;</span><br><span class="line">   userModel.Create()</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> userModel.ID &gt; <span class="number">0</span> &#123;</span><br><span class="line">      token := jwt.NewJWT().IssueToken(userModel.GetStringID(), userModel.Name)</span><br><span class="line">      response.CreatedJSON(c, gin.H&#123;</span><br><span class="line">         <span class="string">&quot;token&quot;</span>: token,</span><br><span class="line">         <span class="string">&quot;data&quot;</span>:  userModel,</span><br><span class="line">      &#125;)</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      response.Abort500(c, <span class="string">&quot;创建用户失败，请稍后尝试~&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试jwt"><a class="markdownIt-Anchor" href="#测试jwt"></a> 测试jwt</h2><p>我们用之前的API在来注册一个用户，成功如下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220905083242904.png" alt="" /></p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(十四)邮箱发送验证码</title>
      <link href="/2022/09/08/go-api-practice-14/"/>
      <url>/2022/09/08/go-api-practice-14/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前的准备"><a class="markdownIt-Anchor" href="#开始前的准备"></a> 开始前的准备</h1><ul><li>发送邮箱验证码时请确保开启<code>MailHog</code></li></ul><h1 id="开始编码"><a class="markdownIt-Anchor" href="#开始编码"></a> 开始编码</h1><p>整体逻辑和手机发送短信差不多</p><h2 id="接受前端数据"><a class="markdownIt-Anchor" href="#接受前端数据"></a> 接受前端数据</h2><p><code>app/requests/signup_request.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SignupUsingEmailRequest <span class="keyword">struct</span> &#123;</span><br><span class="line">   Email           <span class="type">string</span> <span class="string">`json:&quot;email,omitempty&quot; valid:&quot;email&quot;`</span></span><br><span class="line">   VerifyCode      <span class="type">string</span> <span class="string">`json:&quot;verify_code,omitempty&quot; valid:&quot;verify_code&quot;`</span></span><br><span class="line">   Name            <span class="type">string</span> <span class="string">`valid:&quot;name&quot; json:&quot;name&quot;`</span></span><br><span class="line">   Password        <span class="type">string</span> <span class="string">`valid:&quot;password&quot; json:&quot;password,omitempty&quot;`</span></span><br><span class="line">   PasswordConfirm <span class="type">string</span> <span class="string">`valid:&quot;password_confirm&quot; json:&quot;password_confirm,omitempty&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SignupUsingEmail</span><span class="params">(data <span class="keyword">interface</span>&#123;&#125;, c *gin.Context)</span></span> <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span> &#123;</span><br><span class="line"></span><br><span class="line">   rules := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;email&quot;</span>:            []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;min:4&quot;</span>, <span class="string">&quot;max:30&quot;</span>, <span class="string">&quot;email&quot;</span>, <span class="string">&quot;not_exists:users,email&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>:             []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;alpha_num&quot;</span>, <span class="string">&quot;between:3,20&quot;</span>, <span class="string">&quot;not_exists:users,name&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;password&quot;</span>:         []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;min:6&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;password_confirm&quot;</span>: []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;verify_code&quot;</span>:      []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;digits:6&quot;</span>&#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   messages := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;email&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:Email 为必填项&quot;</span>,</span><br><span class="line">         <span class="string">&quot;min:Email 长度需大于 4&quot;</span>,</span><br><span class="line">         <span class="string">&quot;max:Email 长度需小于 30&quot;</span>,</span><br><span class="line">         <span class="string">&quot;email:Email 格式不正确，请提供有效的邮箱地址&quot;</span>,</span><br><span class="line">         <span class="string">&quot;not_exists:Email 已被占用&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:用户名为必填项&quot;</span>,</span><br><span class="line">         <span class="string">&quot;alpha_num:用户名格式错误，只允许数字和英文&quot;</span>,</span><br><span class="line">         <span class="string">&quot;between:用户名长度需在 3~20 之间&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;password&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:密码为必填项&quot;</span>,</span><br><span class="line">         <span class="string">&quot;min:密码长度需大于 6&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;password_confirm&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:确认密码框为必填项&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;verify_code&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:验证码答案必填&quot;</span>,</span><br><span class="line">         <span class="string">&quot;digits:验证码长度必须为 6 位的数字&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   errs := validate(data, rules, messages)</span><br><span class="line"></span><br><span class="line">   _data := data.(*SignupUsingEmailRequest)</span><br><span class="line">   errs = validators.ValidatePasswordConfirm(_data.Password, _data.PasswordConfirm, errs)</span><br><span class="line">   errs = validators.ValidateVerifyCode(_data.Email, _data.VerifyCode, errs)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> errs</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制器"><a class="markdownIt-Anchor" href="#控制器"></a> 控制器</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SignupUsingEmail 使用 Email + 验证码进行注册</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sc *SignupController)</span></span> SignupUsingEmail(c *gin.Context) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1. 验证表单</span></span><br><span class="line">    request := requests.SignupUsingEmailRequest&#123;&#125;</span><br><span class="line">    <span class="keyword">if</span> ok := requests.Validate(c, &amp;request, requests.SignupUsingEmail); !ok &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 验证成功，创建数据</span></span><br><span class="line">    userModel := user.User&#123;</span><br><span class="line">        Name:     request.Name,</span><br><span class="line">        Email:    request.Email,</span><br><span class="line">        Password: request.Password,</span><br><span class="line">    &#125;</span><br><span class="line">    userModel.Create()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> userModel.ID &gt; <span class="number">0</span> &#123;</span><br><span class="line">        response.CreatedJSON(c, gin.H&#123;</span><br><span class="line">            <span class="string">&quot;data&quot;</span>: userModel,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        response.Abort500(c, <span class="string">&quot;创建用户失败，请稍后尝试~&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注册路由</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">authGroup.POST(<span class="string">&quot;/signup/using-phone&quot;</span>, suc.SignupUsingPhone)</span><br><span class="line">authGroup.POST(<span class="string">&quot;/signup/using-email&quot;</span>, suc.SignupUsingEmail)</span><br></pre></td></tr></table></figure><h2 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h2><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220905081857051.png" alt="" /></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220905081940831.png" alt="" /></p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(十三)手机号发送短信验证码</title>
      <link href="/2022/09/08/go-api-practice-13/"/>
      <url>/2022/09/08/go-api-practice-13/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前的准备"><a class="markdownIt-Anchor" href="#开始前的准备"></a> 开始前的准备</h1><h1 id="编码开始"><a class="markdownIt-Anchor" href="#编码开始"></a> 编码开始</h1><h2 id="接受前端数据"><a class="markdownIt-Anchor" href="#接受前端数据"></a> 接受前端数据</h2><p><code>app/requests/signup_request.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SignupUsingPhoneRequest <span class="keyword">struct</span> &#123;</span><br><span class="line">   Phone           <span class="type">string</span> <span class="string">`json:&quot;phone,omitempty&quot; valid:&quot;phone&quot;`</span></span><br><span class="line">   VerifyCode      <span class="type">string</span> <span class="string">`json:&quot;verify_code,omitempty&quot; valid:&quot;verify_code&quot;`</span></span><br><span class="line">   Name            <span class="type">string</span> <span class="string">`valid:&quot;name&quot; json:&quot;name&quot;`</span></span><br><span class="line">   Password        <span class="type">string</span> <span class="string">`valid:&quot;password&quot; json:&quot;password,omitempty&quot;`</span></span><br><span class="line">   PasswordConfirm <span class="type">string</span> <span class="string">`valid:&quot;password_confirm&quot; json:&quot;password_confirm,omitempty&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SignupUsingPhone</span><span class="params">(data <span class="keyword">interface</span>&#123;&#125;, c *gin.Context)</span></span> <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span> &#123;</span><br><span class="line"></span><br><span class="line">   rules := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;phone&quot;</span>:            []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;digits:11&quot;</span>, <span class="string">&quot;not_exists:users,phone&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>:             []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;alpha_num&quot;</span>, <span class="string">&quot;between:3,20&quot;</span>, <span class="string">&quot;not_exists:users,name&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;password&quot;</span>:         []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;min:6&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;password_confirm&quot;</span>: []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;verify_code&quot;</span>:      []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;digits:6&quot;</span>&#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   messages := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;phone&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:手机号为必填项，参数名称 phone&quot;</span>,</span><br><span class="line">         <span class="string">&quot;digits:手机号长度必须为 11 位的数字&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:用户名为必填项&quot;</span>,</span><br><span class="line">         <span class="string">&quot;alpha_num:用户名格式错误，只允许数字和英文&quot;</span>,</span><br><span class="line">         <span class="string">&quot;between:用户名长度需在 3~20 之间&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;password&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:密码为必填项&quot;</span>,</span><br><span class="line">         <span class="string">&quot;min:密码长度需大于 6&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;password_confirm&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:确认密码框为必填项&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;verify_code&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:验证码答案必填&quot;</span>,</span><br><span class="line">         <span class="string">&quot;digits:验证码长度必须为 6 位的数字&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   errs := validate(data, rules, messages)</span><br><span class="line"></span><br><span class="line">   _data := data.(*SignupUsingPhoneRequest)</span><br><span class="line">   errs = validators.ValidatePasswordConfirm(_data.Password, _data.PasswordConfirm, errs)</span><br><span class="line">   errs = validators.ValidateVerifyCode(_data.Phone, _data.VerifyCode, errs)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> errs</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从前端接受到数据，为了满足我们的自定义需求，我们需要自己来拓展验证包</p><h2 id="自定义规则"><a class="markdownIt-Anchor" href="#自定义规则"></a> 自定义规则</h2><p><code>app/requests/validators/custom_rules.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> validators</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;errors&quot;</span></span><br><span class="line">   <span class="string">&quot;fmt&quot;</span></span><br><span class="line">   <span class="string">&quot;github.com/thedevsaddam/govalidator&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/database&quot;</span></span><br><span class="line">   <span class="string">&quot;strings&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 自定义规则 not_exists，验证请求数据必须不存在于数据库中。</span></span><br><span class="line">   <span class="comment">// 常用于保证数据库某个字段的值唯一，如用户名、邮箱、手机号、或者分类的名称。</span></span><br><span class="line">   <span class="comment">// not_exists 参数可以有两种，一种是 2 个参数，一种是 3 个参数：</span></span><br><span class="line">   <span class="comment">// not_exists:users,email 检查数据库表里是否存在同一条信息</span></span><br><span class="line">   <span class="comment">// not_exists:users,email,32 排除用户掉 id 为 32 的用户</span></span><br><span class="line">   govalidator.AddCustomRule(<span class="string">&quot;not_exists&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(field <span class="type">string</span>, rule <span class="type">string</span>, message <span class="type">string</span>, value <span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">error</span> &#123;</span><br><span class="line">      rng := strings.Split(strings.TrimPrefix(rule, <span class="string">&quot;not_exists:&quot;</span>), <span class="string">&quot;,&quot;</span>)</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 第一个参数，表名称，如 users</span></span><br><span class="line">      tableName := rng[<span class="number">0</span>]</span><br><span class="line">      <span class="comment">// 第二个参数，字段名称，如 email 或者 phone</span></span><br><span class="line">      dbFiled := rng[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 第三个参数，排除 ID</span></span><br><span class="line">      <span class="keyword">var</span> exceptID <span class="type">string</span></span><br><span class="line">      <span class="keyword">if</span> <span class="built_in">len</span>(rng) &gt; <span class="number">2</span> &#123;</span><br><span class="line">         exceptID = rng[<span class="number">2</span>]</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 用户请求过来的数据</span></span><br><span class="line">      requestValue := value.(<span class="type">string</span>)</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 拼接 SQL</span></span><br><span class="line">      query := database.DB.Table(tableName).Where(dbFiled+<span class="string">&quot; = ?&quot;</span>, requestValue)</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 如果传参第三个参数，加上 SQL Where 过滤</span></span><br><span class="line">      <span class="keyword">if</span> <span class="built_in">len</span>(exceptID) &gt; <span class="number">0</span> &#123;</span><br><span class="line">         query.Where(<span class="string">&quot;id != ?&quot;</span>, exceptID)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 查询数据库</span></span><br><span class="line">      <span class="keyword">var</span> count <span class="type">int64</span></span><br><span class="line">      query.Count(&amp;count)</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 验证不通过，数据库能找到对应的数据</span></span><br><span class="line">      <span class="keyword">if</span> count != <span class="number">0</span> &#123;</span><br><span class="line">         <span class="comment">// 如果有自定义错误消息的话</span></span><br><span class="line">         <span class="keyword">if</span> message != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> errors.New(message)</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">// 默认的错误消息</span></span><br><span class="line">         <span class="keyword">return</span> fmt.Errorf(<span class="string">&quot;%v 已被占用&quot;</span>, requestValue)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 验证通过</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义验证器"><a class="markdownIt-Anchor" href="#自定义验证器"></a> 自定义验证器</h2><p><code>app/requests/validators/custom_validators.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ValidatePasswordConfirm</span><span class="params">(password, passwordConfirm <span class="type">string</span>, errs <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span>)</span></span> <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span> &#123;</span><br><span class="line">   <span class="keyword">if</span> password != passwordConfirm &#123;</span><br><span class="line">      errs[<span class="string">&quot;password_confirm&quot;</span>] = <span class="built_in">append</span>(errs[<span class="string">&quot;password_confirm&quot;</span>], <span class="string">&quot;两次输入密码不匹配！&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> errs</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ValidateVerifyCode 自定义规则，验证『手机/邮箱验证码』</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ValidateVerifyCode</span><span class="params">(key, answer <span class="type">string</span>, errs <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span>)</span></span> <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span> &#123;</span><br><span class="line">   <span class="keyword">if</span> ok := verifycode.NewVerifyCode().CheckAnswer(key, answer); !ok &#123;</span><br><span class="line">      errs[<span class="string">&quot;verify_code&quot;</span>] = <span class="built_in">append</span>(errs[<span class="string">&quot;verify_code&quot;</span>], <span class="string">&quot;验证码错误&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> errs</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成控制器"><a class="markdownIt-Anchor" href="#完成控制器"></a> 完成控制器</h2><p><code>app/http/controllers/api/v1/auth/signup_controller.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SignupUsingPhone 使用手机和验证码进行注册</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sc *SignupController)</span></span> SignupUsingPhone(c *gin.Context) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1. 验证表单</span></span><br><span class="line">    request := requests.SignupUsingPhoneRequest&#123;&#125;</span><br><span class="line">    <span class="keyword">if</span> ok := requests.Validate(c, &amp;request, requests.SignupUsingPhone); !ok &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 验证成功，创建数据</span></span><br><span class="line">    _user := user.User&#123;</span><br><span class="line">        Name:     request.Name,</span><br><span class="line">        Phone:    request.Phone,</span><br><span class="line">        Password: request.Password,</span><br><span class="line">    &#125;</span><br><span class="line">    _user.Create()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> _user.ID &gt; <span class="number">0</span> &#123;</span><br><span class="line">        response.CreatedJSON(c, gin.H&#123;</span><br><span class="line">            <span class="string">&quot;data&quot;</span>: _user,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        response.Abort500(c, <span class="string">&quot;创建用户失败，请稍后尝试~&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>添加create()方法</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Create 创建用户，通过 User.ID 来判断是否创建成功</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(userModel *User)</span></span> Create() &#123;</span><br><span class="line">    database.DB.Create(&amp;userModel)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>添加API</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">authGroup.POST(<span class="string">&quot;/signup/email/exist&quot;</span>, suc.IsEmailExist)</span><br><span class="line">authGroup.POST(<span class="string">&quot;/signup/using-phone&quot;</span>, suc.SignupUsingPhone)</span><br></pre></td></tr></table></figure><h2 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h2><p>我们设置了可以跳过验证的特殊手机号，采用这个手机号来测试一下我们的接口</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220905081236101.png" alt="" /></p><p>测试一下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220905081304027.png" alt="" /></p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(十二)用邮件来发送验证码</title>
      <link href="/2022/09/08/go-api-practice-12/"/>
      <url>/2022/09/08/go-api-practice-12/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前的准备"><a class="markdownIt-Anchor" href="#开始前的准备"></a> 开始前的准备</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go install github.com/mailhog/MailHog@latest</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get github.com/jordan-wright/email</span></span><br></pre></td></tr></table></figure><p>我们用mailhog来作为邮箱服务器</p><ul><li>SMTP端口：1025</li><li>网页端口：8025</li></ul><p>我们再powershell使用<code>MailHog</code>命令开启服务</p><h1 id="编码"><a class="markdownIt-Anchor" href="#编码"></a> 编码</h1><h2 id="封装mail包"><a class="markdownIt-Anchor" href="#封装mail包"></a> 封装mail包</h2><p>我们依然先去封装mail包</p><p><code>pkg/mail/driver_interface.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mail</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Driver <span class="keyword">interface</span> &#123;</span><br><span class="line">   Send(mail Email, config <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>) <span class="type">bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>pkg/mail/driver_smtp.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mail</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;fmt&quot;</span></span><br><span class="line">   emailPKG <span class="string">&quot;github.com/jordan-wright/email&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/logger&quot;</span></span><br><span class="line">   <span class="string">&quot;net/smtp&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> SMTP <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Send 实现 email.Driver interface 的 Send 方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *SMTP)</span></span> Send(email Email, config <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>) <span class="type">bool</span> &#123;</span><br><span class="line"></span><br><span class="line">   e := emailPKG.NewEmail()</span><br><span class="line"></span><br><span class="line">   e.From = fmt.Sprintf(<span class="string">&quot;%v &lt;%v&gt;&quot;</span>, email.From.Name, email.From.Address)</span><br><span class="line">   e.To = email.To</span><br><span class="line">   e.Bcc = email.Bcc</span><br><span class="line">   e.Cc = email.Cc</span><br><span class="line">   e.Subject = email.Subject</span><br><span class="line">   e.Text = email.Text</span><br><span class="line">   e.HTML = email.HTML</span><br><span class="line"></span><br><span class="line">   logger.DebugJSON(<span class="string">&quot;发送邮件&quot;</span>, <span class="string">&quot;发件详情&quot;</span>, e)</span><br><span class="line"></span><br><span class="line">   err := e.Send(</span><br><span class="line">      fmt.Sprintf(<span class="string">&quot;%v:%v&quot;</span>, config[<span class="string">&quot;host&quot;</span>], config[<span class="string">&quot;port&quot;</span>]),</span><br><span class="line"></span><br><span class="line">      smtp.PlainAuth(</span><br><span class="line">         <span class="string">&quot;&quot;</span>,</span><br><span class="line">         config[<span class="string">&quot;username&quot;</span>],</span><br><span class="line">         config[<span class="string">&quot;password&quot;</span>],</span><br><span class="line">         config[<span class="string">&quot;host&quot;</span>],</span><br><span class="line">      ),</span><br><span class="line">   )</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      logger.ErrorString(<span class="string">&quot;发送邮件&quot;</span>, <span class="string">&quot;发件出错&quot;</span>, err.Error())</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   logger.DebugString(<span class="string">&quot;发送邮件&quot;</span>, <span class="string">&quot;发件成功&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现了接口</p><p><code>pkg/mail/mail.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mail</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/config&quot;</span></span><br><span class="line">   <span class="string">&quot;sync&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> From <span class="keyword">struct</span> &#123;</span><br><span class="line">   Address <span class="type">string</span></span><br><span class="line">   Name    <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Email <span class="keyword">struct</span> &#123;</span><br><span class="line">   From    From</span><br><span class="line">   To      []<span class="type">string</span></span><br><span class="line">   Bcc     []<span class="type">string</span> <span class="comment">//密送</span></span><br><span class="line">   Cc      []<span class="type">string</span> <span class="comment">//抄送</span></span><br><span class="line">   Subject <span class="type">string</span></span><br><span class="line">   Text    []<span class="type">byte</span> <span class="comment">// Plaintext message (optional)</span></span><br><span class="line">   HTML    []<span class="type">byte</span> <span class="comment">// Html message (optional)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Mailer <span class="keyword">struct</span> &#123;</span><br><span class="line">   Driver Driver</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> once sync.Once</span><br><span class="line"><span class="keyword">var</span> internalMailer *Mailer</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewMailer</span><span class="params">()</span></span> *Mailer &#123;</span><br><span class="line">   once.Do(<span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">      internalMailer = &amp;Mailer&#123;</span><br><span class="line">         Driver: &amp;SMTP&#123;&#125;,</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="keyword">return</span> internalMailer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(mailer *Mailer)</span></span> Send(email Email) <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> mailer.Driver.Send(email, config.GetStringMapString(<span class="string">&quot;mail.smtp&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终封装了发送邮件的功能到一个<code>Send</code>函数中</p><h2 id="mail配置"><a class="markdownIt-Anchor" href="#mail配置"></a> mail配置</h2><p><code>config/mail.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> config</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;go-api-practice/pkg/config&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">   config.Add(<span class="string">&quot;mail&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 默认是 Mailhog 的配置</span></span><br><span class="line">         <span class="string">&quot;smtp&quot;</span>: <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line">            <span class="string">&quot;host&quot;</span>:     config.Env(<span class="string">&quot;MAIL_HOST&quot;</span>, <span class="string">&quot;localhost&quot;</span>),</span><br><span class="line">            <span class="string">&quot;port&quot;</span>:     config.Env(<span class="string">&quot;MAIL_PORT&quot;</span>, <span class="number">1025</span>),</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: config.Env(<span class="string">&quot;MAIL_USERNAME&quot;</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line">            <span class="string">&quot;password&quot;</span>: config.Env(<span class="string">&quot;MAIL_PASSWORD&quot;</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line">         &#125;,</span><br><span class="line"></span><br><span class="line">         <span class="string">&quot;from&quot;</span>: <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line">            <span class="string">&quot;address&quot;</span>: config.Env(<span class="string">&quot;MAIL_FROM_ADDRESS&quot;</span>, <span class="string">&quot;go-api-practice@example.com&quot;</span>),</span><br><span class="line">            <span class="string">&quot;name&quot;</span>:    config.Env(<span class="string">&quot;MAIL_FROM_NAME&quot;</span>, <span class="string">&quot;Go-API-Practice&quot;</span>),</span><br><span class="line">         &#125;,</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="发送邮件接口"><a class="markdownIt-Anchor" href="#发送邮件接口"></a> 发送邮件接口</h2><p>和前面发送短信的接口类似，我们去开发这个接口</p><p><code>pkg/verifycode/verifycode.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(vc *VerifyCode)</span></span> SendEmail(email <span class="type">string</span>) <span class="type">error</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成验证码</span></span><br><span class="line">    code := vc.generateVerifyCode(email)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方便本地和 API 自动测试</span></span><br><span class="line">    <span class="keyword">if</span> !app.IsProduction() &amp;&amp; strings.HasSuffix(email, config.GetString(<span class="string">&quot;verifycode.debug_email_suffix&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    content := fmt.Sprintf(<span class="string">&quot;&lt;h1&gt;您的 Email 验证码是 %v &lt;/h1&gt;&quot;</span>, code)</span><br><span class="line">    <span class="comment">// 发送邮件</span></span><br><span class="line">    mail.NewMailer().Send(mail.Email&#123;</span><br><span class="line">        From: mail.From&#123;</span><br><span class="line">            Address: config.GetString(<span class="string">&quot;mail.from.address&quot;</span>),</span><br><span class="line">            Name:    config.GetString(<span class="string">&quot;mail.from.name&quot;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">        To:      []<span class="type">string</span>&#123;email&#125;,</span><br><span class="line">        Subject: <span class="string">&quot;Email 验证码&quot;</span>,</span><br><span class="line">        HTML:    []<span class="type">byte</span>(content),</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和手机发送验证码类似的，对于特殊邮箱可以跳过验证</p><p><code>app/requests/verify_code_request.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> VerifyCodeEmailRequest <span class="keyword">struct</span> &#123;</span><br><span class="line">   CaptchaID     <span class="type">string</span> <span class="string">`json:&quot;captcha_id,omitempty&quot; valid:&quot;captcha_id&quot;`</span></span><br><span class="line">   CaptchaAnswer <span class="type">string</span> <span class="string">`json:&quot;captcha_answer,omitempty&quot; valid:&quot;captcha_answer&quot;`</span></span><br><span class="line"></span><br><span class="line">   Email <span class="type">string</span> <span class="string">`json:&quot;email,omitempty&quot; valid:&quot;email&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// VerifyCodeEmail 验证表单，返回长度等于零即通过</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">VerifyCodeEmail</span><span class="params">(data <span class="keyword">interface</span>&#123;&#125;, c *gin.Context)</span></span> <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 1. 定制认证规则</span></span><br><span class="line">   rules := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;email&quot;</span>:          []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;min:4&quot;</span>, <span class="string">&quot;max:30&quot;</span>, <span class="string">&quot;email&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;captcha_id&quot;</span>:     []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;captcha_answer&quot;</span>: []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;digits:6&quot;</span>&#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 2. 定制错误消息</span></span><br><span class="line">   messages := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;email&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:Email 为必填项&quot;</span>,</span><br><span class="line">         <span class="string">&quot;min:Email 长度需大于 4&quot;</span>,</span><br><span class="line">         <span class="string">&quot;max:Email 长度需小于 30&quot;</span>,</span><br><span class="line">         <span class="string">&quot;email:Email 格式不正确，请提供有效的邮箱地址&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;captcha_id&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:图片验证码的 ID 为必填&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;captcha_answer&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:图片验证码答案必填&quot;</span>,</span><br><span class="line">         <span class="string">&quot;digits:图片验证码长度必须为 6 位的数字&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   errs := validate(data, rules, messages)</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 图片验证码</span></span><br><span class="line">   _data := data.(*VerifyCodeEmailRequest)</span><br><span class="line">   errs = validators.ValidateCaptcha(_data.CaptchaID, _data.CaptchaAnswer, errs)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> errs</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从前端中读取邮箱和验证码，特别的，由于我们验证<code>captcha</code>验证码的代码部分是公共的，所以我们对它封装一层</p><p><code>app/requests/validators/custom_validators.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> validators</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;go-api-practice/pkg/captcha&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ValidateCaptcha</span><span class="params">(captchaID, captchaAnswer <span class="type">string</span>, errs <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span>)</span></span> <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span> &#123;</span><br><span class="line">   <span class="keyword">if</span> ok := captcha.NewCaptcha().VerifyCaptcha(captchaID, captchaAnswer); !ok &#123;</span><br><span class="line">      errs[<span class="string">&quot;captcha_answer&quot;</span>] = <span class="built_in">append</span>(errs[<span class="string">&quot;captcha_answer&quot;</span>], <span class="string">&quot;图片验证码错误&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> errs</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们顺便把手机号验证的部分也一并修改</p><p>最后我们再完成控制器部分</p><p><code>app/http/controllers/api/v1/auth/verify_code_controller.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(vc *VerifyCodeController)</span></span> SendUsingEmail(c *gin.Context) &#123;</span><br><span class="line">   request := requests.VerifyCodeEmailRequest&#123;&#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> ok := requests.Validate(c, &amp;request, requests.VerifyCodeEmail); !ok &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   err := verifycode.NewVerifyCode().SendEmail(request.Email)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      response.Abort500(c, <span class="string">&quot;发送失败&quot;</span>)</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      response.Success(c)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注册接口</p><p><code>routes/api.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vcc := <span class="built_in">new</span>(auth.VerifyCodeController)</span><br><span class="line">authGroup.POST(<span class="string">&quot;/verify-codes/captcha&quot;</span>, vcc.ShowCaptcha)</span><br><span class="line">authGroup.POST(<span class="string">&quot;/verify-codes/phone&quot;</span>, vcc.SendUsingPhone)</span><br><span class="line">authGroup.POST(<span class="string">&quot;/verify-codes/email&quot;</span>, vcc.SendUsingEmail)</span><br></pre></td></tr></table></figure><h2 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h2><p>创建接口</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220902154100778.png" alt="" /></p><p>如果成功，结果如下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220902154146060.png" alt="" /></p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(十一)利用阿里云平台发送短信</title>
      <link href="/2022/09/08/go-api-practice-11/"/>
      <url>/2022/09/08/go-api-practice-11/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前的准备"><a class="markdownIt-Anchor" href="#开始前的准备"></a> 开始前的准备</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get github.com/KenmyZhang/aliyun-communicate</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">此外我们还需要在阿里云申请短信服务并且获取accesskey ID和accesskey secret</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.learnku.com/uploads/images/202201/03/1/SujCwVOftn.png!large" alt="阿里短信平台" /><img src="https://cdn.learnku.com/uploads/images/202201/03/1/k8BaDVS2Xu.png!large" alt="阿里短信平台" /></p><h1 id="开始编码"><a class="markdownIt-Anchor" href="#开始编码"></a> 开始编码</h1><h2 id="封装sms"><a class="markdownIt-Anchor" href="#封装sms"></a> 封装sms</h2><p><code>pkg/sms/driver_interface.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sms</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Driver <span class="keyword">interface</span> &#123;</span><br><span class="line">   Send(phone <span class="type">string</span>, message Message, config <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>) <span class="type">bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>pkg/sms/driver_aliyun.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sms</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">   aliyunsmsclient <span class="string">&quot;github.com/KenmyZhang/aliyun-communicate&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/logger&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Aliyun <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Aliyun)</span></span> Send(phone <span class="type">string</span>, message Message, config <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>) <span class="type">bool</span> &#123;</span><br><span class="line">   smsClient := aliyunsmsclient.New(<span class="string">&quot;http://dysmsapi.aliyuncs.com/&quot;</span>)</span><br><span class="line"></span><br><span class="line">   templateParam, err := json.Marshal(message.Data)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      logger.ErrorString(<span class="string">&quot;Aliyun sms error&quot;</span>, <span class="string">&quot;json.Marshal error&quot;</span>, err.Error())</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   logger.DebugJSON(<span class="string">&quot;Aliyun sms&quot;</span>, <span class="string">&quot;config&quot;</span>, config)</span><br><span class="line"></span><br><span class="line">   result, err := smsClient.Execute(</span><br><span class="line">      config[<span class="string">&quot;access_key_id&quot;</span>],</span><br><span class="line">      config[<span class="string">&quot;access_key_secret&quot;</span>],</span><br><span class="line">      phone,</span><br><span class="line">      config[<span class="string">&quot;sign_name&quot;</span>],</span><br><span class="line">      message.Template,</span><br><span class="line">      <span class="type">string</span>(templateParam),</span><br><span class="line">   )</span><br><span class="line"></span><br><span class="line">   logger.DebugJSON(<span class="string">&quot;Aliyun sms&quot;</span>, <span class="string">&quot;request&quot;</span>, smsClient.Request)</span><br><span class="line">   logger.DebugJSON(<span class="string">&quot;Aliyun sms&quot;</span>, <span class="string">&quot;result&quot;</span>, result)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      logger.ErrorString(<span class="string">&quot;Aliyun sms error&quot;</span>, <span class="string">&quot;Execute error&quot;</span>, err.Error())</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   resultJSON, err := json.Marshal(result)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      logger.ErrorString(<span class="string">&quot;Aliyun sms error&quot;</span>, <span class="string">&quot;json.Marshal error&quot;</span>, err.Error())</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> result.IsSuccessful() &#123;</span><br><span class="line">      logger.DebugString(<span class="string">&quot;Aliyun sms&quot;</span>, <span class="string">&quot;success&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      logger.ErrorString(<span class="string">&quot;Aliyun sms&quot;</span>, <span class="string">&quot;error&quot;</span>, <span class="type">string</span>(resultJSON))</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>pkg/sms/sms.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sms</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/config&quot;</span></span><br><span class="line">   <span class="string">&quot;sync&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Message <span class="keyword">struct</span> &#123;</span><br><span class="line">   Template <span class="type">string</span></span><br><span class="line">   Data     <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span></span><br><span class="line">   Content  <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> SMS <span class="keyword">struct</span> &#123;</span><br><span class="line">   Driver Driver</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> once sync.Once</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> internalSMS *SMS</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewSMS</span><span class="params">()</span></span> *SMS &#123;</span><br><span class="line">   once.Do(<span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">      internalSMS = &amp;SMS&#123;</span><br><span class="line">         Driver: &amp;Aliyun&#123;&#125;,</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="keyword">return</span> internalSMS</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sms *SMS)</span></span> Send(phone <span class="type">string</span>, message Message) <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> sms.Driver.Send(phone, message, config.GetStringMapString(<span class="string">&quot;sms.aliyun&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们先把阿里云的sms包封装成一个<code>Send</code>函数</p><h2 id="验证手机验证码"><a class="markdownIt-Anchor" href="#验证手机验证码"></a> 验证手机验证码</h2><p>在这里值得一提的是，我们要注意在整个用手机发送短信的过程中，有两个不同的验证码，由<code>captcha</code>生成的验证码和手机发送的验证码，这里我们先来完成验证手机验证码的逻辑</p><p><code>pkg/verifycode/store_interface.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> verifycode</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Store <span class="keyword">interface</span> &#123;</span><br><span class="line">   Set(id <span class="type">string</span>, value <span class="type">string</span>) <span class="type">bool</span></span><br><span class="line">   Get(id <span class="type">string</span>, clear <span class="type">bool</span>) <span class="type">string</span></span><br><span class="line">   Verify(id, answer <span class="type">string</span>, clear <span class="type">bool</span>) <span class="type">bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然是两个不同的验证码，但是处理逻辑是类似的，这里的接口和<code>captcha</code>中的<code>Store</code>实际上是一致的，接下来我们来实现这个接口</p><p><code>pkg/verifycode/store_redis.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> verifycode</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/app&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/config&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/redis&quot;</span></span><br><span class="line">   <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> RedisStore <span class="keyword">struct</span> &#123;</span><br><span class="line">   RedisClient *redis.RedisClient</span><br><span class="line">   keyPrefix   <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *RedisStore)</span></span> Set(key <span class="type">string</span>, value <span class="type">string</span>) <span class="type">bool</span> &#123;</span><br><span class="line">   ExpireTime := time.Minute * time.Duration(config.GetInt64(<span class="string">&quot;verifycode.expire_time&quot;</span>))</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> app.IsLocal() &#123;</span><br><span class="line">      ExpireTime = time.Minute * time.Duration(config.GetInt64(<span class="string">&quot;verifycode.debug.expire_time&quot;</span>))</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> s.RedisClient.Set(s.keyPrefix+key, value, ExpireTime)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *RedisStore)</span></span> Get(key <span class="type">string</span>, clear <span class="type">bool</span>) (value <span class="type">string</span>) &#123;</span><br><span class="line">   key = s.keyPrefix + key</span><br><span class="line">   val := s.RedisClient.Get(key)</span><br><span class="line">   <span class="keyword">if</span> clear &#123;</span><br><span class="line">      s.RedisClient.Del(key)</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> val</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *RedisStore)</span></span> Verify(key <span class="type">string</span>, answer <span class="type">string</span>, clear <span class="type">bool</span>) <span class="type">bool</span> &#123;</span><br><span class="line">   value := s.Get(key, clear)</span><br><span class="line">   <span class="keyword">return</span> value == answer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现与<code>captcha</code>中的逻辑基本一致，最后再把这些函数封装到一个功能完善的包中</p><p><code>pkg/verifycode/verifycode.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> verifycode</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;go-api-practice/helpers&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/app&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/config&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/logger&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/redis&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/sms&quot;</span></span><br><span class="line">   <span class="string">&quot;strings&quot;</span></span><br><span class="line">   <span class="string">&quot;sync&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> VerifyCode <span class="keyword">struct</span> &#123;</span><br><span class="line">   Store Store</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> once sync.Once</span><br><span class="line"><span class="keyword">var</span> internalVerifyCode *VerifyCode</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewVerifyCode</span><span class="params">()</span></span> *VerifyCode &#123;</span><br><span class="line">   once.Do(<span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">      internalVerifyCode = &amp;VerifyCode&#123;</span><br><span class="line">         Store: &amp;RedisStore&#123;</span><br><span class="line">            RedisClient: redis.Redis,</span><br><span class="line">            keyPrefix:   config.GetString(<span class="string">&quot;app.name&quot;</span>) + <span class="string">&quot;:verifycode:&quot;</span>,</span><br><span class="line">         &#125;,</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="keyword">return</span> internalVerifyCode</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(vc *VerifyCode)</span></span> SendSMS(phone <span class="type">string</span>) <span class="type">bool</span> &#123;</span><br><span class="line">   code := vc.generateVerifyCode(phone)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> !app.IsProduction() &amp;&amp; strings.HasPrefix(phone, config.GetString(<span class="string">&quot;verifycode.debug_phone_prefix&quot;</span>)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> sms.NewSMS().Send(phone, sms.Message&#123;</span><br><span class="line">      Template: config.GetString(<span class="string">&quot;sms.aliyun.template_code&quot;</span>),</span><br><span class="line">      Data: <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;code&quot;</span>: code,</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(vc *VerifyCode)</span></span> CheckAnswer(key <span class="type">string</span>, answer <span class="type">string</span>) <span class="type">bool</span> &#123;</span><br><span class="line">   logger.DebugJSON(<span class="string">&quot;验证码&quot;</span>, <span class="string">&quot;检查验证码&quot;</span>, <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>&#123;key: answer&#125;)</span><br><span class="line">   <span class="keyword">if</span> !app.IsProduction() &amp;&amp;</span><br><span class="line">      (strings.HasSuffix(key, config.GetString(<span class="string">&quot;verifycode.debug_email_suffix&quot;</span>)) ||</span><br><span class="line">         strings.HasPrefix(key, config.GetString(<span class="string">&quot;verifycode.debug_phone_prefix&quot;</span>))) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> vc.Store.Verify(key, answer, <span class="literal">false</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(vc *VerifyCode)</span></span> generateVerifyCode(key <span class="type">string</span>) <span class="type">string</span> &#123;</span><br><span class="line">   code := helpers.RandomNumber(config.GetInt(<span class="string">&quot;verifycode.code_length&quot;</span>))</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> app.IsLocal() &#123;</span><br><span class="line">      code = config.GetString(<span class="string">&quot;verifycode.debug_code&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   logger.DebugJSON(<span class="string">&quot;验证码&quot;</span>, <span class="string">&quot;生成验证码&quot;</span>, <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>&#123;key: code&#125;)</span><br><span class="line"></span><br><span class="line">   vc.Store.Set(key, code)</span><br><span class="line">   <span class="keyword">return</span> code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> !app.IsProduction() &amp;&amp;</span><br><span class="line">(strings.HasSuffix(key, config.GetString(<span class="string">&quot;verifycode.debug_email_suffix&quot;</span>)) ||</span><br><span class="line"> strings.HasPrefix(key, config.GetString(<span class="string">&quot;verifycode.debug_phone_prefix&quot;</span>))) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与前面验证<code>captcha</code>类似，这里我们对于特殊的邮箱和手机号，我们直接放行</p><h2 id="验证captcha验证码"><a class="markdownIt-Anchor" href="#验证captcha验证码"></a> 验证captcha验证码</h2><p>刚刚我们已经提过了，我们除了验证手机验证码，还要验证<code>captcha</code>验证码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">   <span class="string">&quot;github.com/thedevsaddam/govalidator&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/captcha&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> VerifyCodePhoneRequest <span class="keyword">struct</span> &#123;</span><br><span class="line">   CaptchaID     <span class="type">string</span> <span class="string">`json:&quot;captcha_id,omitempty&quot; valid:&quot;captcha_id&quot;`</span></span><br><span class="line">   CaptchaAnswer <span class="type">string</span> <span class="string">`json:&quot;captcha_answer,omitempty&quot; valid:&quot;captcha_answer&quot;`</span></span><br><span class="line"></span><br><span class="line">   Phone <span class="type">string</span> <span class="string">`json:&quot;phone,omitempty&quot; valid:&quot;phone&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">VerifyCodePhone</span><span class="params">(data <span class="keyword">interface</span>&#123;&#125;, c *gin.Context)</span></span> <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span> &#123;</span><br><span class="line">   rules := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;captcha_id&quot;</span>:     []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;captcha_answer&quot;</span>: []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;digits:6&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;phone&quot;</span>:          []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;digits:11&quot;</span>&#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   messages := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;captcha_id&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:请输入验证码&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;captcha_answer&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:请输入验证码&quot;</span>,</span><br><span class="line">         <span class="string">&quot;digits:验证码长度必须是6位&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;phone&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:请输入手机号&quot;</span>,</span><br><span class="line">         <span class="string">&quot;digits:手机号长度必须是11位&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;</span><br><span class="line">   errs := validate(data, rules, messages)</span><br><span class="line"></span><br><span class="line">   _data := data.(*VerifyCodePhoneRequest)</span><br><span class="line">   <span class="keyword">if</span> ok := captcha.NewCaptcha().VerifyCaptcha(_data.CaptchaID, _data.CaptchaAnswer); !ok &#123;</span><br><span class="line">      errs[<span class="string">&quot;captcha_answer&quot;</span>] = <span class="built_in">append</span>(errs[<span class="string">&quot;captcha_answer&quot;</span>], <span class="string">&quot;验证码错误&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> errs</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们从前端接受验证码和手机号并且验证它们</p><h2 id="完成控制器"><a class="markdownIt-Anchor" href="#完成控制器"></a> 完成控制器</h2><p>在我们完成之前的工具包之后，控制器就变得简洁了</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(vc *VerifyCodeController)</span></span> SendUsingPhone(c *gin.Context) &#123;</span><br><span class="line">   request := requests.VerifyCodePhoneRequest&#123;&#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> ok := requests.Validate(c, &amp;request, requests.VerifyCodePhone); !ok &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> ok := verifycode.NewVerifyCode().SendSMS(request.Phone); !ok &#123;</span><br><span class="line">      response.Abort500(c, <span class="string">&quot;发送失败&quot;</span>)</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      response.Success(c)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后我们在路由中注册</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vcc := <span class="built_in">new</span>(auth.VerifyCodeController)</span><br><span class="line">authGroup.POST(<span class="string">&quot;/verify-codes/captcha&quot;</span>, vcc.ShowCaptcha)</span><br><span class="line">authGroup.POST(<span class="string">&quot;/verify-codes/phone&quot;</span>, vcc.SendUsingPhone)</span><br></pre></td></tr></table></figure><h2 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h2><p>我们在apifox中创建接口，看看短信能否发送成功</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220902140331279.png" alt="" /></p><p>成功结果如下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220902140538586.png" alt="" /></p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(十)统一返回格式</title>
      <link href="/2022/09/08/go-api-practice-10/"/>
      <url>/2022/09/08/go-api-practice-10/</url>
      
        <content type="html"><![CDATA[<h1 id="新建response包封装返回内容"><a class="markdownIt-Anchor" href="#新建response包封装返回内容"></a> 新建response包封装返回内容</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> response</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/logger&quot;</span></span><br><span class="line">   <span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line">   <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">JSON</span><span class="params">(c *gin.Context, data <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">   c.JSON(http.StatusOK, data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Success</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">   JSON(c, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;success&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;message&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Data</span><span class="params">(c *gin.Context, data <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">   JSON(c, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;success&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;data&quot;</span>:    data,</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Created</span><span class="params">(c *gin.Context, data <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">   c.JSON(http.StatusCreated, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;success&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;data&quot;</span>:    data,</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CreatedJSON</span><span class="params">(c *gin.Context, data <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">   c.JSON(http.StatusCreated, data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Abort404</span><span class="params">(c *gin.Context, msg ...<span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   c.AbortWithStatusJSON(http.StatusNotFound, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;message&quot;</span>: defaultMessage(<span class="string">&quot;Not Found&quot;</span>, msg...),</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Abort403</span><span class="params">(c *gin.Context, msg ...<span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   c.AbortWithStatusJSON(http.StatusForbidden, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;message&quot;</span>: defaultMessage(<span class="string">&quot;Forbidden&quot;</span>, msg...),</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Abort500</span><span class="params">(c *gin.Context, msg ...<span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   c.AbortWithStatusJSON(http.StatusInternalServerError, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;message&quot;</span>: defaultMessage(<span class="string">&quot;Internal Server Error&quot;</span>, msg...),</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BadRequest</span><span class="params">(c *gin.Context, err <span class="type">error</span>, msg ...<span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   logger.LogIf(err)</span><br><span class="line">   c.AbortWithStatusJSON(http.StatusBadRequest, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;message&quot;</span>: defaultMessage(<span class="string">&quot;Bad Request&quot;</span>, msg...),</span><br><span class="line">      <span class="string">&quot;error&quot;</span>:   err.Error(),</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Error</span><span class="params">(c *gin.Context, err <span class="type">error</span>, msg ...<span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   logger.LogIf(err)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> err == gorm.ErrRecordNotFound &#123;</span><br><span class="line">      Abort404(c)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line">   c.AbortWithStatusJSON(http.StatusUnprocessableEntity, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;message&quot;</span>: defaultMessage(<span class="string">&quot;Internal Server Error&quot;</span>, msg...),</span><br><span class="line">      <span class="string">&quot;error&quot;</span>:   err.Error(),</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ValidationError</span><span class="params">(c *gin.Context, errors <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   c.AbortWithStatusJSON(http.StatusUnprocessableEntity, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Validation Error&quot;</span>,</span><br><span class="line">      <span class="string">&quot;errors&quot;</span>:  errors,</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Unauthorized</span><span class="params">(c *gin.Context, msg ...<span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   c.AbortWithStatusJSON(http.StatusUnauthorized, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;message&quot;</span>: defaultMessage(<span class="string">&quot;Unauthorized&quot;</span>, msg...),</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">defaultMessage</span><span class="params">(defaultMsg <span class="type">string</span>, msg ...<span class="type">string</span>)</span></span> (message <span class="type">string</span>) &#123;</span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(msg) == <span class="number">0</span> &#123;</span><br><span class="line">      message = defaultMsg</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      message = msg[<span class="number">0</span>]</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，我们再把前面的返回内容改成新的函数，这一部分就作为课后内容由你们自己完成(不修改也不会影响正常使用)</p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(九)使用redis和captcha</title>
      <link href="/2022/09/08/go-api-practice-9/"/>
      <url>/2022/09/08/go-api-practice-9/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前的准备"><a class="markdownIt-Anchor" href="#开始前的准备"></a> 开始前的准备</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get github.com/go-redis/redis/v8</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get github.com/mojocn/base64Captcha</span></span><br></pre></td></tr></table></figure><h1 id="开始编码"><a class="markdownIt-Anchor" href="#开始编码"></a> 开始编码</h1><h2 id="redis包"><a class="markdownIt-Anchor" href="#redis包"></a> redis包</h2><p><code>pkg/redis/redis.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> redis</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;context&quot;</span></span><br><span class="line">   <span class="string">&quot;github.com/go-redis/redis/v8&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/logger&quot;</span></span><br><span class="line">   <span class="string">&quot;sync&quot;</span></span><br><span class="line">   <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> RedisClient <span class="keyword">struct</span> &#123;</span><br><span class="line">   Client  *redis.Client</span><br><span class="line">   Context context.Context</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> once sync.Once </span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Redis *RedisClient</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ConnectRedis</span><span class="params">(address <span class="type">string</span>, username <span class="type">string</span>, password <span class="type">string</span>, db <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">   once.Do(<span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;<span class="comment">//确保函数只会被执行一次</span></span><br><span class="line">      Redis = NewClient(address, username, password, db)</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewClient</span><span class="params">(address <span class="type">string</span>, username <span class="type">string</span>, password <span class="type">string</span>, db <span class="type">int</span>)</span></span> *RedisClient &#123;</span><br><span class="line">   rds := &amp;RedisClient&#123;&#125;</span><br><span class="line">   rds.Context = context.Background()</span><br><span class="line">   rds.Client = redis.NewClient(&amp;redis.Options&#123;</span><br><span class="line">      Addr:     address,</span><br><span class="line">      Username: username,</span><br><span class="line">      Password: password,</span><br><span class="line">      DB:       db,</span><br><span class="line">   &#125;)</span><br><span class="line">   err := rds.Ping()</span><br><span class="line">   logger.LogIf(err)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> rds</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rds RedisClient)</span></span> Ping() <span class="type">error</span> &#123;</span><br><span class="line">   _, err := rds.Client.Ping(rds.Context).Result()</span><br><span class="line">   <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rds RedisClient)</span></span> Set(key <span class="type">string</span>, value <span class="keyword">interface</span>&#123;&#125;, expiration time.Duration) <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">if</span> err := rds.Client.Set(rds.Context, key, value, expiration).Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      logger.LogIf(err)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rds RedisClient)</span></span> Get(key <span class="type">string</span>) <span class="type">string</span> &#123;</span><br><span class="line">   result, err := rds.Client.Get(rds.Context, key).Result()</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> err != redis.Nil &#123;</span><br><span class="line">         logger.ErrorString(<span class="string">&quot;Redis&quot;</span>, <span class="string">&quot;Get&quot;</span>, err.Error())</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rds RedisClient)</span></span> Del(key ...<span class="type">string</span>) <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">if</span> err := rds.Client.Del(rds.Context, key...).Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      logger.ErrorString(<span class="string">&quot;Redis&quot;</span>, <span class="string">&quot;Del&quot;</span>, err.Error())</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rds RedisClient)</span></span> Has(key <span class="type">string</span>) <span class="type">bool</span> &#123;</span><br><span class="line">   _, err := rds.Client.Get(rds.Context, key).Result()</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> err != redis.Nil &#123;</span><br><span class="line">         logger.ErrorString(<span class="string">&quot;Redis&quot;</span>, <span class="string">&quot;Has&quot;</span>, err.Error())</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rds RedisClient)</span></span> FlushDB() <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">if</span> err := rds.Client.FlushDB(rds.Context).Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      logger.ErrorString(<span class="string">&quot;Redis&quot;</span>, <span class="string">&quot;FlushDB&quot;</span>, err.Error())</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rds RedisClient)</span></span> Increment(parameters ...<span class="keyword">interface</span>&#123;&#125;) <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">switch</span> <span class="built_in">len</span>(parameters) &#123;</span><br><span class="line">   <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      key := parameters[<span class="number">0</span>].(<span class="type">string</span>)</span><br><span class="line">      <span class="keyword">if</span> err := rds.Client.Incr(rds.Context, key).Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">         logger.ErrorString(<span class="string">&quot;Redis&quot;</span>, <span class="string">&quot;Increment&quot;</span>, err.Error())</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">   <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      key := parameters[<span class="number">0</span>].(<span class="type">string</span>)</span><br><span class="line">      value := parameters[<span class="number">1</span>].(<span class="type">int64</span>)</span><br><span class="line">      <span class="keyword">if</span> err := rds.Client.IncrBy(rds.Context, key, value).Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">         logger.ErrorString(<span class="string">&quot;Redis&quot;</span>, <span class="string">&quot;Increment&quot;</span>, err.Error())</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">   <span class="keyword">default</span>:</span><br><span class="line">      logger.ErrorString(<span class="string">&quot;Redis&quot;</span>, <span class="string">&quot;Increment&quot;</span>, <span class="string">&quot;parameters error&quot;</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rds RedisClient)</span></span> Decrement(parameters ...<span class="keyword">interface</span>&#123;&#125;) <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">switch</span> <span class="built_in">len</span>(parameters) &#123;</span><br><span class="line">   <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      key := parameters[<span class="number">0</span>].(<span class="type">string</span>)</span><br><span class="line">      <span class="keyword">if</span> err := rds.Client.Decr(rds.Context, key).Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">         logger.ErrorString(<span class="string">&quot;Redis&quot;</span>, <span class="string">&quot;Decrement&quot;</span>, err.Error())</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">   <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      key := parameters[<span class="number">0</span>].(<span class="type">string</span>)</span><br><span class="line">      value := parameters[<span class="number">1</span>].(<span class="type">int64</span>)</span><br><span class="line">      <span class="keyword">if</span> err := rds.Client.DecrBy(rds.Context, key, value).Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">         logger.ErrorString(<span class="string">&quot;Redis&quot;</span>, <span class="string">&quot;Decrement&quot;</span>, err.Error())</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">   <span class="keyword">default</span>:</span><br><span class="line">      logger.ErrorString(<span class="string">&quot;Redis&quot;</span>, <span class="string">&quot;Decrement&quot;</span>, <span class="string">&quot;parameters error&quot;</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们对redis包中的redis函数进行了封装并且添加了日志</p><h2 id="redis的配置"><a class="markdownIt-Anchor" href="#redis的配置"></a> redis的配置</h2><p><code>config/redis.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> config</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;go-api-practice/pkg/config&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">   config.Add(<span class="string">&quot;redis&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"></span><br><span class="line">         <span class="string">&quot;host&quot;</span>:     config.Env(<span class="string">&quot;REDIS_HOST&quot;</span>, <span class="string">&quot;127.0.0.1&quot;</span>),</span><br><span class="line">         <span class="string">&quot;port&quot;</span>:     config.Env(<span class="string">&quot;REDIS_PORT&quot;</span>, <span class="string">&quot;6379&quot;</span>),</span><br><span class="line">         <span class="string">&quot;password&quot;</span>: config.Env(<span class="string">&quot;REDIS_PASSWORD&quot;</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 业务类存储使用 1 (图片验证码、短信验证码、会话)</span></span><br><span class="line">         <span class="string">&quot;database&quot;</span>: config.Env(<span class="string">&quot;REDIS_MAIN_DB&quot;</span>, <span class="number">1</span>),</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="captcha包"><a class="markdownIt-Anchor" href="#captcha包"></a> captcha包</h2><p>base64Captcha内置了一个内存储存，但是这并不方便，我们用redis实现它的储存接口，先完成captcha包，然后再实现接口</p><p><code>pkg/captcha/captcha.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> captcha</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;github.com/mojocn/base64Captcha&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/app&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/config&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/redis&quot;</span></span><br><span class="line">   <span class="string">&quot;sync&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Captcha <span class="keyword">struct</span> &#123;</span><br><span class="line">   Base64Captcha *base64Captcha.Captcha</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> once sync.Once</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> internalCaptcha *Captcha</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewCaptcha</span><span class="params">()</span></span> *Captcha &#123;</span><br><span class="line">   once.Do(<span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">      internalCaptcha = &amp;Captcha&#123;&#125;</span><br><span class="line"></span><br><span class="line">      store := RedisStore&#123;</span><br><span class="line">         RedisClient: redis.Redis,</span><br><span class="line">         KeyPrefix:   config.GetString(<span class="string">&quot;app.name&quot;</span>) + <span class="string">&quot;:captcha:&quot;</span>,</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 配置 base64Captcha 驱动信息</span></span><br><span class="line">      driver := base64Captcha.NewDriverDigit(</span><br><span class="line">         config.GetInt(<span class="string">&quot;captcha.height&quot;</span>),      <span class="comment">// 宽</span></span><br><span class="line">         config.GetInt(<span class="string">&quot;captcha.width&quot;</span>),       <span class="comment">// 高</span></span><br><span class="line">         config.GetInt(<span class="string">&quot;captcha.length&quot;</span>),      <span class="comment">// 长度</span></span><br><span class="line">         config.GetFloat64(<span class="string">&quot;captcha.maxskew&quot;</span>), <span class="comment">// 数字的最大倾斜角度</span></span><br><span class="line">         config.GetInt(<span class="string">&quot;captcha.dotcount&quot;</span>),    <span class="comment">// 图片背景里的混淆点数量</span></span><br><span class="line">      )</span><br><span class="line"></span><br><span class="line">      internalCaptcha.Base64Captcha = base64Captcha.NewCaptcha(driver, &amp;store)</span><br><span class="line">   &#125;)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> internalCaptcha</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Captcha)</span></span> GenerateCaptcha() (<span class="type">string</span>, <span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> c.Base64Captcha.Generate()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// VerifyCaptcha 验证验证码是否正确</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Captcha)</span></span> VerifyCaptcha(id <span class="type">string</span>, answer <span class="type">string</span>) (match <span class="type">bool</span>) &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 方便本地和 API 自动测试</span></span><br><span class="line">   <span class="keyword">if</span> !app.IsProduction() &amp;&amp; id == config.GetString(<span class="string">&quot;captcha.testing_key&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 第三个参数是验证后是否删除，我们选择 false</span></span><br><span class="line">   <span class="comment">// 这样方便用户多次提交，防止表单提交错误需要多次输入图片验证码</span></span><br><span class="line">   <span class="keyword">return</span> c.Base64Captcha.Verify(id, answer, <span class="literal">false</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来要去实现captcha的储存接口，我们先来看看这个接口的内容</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewCaptcha</span><span class="params">(driver Driver, store Store)</span></span> *Captcha &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;Captcha&#123;Driver: driver, Store: store&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Store <span class="keyword">interface</span> &#123;</span><br><span class="line"><span class="comment">// Set sets the digits for the captcha id.</span></span><br><span class="line">Set(id <span class="type">string</span>, value <span class="type">string</span>) <span class="type">error</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Get returns stored digits for the captcha id. Clear indicates</span></span><br><span class="line"><span class="comment">// whether the captcha must be deleted from the store.</span></span><br><span class="line">Get(id <span class="type">string</span>, clear <span class="type">bool</span>) <span class="type">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Verify captcha&#x27;s answer directly</span></span><br><span class="line">Verify(id, answer <span class="type">string</span>, clear <span class="type">bool</span>) <span class="type">bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，我们需要实现三个函数</p><p><code>pkg/captcha/store_redis.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> captcha</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;errors&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/redis&quot;</span></span><br><span class="line"></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/app&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/config&quot;</span></span><br><span class="line">   <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> RedisStore <span class="keyword">struct</span> &#123;</span><br><span class="line">   RedisClient *redis.RedisClient</span><br><span class="line">   KeyPrefix   <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *RedisStore)</span></span> Set(key <span class="type">string</span>, value <span class="type">string</span>) <span class="type">error</span> &#123;</span><br><span class="line">   ExpireTime := time.Minute * time.Duration(config.GetInt64(<span class="string">&quot;captcha.expire_time&quot;</span>))</span><br><span class="line">   <span class="keyword">if</span> app.IsLocal() &#123;</span><br><span class="line">      ExpireTime = time.Minute * time.Duration(config.GetInt64(<span class="string">&quot;captcha.debug_expire_time&quot;</span>))</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> ok := s.RedisClient.Set(s.KeyPrefix+key, value, ExpireTime); !ok &#123;</span><br><span class="line">      <span class="keyword">return</span> errors.New(<span class="string">&quot;无法存储图片验证码答案&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *RedisStore)</span></span> Get(key <span class="type">string</span>, clear <span class="type">bool</span>) <span class="type">string</span> &#123;</span><br><span class="line">   key = s.KeyPrefix + key</span><br><span class="line">   val := s.RedisClient.Get(key)</span><br><span class="line">   <span class="keyword">if</span> clear &#123;</span><br><span class="line">      s.RedisClient.Del(key)</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> val</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *RedisStore)</span></span> Verify(key, answer <span class="type">string</span>, clear <span class="type">bool</span>) <span class="type">bool</span> &#123;</span><br><span class="line">   v := s.Get(key, clear)</span><br><span class="line">   <span class="keyword">return</span> v == answer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们添加了一个前缀key来提高安全性</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方便本地和 API 自动测试</span></span><br><span class="line"><span class="keyword">if</span> !app.IsProduction() &amp;&amp; id == config.GetString(<span class="string">&quot;captcha.testing_key&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们在API的测试过程中来回输入验证码不太方便，所以对于API测试，我们可以让它直接通过</p><h2 id="captcha配置"><a class="markdownIt-Anchor" href="#captcha配置"></a> captcha配置</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> config</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;go-api-practice/pkg/config&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">   config.Add(<span class="string">&quot;captcha&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 验证码图片高度</span></span><br><span class="line">         <span class="string">&quot;height&quot;</span>: <span class="number">80</span>,</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 验证码图片宽度</span></span><br><span class="line">         <span class="string">&quot;width&quot;</span>: <span class="number">240</span>,</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 验证码的长度</span></span><br><span class="line">         <span class="string">&quot;length&quot;</span>: <span class="number">6</span>,</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 数字的最大倾斜角度</span></span><br><span class="line">         <span class="string">&quot;maxskew&quot;</span>: <span class="number">0.7</span>,</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 图片背景里的混淆点数量</span></span><br><span class="line">         <span class="string">&quot;dotcount&quot;</span>: <span class="number">80</span>,</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 过期时间，单位是分钟</span></span><br><span class="line">         <span class="string">&quot;expire_time&quot;</span>: <span class="number">15</span>,</span><br><span class="line"></span><br><span class="line">         <span class="comment">// debug 模式下的过期时间，方便本地开发调试</span></span><br><span class="line">         <span class="string">&quot;debug_expire_time&quot;</span>: <span class="number">10080</span>,</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 非 production 环境，使用此 key 可跳过验证，方便测试</span></span><br><span class="line">         <span class="string">&quot;testing_key&quot;</span>: <span class="string">&quot;captcha_skip_test&quot;</span>,</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图片验证码接口"><a class="markdownIt-Anchor" href="#图片验证码接口"></a> 图片验证码接口</h2><p><code>app/http/controllers/api/v1/auth/verify_code_controller.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> auth</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">v1 <span class="string">&quot;go-api-practice/app/http/controllers/api/v1&quot;</span></span><br><span class="line"><span class="string">&quot;go-api-practice/app/requests&quot;</span></span><br><span class="line"><span class="string">&quot;go-api-practice/pkg/captcha&quot;</span></span><br><span class="line"><span class="string">&quot;go-api-practice/pkg/logger&quot;</span></span><br><span class="line"><span class="string">&quot;go-api-practice/pkg/response&quot;</span></span><br><span class="line"><span class="string">&quot;go-api-practice/pkg/verifycode&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// VerifyCodeController 用户控制器</span></span><br><span class="line"><span class="keyword">type</span> VerifyCodeController <span class="keyword">struct</span> &#123;</span><br><span class="line">    v1.BaseAPIController</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ShowCaptcha 显示图片验证码</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(vc *VerifyCodeController)</span></span> ShowCaptcha(c *gin.Context) &#123;</span><br><span class="line">    <span class="comment">// 生成验证码</span></span><br><span class="line">    id, b64s, err := captcha.NewCaptcha().GenerateCaptcha()</span><br><span class="line">    <span class="comment">// 记录错误日志，因为验证码是用户的入口，出错时应该记 error 等级的日志</span></span><br><span class="line">    logger.LogIf(err)</span><br><span class="line">    <span class="comment">// 返回给用户</span></span><br><span class="line">    c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">        <span class="string">&quot;captcha_id&quot;</span>:    id,</span><br><span class="line">        <span class="string">&quot;captcha_image&quot;</span>: b64s,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后我们再注册路由既可以了</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 发送验证码</span></span><br><span class="line">vcc := <span class="built_in">new</span>(auth.VerifyCodeController)</span><br><span class="line"><span class="comment">// 图片验证码，需要加限流</span></span><br><span class="line">authGroup.POST(<span class="string">&quot;/verify-codes/captcha&quot;</span>, vcc.ShowCaptcha)</span><br></pre></td></tr></table></figure><h1 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h1><p>在apifox中建立接口</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220902104858480.png" alt="" /></p><p>我们测试一下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220902104946511.png" alt="" /></p><p>我们把生成的base64码转换成图片</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220902105135442.png" alt="" /></p><p>这样图片验证码接口就开发好了</p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(八)在gin和gorm中使用zap</title>
      <link href="/2022/08/28/go-api-practice-8/"/>
      <url>/2022/08/28/go-api-practice-8/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前的准备"><a class="markdownIt-Anchor" href="#开始前的准备"></a> 开始前的准备</h1><h1 id="gin整合zap"><a class="markdownIt-Anchor" href="#gin整合zap"></a> gin整合zap</h1><p>还记得我们在<code>gin</code>中自定义中间件的函数吗，我们将自定义中间件并整合zap来代替原来的中间件</p><p><code>bootstrap/route.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">registerGlobalMiddleware</span><span class="params">(router *gin.Engine)</span></span> &#123;</span><br><span class="line">   router.Use(</span><br><span class="line">      middlewares.Recovery(),</span><br><span class="line">      middlewares.Logger(),</span><br><span class="line">   )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来的内容涉及到的内容很多，只需要理解大概即可，所以这一部分的讲解只会介绍大概的思路。</p><blockquote><p>logger中间件</p></blockquote><p><code>app/http/middlewares/logger.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> middlewares</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;bytes&quot;</span></span><br><span class="line">   <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">   <span class="string">&quot;github.com/spf13/cast&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/helpers&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/logger&quot;</span></span><br><span class="line">   <span class="string">&quot;go.uber.org/zap&quot;</span></span><br><span class="line">   <span class="string">&quot;io&quot;</span></span><br><span class="line">   <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> responseBodyWriter <span class="keyword">struct</span> &#123;</span><br><span class="line">   gin.ResponseWriter</span><br><span class="line">   body *bytes.Buffer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w responseBodyWriter)</span></span> Write(b []<span class="type">byte</span>) (<span class="type">int</span>, <span class="type">error</span>) &#123;</span><br><span class="line">   w.body.Write(b)</span><br><span class="line">   <span class="keyword">return</span> w.ResponseWriter.Write(b)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Logger 记录请求日志</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Logger</span><span class="params">()</span></span> gin.HandlerFunc &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 获取 response 内容</span></span><br><span class="line">      w := &amp;responseBodyWriter&#123;body: &amp;bytes.Buffer&#123;&#125;, ResponseWriter: c.Writer&#125;</span><br><span class="line">      c.Writer = w</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 获取请求数据</span></span><br><span class="line">      <span class="keyword">var</span> requestBody []<span class="type">byte</span></span><br><span class="line">      <span class="keyword">if</span> c.Request.Body != <span class="literal">nil</span> &#123;</span><br><span class="line">         <span class="comment">// c.Request.Body 是一个 buffer 对象，只能读取一次</span></span><br><span class="line">         requestBody, _ = io.ReadAll(c.Request.Body)</span><br><span class="line">         <span class="comment">// 读取后，重新赋值 c.Request.Body ，以供后续的其他操作</span></span><br><span class="line">         c.Request.Body = io.NopCloser(bytes.NewBuffer(requestBody))</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 设置开始时间</span></span><br><span class="line">      start := time.Now()</span><br><span class="line">      c.Next()</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 开始记录日志的逻辑</span></span><br><span class="line">      cost := time.Since(start)</span><br><span class="line">      responStatus := c.Writer.Status()</span><br><span class="line"></span><br><span class="line">      logFields := []zap.Field&#123;</span><br><span class="line">         zap.Int(<span class="string">&quot;status&quot;</span>, responStatus),</span><br><span class="line">         zap.String(<span class="string">&quot;request&quot;</span>, c.Request.Method+<span class="string">&quot; &quot;</span>+c.Request.URL.String()),</span><br><span class="line">         zap.String(<span class="string">&quot;query&quot;</span>, c.Request.URL.RawQuery),</span><br><span class="line">         zap.String(<span class="string">&quot;ip&quot;</span>, c.ClientIP()),</span><br><span class="line">         zap.String(<span class="string">&quot;user-agent&quot;</span>, c.Request.UserAgent()),</span><br><span class="line">         zap.String(<span class="string">&quot;errors&quot;</span>, c.Errors.ByType(gin.ErrorTypePrivate).String()),</span><br><span class="line">         zap.String(<span class="string">&quot;time&quot;</span>, helpers.MicrosecondsStr(cost)),</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> c.Request.Method == <span class="string">&quot;POST&quot;</span> || c.Request.Method == <span class="string">&quot;PUT&quot;</span> || c.Request.Method == <span class="string">&quot;DELETE&quot;</span> &#123;</span><br><span class="line">         <span class="comment">// 请求的内容</span></span><br><span class="line">         logFields = <span class="built_in">append</span>(logFields, zap.String(<span class="string">&quot;Request Body&quot;</span>, <span class="type">string</span>(requestBody)))</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 响应的内容</span></span><br><span class="line">         logFields = <span class="built_in">append</span>(logFields, zap.String(<span class="string">&quot;Response Body&quot;</span>, w.body.String()))</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> responStatus &gt; <span class="number">400</span> &amp;&amp; responStatus &lt;= <span class="number">499</span> &#123;</span><br><span class="line">         <span class="comment">// 除了 StatusBadRequest 以外，warning 提示一下，常见的有 403 404，开发时都要注意</span></span><br><span class="line">         logger.Warn(<span class="string">&quot;HTTP Warning &quot;</span>+cast.ToString(responStatus), logFields...)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> responStatus &gt;= <span class="number">500</span> &amp;&amp; responStatus &lt;= <span class="number">599</span> &#123;</span><br><span class="line">         <span class="comment">// 除了内部错误，记录 error</span></span><br><span class="line">         logger.Error(<span class="string">&quot;HTTP Error &quot;</span>+cast.ToString(responStatus), logFields...)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         logger.Debug(<span class="string">&quot;HTTP Access Log&quot;</span>, logFields...)</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数思路如下：</p><ol><li>读取request.body</li><li>把请求参数封装到<code>zap.Field</code></li><li>根据响应码来打印不同的日志</li></ol><blockquote><p>recovery中间件</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> middlewares</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/logger&quot;</span></span><br><span class="line">   <span class="string">&quot;go.uber.org/zap&quot;</span></span><br><span class="line">   <span class="string">&quot;net&quot;</span></span><br><span class="line">   <span class="string">&quot;net/http&quot;</span></span><br><span class="line">   <span class="string">&quot;net/http/httputil&quot;</span></span><br><span class="line">   <span class="string">&quot;os&quot;</span></span><br><span class="line">   <span class="string">&quot;strings&quot;</span></span><br><span class="line">   <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Recovery 使用 zap.Error() 来记录 Panic 和 call stack</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Recovery</span><span class="params">()</span></span> gin.HandlerFunc &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">      <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">         <span class="keyword">if</span> err := <span class="built_in">recover</span>(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取用户的请求信息</span></span><br><span class="line">            httpRequest, _ := httputil.DumpRequest(c.Request, <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 链接中断，客户端中断连接为正常行为，不需要记录堆栈信息</span></span><br><span class="line">            <span class="keyword">var</span> brokenPipe <span class="type">bool</span></span><br><span class="line">            <span class="keyword">if</span> ne, ok := err.(*net.OpError); ok &#123;</span><br><span class="line">               <span class="keyword">if</span> se, ok := ne.Err.(*os.SyscallError); ok &#123;</span><br><span class="line">                  errStr := strings.ToLower(se.Error())</span><br><span class="line">                  <span class="keyword">if</span> strings.Contains(errStr, <span class="string">&quot;broken pipe&quot;</span>) || strings.Contains(errStr, <span class="string">&quot;connection reset by peer&quot;</span>) &#123;</span><br><span class="line">                     brokenPipe = <span class="literal">true</span></span><br><span class="line">                  &#125;</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 链接中断的情况</span></span><br><span class="line">            <span class="keyword">if</span> brokenPipe &#123;</span><br><span class="line">               logger.Error(c.Request.URL.Path,</span><br><span class="line">                  zap.Time(<span class="string">&quot;time&quot;</span>, time.Now()),</span><br><span class="line">                  zap.Any(<span class="string">&quot;error&quot;</span>, err),</span><br><span class="line">                  zap.String(<span class="string">&quot;request&quot;</span>, <span class="type">string</span>(httpRequest)),</span><br><span class="line">               )</span><br><span class="line">               c.Error(err.(<span class="type">error</span>))</span><br><span class="line">               c.Abort()</span><br><span class="line">               <span class="comment">// 链接已断开，无法写状态码</span></span><br><span class="line">               <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果不是链接中断，就开始记录堆栈信息</span></span><br><span class="line">            logger.Error(<span class="string">&quot;recovery from panic&quot;</span>,</span><br><span class="line">               zap.Time(<span class="string">&quot;time&quot;</span>, time.Now()),               <span class="comment">// 记录时间</span></span><br><span class="line">               zap.Any(<span class="string">&quot;error&quot;</span>, err),                      <span class="comment">// 记录错误信息</span></span><br><span class="line">               zap.String(<span class="string">&quot;request&quot;</span>, <span class="type">string</span>(httpRequest)), <span class="comment">// 请求信息</span></span><br><span class="line">               zap.Stack(<span class="string">&quot;stacktrace&quot;</span>),                    <span class="comment">// 调用堆栈信息</span></span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 返回 500 状态码</span></span><br><span class="line">            c.AbortWithStatusJSON(http.StatusInternalServerError, gin.H&#123;</span><br><span class="line">               <span class="string">&quot;message&quot;</span>: <span class="string">&quot;服务器内部错误，请稍后再试&quot;</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;()</span><br><span class="line">      c.Next()</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里已经有了详解的注释，不做解释了</p><h1 id="gorm整合zap"><a class="markdownIt-Anchor" href="#gorm整合zap"></a> gorm整合zap</h1><p><code>pkg/logger/gorm_logger.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> logger</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;context&quot;</span></span><br><span class="line">   <span class="string">&quot;errors&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/helpers&quot;</span></span><br><span class="line">   <span class="string">&quot;go.uber.org/zap&quot;</span></span><br><span class="line">   <span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line">   gormlogger <span class="string">&quot;gorm.io/gorm/logger&quot;</span></span><br><span class="line">   <span class="string">&quot;path/filepath&quot;</span></span><br><span class="line">   <span class="string">&quot;runtime&quot;</span></span><br><span class="line">   <span class="string">&quot;strings&quot;</span></span><br><span class="line">   <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> GormLogger <span class="keyword">struct</span> &#123;</span><br><span class="line">   ZapLogger     *zap.Logger</span><br><span class="line">   SlowThreshold time.Duration</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewGormLogger</span><span class="params">()</span></span> GormLogger &#123;</span><br><span class="line">   <span class="keyword">return</span> GormLogger&#123;</span><br><span class="line">      ZapLogger:     Logger,</span><br><span class="line">      SlowThreshold: <span class="number">200</span> * time.Millisecond,</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// LogMode 实现 gormlogger.Interface 的 LogMode 方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l GormLogger)</span></span> LogMode(level gormlogger.LogLevel) gormlogger.Interface &#123;</span><br><span class="line">   <span class="keyword">return</span> GormLogger&#123;</span><br><span class="line">      ZapLogger:     l.ZapLogger,</span><br><span class="line">      SlowThreshold: l.SlowThreshold,</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Info 实现 gormlogger.Interface 的 Info 方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l GormLogger)</span></span> Info(ctx context.Context, str <span class="type">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;) &#123;</span><br><span class="line">   l.logger().Sugar().Debugf(str, args...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Warn 实现 gormlogger.Interface 的 Warn 方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l GormLogger)</span></span> Warn(ctx context.Context, str <span class="type">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;) &#123;</span><br><span class="line">   l.logger().Sugar().Warnf(str, args...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Error 实现 gormlogger.Interface 的 Error 方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l GormLogger)</span></span> Error(ctx context.Context, str <span class="type">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;) &#123;</span><br><span class="line">   l.logger().Sugar().Errorf(str, args...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Trace 实现 gormlogger.Interface 的 Trace 方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l GormLogger)</span></span> Trace(ctx context.Context, begin time.Time, fc <span class="function"><span class="keyword">func</span><span class="params">()</span></span> (<span class="type">string</span>, <span class="type">int64</span>), err <span class="type">error</span>) &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 获取运行时间</span></span><br><span class="line">   elapsed := time.Since(begin)</span><br><span class="line">   <span class="comment">// 获取 SQL 请求和返回条数</span></span><br><span class="line">   sql, rows := fc()</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 通用字段</span></span><br><span class="line">   logFields := []zap.Field&#123;</span><br><span class="line">      zap.String(<span class="string">&quot;sql&quot;</span>, sql),</span><br><span class="line">      zap.String(<span class="string">&quot;time&quot;</span>, helpers.MicrosecondsStr(elapsed)),</span><br><span class="line">      zap.Int64(<span class="string">&quot;rows&quot;</span>, rows),</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Gorm 错误</span></span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="comment">// 记录未找到的错误使用 warning 等级</span></span><br><span class="line">      <span class="keyword">if</span> errors.Is(err, gorm.ErrRecordNotFound) &#123;</span><br><span class="line">         l.logger().Warn(<span class="string">&quot;Database ErrRecordNotFound&quot;</span>, logFields...)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="comment">// 其他错误使用 error 等级</span></span><br><span class="line">         logFields = <span class="built_in">append</span>(logFields, zap.Error(err))</span><br><span class="line">         l.logger().Error(<span class="string">&quot;Database Error&quot;</span>, logFields...)</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 慢查询日志</span></span><br><span class="line">   <span class="keyword">if</span> l.SlowThreshold != <span class="number">0</span> &amp;&amp; elapsed &gt; l.SlowThreshold &#123;</span><br><span class="line">      l.logger().Warn(<span class="string">&quot;Database Slow Log&quot;</span>, logFields...)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 记录所有 SQL 请求</span></span><br><span class="line">   l.logger().Debug(<span class="string">&quot;Database Query&quot;</span>, logFields...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// logger 内用的辅助方法，确保 Zap 内置信息 Caller 的准确性（如 paginator/paginator.go:148）</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l GormLogger)</span></span> logger() *zap.Logger &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 跳过 gorm 内置的调用</span></span><br><span class="line">   <span class="keyword">var</span> (</span><br><span class="line">      gormPackage    = filepath.Join(<span class="string">&quot;gorm.io&quot;</span>, <span class="string">&quot;gorm&quot;</span>)</span><br><span class="line">      zapgormPackage = filepath.Join(<span class="string">&quot;moul.io&quot;</span>, <span class="string">&quot;zapgorm2&quot;</span>)</span><br><span class="line">   )</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 减去一次封装，以及一次在 logger 初始化里添加 zap.AddCallerSkip(1)</span></span><br><span class="line">   clone := l.ZapLogger.WithOptions(zap.AddCallerSkip(<span class="number">-2</span>))</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> i := <span class="number">2</span>; i &lt; <span class="number">15</span>; i++ &#123;</span><br><span class="line">      _, file, _, ok := runtime.Caller(i)</span><br><span class="line">      <span class="keyword">switch</span> &#123;</span><br><span class="line">      <span class="keyword">case</span> !ok:</span><br><span class="line">      <span class="keyword">case</span> strings.HasSuffix(file, <span class="string">&quot;_test.go&quot;</span>):</span><br><span class="line">      <span class="keyword">case</span> strings.Contains(file, gormPackage):</span><br><span class="line">      <span class="keyword">case</span> strings.Contains(file, zapgormPackage):</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">         <span class="comment">// 返回一个附带跳过行号的新的 zap logger</span></span><br><span class="line">         <span class="keyword">return</span> clone.WithOptions(zap.AddCallerSkip(i))</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> l.ZapLogger</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里已经有了详解的注释，不做解释了，这一部分内容能看懂多少看多少就行了，不必要在刚开始学习时拘泥于细节，等以后有了更多的经验再来搞懂也不迟</p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(七)集成zap</title>
      <link href="/2022/08/28/go-api-practice-7/"/>
      <url>/2022/08/28/go-api-practice-7/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前的准备"><a class="markdownIt-Anchor" href="#开始前的准备"></a> 开始前的准备</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get go.uber.org/zap</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get gopkg.in/natefinch/lumberjack.v2</span></span><br></pre></td></tr></table></figure><p>这一部分内容我们需要上面两个包的内容，<code>zap</code>是一个功能强大而且完善的日志包，lumberjack则是一个日志分割的包。</p><p>这一部分的内容由于较到了较为全面的个性化配置，所以新内容会比较多，难度上会稍大，但是慢慢来，我们尽可能地梳理这里面的内容😏</p><h1 id="开始编码"><a class="markdownIt-Anchor" href="#开始编码"></a> 开始编码</h1><h2 id="配置文件"><a class="markdownIt-Anchor" href="#配置文件"></a> 配置文件</h2><p>配置的方法与前面的方法类似</p><p><code>config/log.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">   config.Add(<span class="string">&quot;log&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 日志级别，必须是以下这些选项：</span></span><br><span class="line">         <span class="comment">// &quot;debug&quot; —— 信息量大，一般调试时打开。系统模块详细运行的日志，例如 HTTP 请求、数据库请求、发送邮件、发送短信</span></span><br><span class="line">         <span class="comment">// &quot;info&quot; —— 业务级别的运行日志，如用户登录、用户退出、订单撤销。</span></span><br><span class="line">         <span class="comment">// &quot;warn&quot; —— 感兴趣、需要引起关注的信息。 例如，调试时候打印调试信息（命令行输出会有高亮）。</span></span><br><span class="line">         <span class="comment">// &quot;error&quot; —— 记录错误信息。Panic 或者 Error。如数据库连接错误、HTTP 端口被占用等。一般生产环境使用的等级。</span></span><br><span class="line">         <span class="comment">// 以上级别从低到高，level 值设置的级别越高，记录到日志的信息就越少</span></span><br><span class="line">         <span class="comment">// 开发时推荐使用 &quot;debug&quot; 或者 &quot;info&quot; ，生产环境下使用 &quot;error&quot;</span></span><br><span class="line">         <span class="string">&quot;level&quot;</span>: config.Env(<span class="string">&quot;LOG_LEVEL&quot;</span>, <span class="string">&quot;debug&quot;</span>),</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 日志的类型，可选：</span></span><br><span class="line">         <span class="comment">// &quot;single&quot; 独立的文件</span></span><br><span class="line">         <span class="comment">// &quot;daily&quot; 按照日期每日一个</span></span><br><span class="line">         <span class="string">&quot;type&quot;</span>: config.Env(<span class="string">&quot;LOG_TYPE&quot;</span>, <span class="string">&quot;single&quot;</span>),</span><br><span class="line"></span><br><span class="line">         <span class="comment">/* ------------------ 滚动日志配置 ------------------ */</span></span><br><span class="line">         <span class="comment">// 日志文件路径</span></span><br><span class="line">         <span class="string">&quot;filename&quot;</span>: config.Env(<span class="string">&quot;LOG_NAME&quot;</span>, <span class="string">&quot;storage/logs/logs.log&quot;</span>),</span><br><span class="line">         <span class="comment">// 每个日志文件保存的最大尺寸 单位：M</span></span><br><span class="line">         <span class="string">&quot;max_size&quot;</span>: config.Env(<span class="string">&quot;LOG_MAX_SIZE&quot;</span>, <span class="number">64</span>),</span><br><span class="line">         <span class="comment">// 最多保存日志文件数，0 为不限，MaxAge 到了还是会删</span></span><br><span class="line">         <span class="string">&quot;max_backup&quot;</span>: config.Env(<span class="string">&quot;LOG_MAX_BACKUP&quot;</span>, <span class="number">5</span>),</span><br><span class="line">         <span class="comment">// 最多保存多少天，7 表示一周前的日志会被删除，0 表示不删</span></span><br><span class="line">         <span class="string">&quot;max_age&quot;</span>: config.Env(<span class="string">&quot;LOG_MAX_AGE&quot;</span>, <span class="number">30</span>),</span><br><span class="line">         <span class="comment">// 是否压缩，压缩日志不方便查看，我们设置为 false（压缩可节省空间）</span></span><br><span class="line">         <span class="string">&quot;compress&quot;</span>: config.Env(<span class="string">&quot;LOG_COMPRESS&quot;</span>, <span class="literal">false</span>),</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>.env</code></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">.</span></span><br><span class="line"><span class="attr">.</span></span><br><span class="line"><span class="attr">.</span></span><br><span class="line"><span class="attr">LOG_TYPE</span>=<span class="string">daily</span></span><br><span class="line"><span class="attr">LOG_LEVEL</span>=<span class="string">debug</span></span><br></pre></td></tr></table></figure><h2 id="zap工具包"><a class="markdownIt-Anchor" href="#zap工具包"></a> zap工具包</h2><p><code>pkg/app/app.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsLocal</span><span class="params">()</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> config.Get(<span class="string">&quot;app.env&quot;</span>) == <span class="string">&quot;local&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsProduction</span><span class="params">()</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> config.Get(<span class="string">&quot;app.env&quot;</span>) == <span class="string">&quot;production&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsTesting</span><span class="params">()</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> config.Get(<span class="string">&quot;app.env&quot;</span>) == <span class="string">&quot;testing&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>区别本地和生成环境</p><p><code>helpers/helpers.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">MicrosecondsStr</span><span class="params">(elapsed time.Duration)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;%.3fms&quot;</span>, <span class="type">float64</span>(elapsed.Nanoseconds())/<span class="number">1e6</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把时间转换成纳秒，可以对程序的运行时间有比较精细的查看</p><p><code>pkg/logger/logger.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> logger</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">   <span class="string">&quot;fmt&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/app&quot;</span></span><br><span class="line">   <span class="string">&quot;go.uber.org/zap&quot;</span></span><br><span class="line">   <span class="string">&quot;go.uber.org/zap/zapcore&quot;</span></span><br><span class="line">   <span class="string">&quot;gopkg.in/natefinch/lumberjack.v2&quot;</span></span><br><span class="line">   <span class="string">&quot;os&quot;</span></span><br><span class="line">   <span class="string">&quot;strings&quot;</span></span><br><span class="line">   <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Logger *zap.Logger</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitLogger</span><span class="params">(filename <span class="type">string</span>, maxSize, maxBackups, maxAge <span class="type">int</span>, compress <span class="type">bool</span>, logType <span class="type">string</span>, level <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   writeSyncer := getLoggerWriter(filename, maxSize, maxBackups, maxAge, compress, logType)</span><br><span class="line"></span><br><span class="line">   logLevel := <span class="built_in">new</span>(zapcore.Level)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> err := logLevel.UnmarshalText([]<span class="type">byte</span>(level)); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      fmt.Println(<span class="string">&quot;日志级别设置错误&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   core := zapcore.NewCore(getEncoder(), writeSyncer, logLevel)</span><br><span class="line"></span><br><span class="line">   Logger = zap.New(core,</span><br><span class="line">      zap.AddCaller(),</span><br><span class="line">      zap.AddCallerSkip(<span class="number">1</span>),</span><br><span class="line">      zap.AddStacktrace(zap.ErrorLevel))</span><br><span class="line"></span><br><span class="line">   zap.ReplaceGlobals(Logger)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getEncoder</span><span class="params">()</span></span> zapcore.Encoder &#123;</span><br><span class="line">   encoderConfig := zapcore.EncoderConfig&#123;</span><br><span class="line">      TimeKey:        <span class="string">&quot;time&quot;</span>,</span><br><span class="line">      LevelKey:       <span class="string">&quot;level&quot;</span>,</span><br><span class="line">      NameKey:        <span class="string">&quot;logger&quot;</span>,</span><br><span class="line">      CallerKey:      <span class="string">&quot;caller&quot;</span>,</span><br><span class="line">      FunctionKey:    zapcore.OmitKey,</span><br><span class="line">      MessageKey:     <span class="string">&quot;message&quot;</span>,</span><br><span class="line">      StacktraceKey:  <span class="string">&quot;stacktrace&quot;</span>,</span><br><span class="line">      LineEnding:     zapcore.DefaultLineEnding,</span><br><span class="line">      EncodeLevel:    zapcore.CapitalLevelEncoder,</span><br><span class="line">      EncodeTime:     customTimeEncoder,</span><br><span class="line">      EncodeDuration: zapcore.SecondsDurationEncoder,</span><br><span class="line">      EncodeCaller:   zapcore.ShortCallerEncoder,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> app.IsLocal() &#123;</span><br><span class="line">      encoderConfig.EncodeLevel = zapcore.CapitalLevelEncoder</span><br><span class="line">      <span class="keyword">return</span> zapcore.NewConsoleEncoder(encoderConfig)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> zapcore.NewJSONEncoder(encoderConfig)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">customTimeEncoder</span><span class="params">(t time.Time, enc zapcore.PrimitiveArrayEncoder)</span></span> &#123;</span><br><span class="line">   enc.AppendString(t.Format(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getLoggerWriter</span><span class="params">(filename <span class="type">string</span>, maxSize, maxBackups, maxAge <span class="type">int</span>, compress <span class="type">bool</span>, logType <span class="type">string</span>)</span></span> zapcore.WriteSyncer &#123;</span><br><span class="line">   <span class="keyword">if</span> logType == <span class="string">&quot;daily&quot;</span> &#123;</span><br><span class="line">      logname := time.Now().Format(<span class="string">&quot;2006-01-02.log&quot;</span>)</span><br><span class="line">      filename = strings.ReplaceAll(filename, <span class="string">&quot;logs.log&quot;</span>, logname)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   lumberJackLogger := &amp;lumberjack.Logger&#123;</span><br><span class="line">      Filename:   filename,</span><br><span class="line">      MaxSize:    maxSize,</span><br><span class="line">      MaxBackups: maxBackups,</span><br><span class="line">      MaxAge:     maxAge,</span><br><span class="line">      Compress:   compress,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> app.IsLocal() &#123;</span><br><span class="line">      <span class="keyword">return</span> zapcore.NewMultiWriteSyncer(zapcore.AddSync(os.Stdout), zapcore.AddSync(lumberJackLogger))</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> zapcore.AddSync(lumberJackLogger)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Dump 调试专用，不会中断程序，会在终端打印出 warning 消息。</span></span><br><span class="line"><span class="comment">// 第一个参数会使用 json.Marshal 进行渲染，第二个参数消息（可选）</span></span><br><span class="line"><span class="comment">//         logger.Dump(user.User&#123;Name:&quot;test&quot;&#125;)</span></span><br><span class="line"><span class="comment">//         logger.Dump(user.User&#123;Name:&quot;test&quot;&#125;, &quot;用户信息&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Dump</span><span class="params">(value <span class="keyword">interface</span>&#123;&#125;, msg ...<span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   valueString := jsonString(value)</span><br><span class="line">   <span class="comment">// 判断第二个参数是否传参 msg</span></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(msg) &gt; <span class="number">0</span> &#123;</span><br><span class="line">      Logger.Warn(<span class="string">&quot;Dump&quot;</span>, zap.String(msg[<span class="number">0</span>], valueString))</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Logger.Warn(<span class="string">&quot;Dump&quot;</span>, zap.String(<span class="string">&quot;data&quot;</span>, valueString))</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// LogIf 当 err != nil 时记录 error 等级的日志</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LogIf</span><span class="params">(err <span class="type">error</span>)</span></span> &#123;</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      Logger.Error(<span class="string">&quot;Error Occurred:&quot;</span>, zap.Error(err))</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// LogWarnIf 当 err != nil 时记录 warning 等级的日志</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LogWarnIf</span><span class="params">(err <span class="type">error</span>)</span></span> &#123;</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      Logger.Warn(<span class="string">&quot;Error Occurred:&quot;</span>, zap.Error(err))</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// LogInfoIf 当 err != nil 时记录 info 等级的日志</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LogInfoIf</span><span class="params">(err <span class="type">error</span>)</span></span> &#123;</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      Logger.Info(<span class="string">&quot;Error Occurred:&quot;</span>, zap.Error(err))</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Debug 调试日志，详尽的程序日志</span></span><br><span class="line"><span class="comment">// 调用示例：</span></span><br><span class="line"><span class="comment">//        logger.Debug(&quot;Database&quot;, zap.String(&quot;sql&quot;, sql))</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Debug</span><span class="params">(moduleName <span class="type">string</span>, fields ...zap.Field)</span></span> &#123;</span><br><span class="line">   Logger.Debug(moduleName, fields...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Info 告知类日志</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Info</span><span class="params">(moduleName <span class="type">string</span>, fields ...zap.Field)</span></span> &#123;</span><br><span class="line">   Logger.Info(moduleName, fields...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Warn 警告类</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Warn</span><span class="params">(moduleName <span class="type">string</span>, fields ...zap.Field)</span></span> &#123;</span><br><span class="line">   Logger.Warn(moduleName, fields...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Error 错误时记录，不应该中断程序，查看日志时重点关注</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Error</span><span class="params">(moduleName <span class="type">string</span>, fields ...zap.Field)</span></span> &#123;</span><br><span class="line">   Logger.Error(moduleName, fields...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fatal 级别同 Error(), 写完 log 后调用 os.Exit(1) 退出程序</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Fatal</span><span class="params">(moduleName <span class="type">string</span>, fields ...zap.Field)</span></span> &#123;</span><br><span class="line">   Logger.Fatal(moduleName, fields...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DebugString 记录一条字符串类型的 debug 日志，调用示例：</span></span><br><span class="line"><span class="comment">//         logger.DebugString(&quot;SMS&quot;, &quot;短信内容&quot;, string(result.RawResponse))</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">DebugString</span><span class="params">(moduleName, name, msg <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   Logger.Debug(moduleName, zap.String(name, msg))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InfoString</span><span class="params">(moduleName, name, msg <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   Logger.Info(moduleName, zap.String(name, msg))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WarnString</span><span class="params">(moduleName, name, msg <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   Logger.Warn(moduleName, zap.String(name, msg))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ErrorString</span><span class="params">(moduleName, name, msg <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   Logger.Error(moduleName, zap.String(name, msg))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">FatalString</span><span class="params">(moduleName, name, msg <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   Logger.Fatal(moduleName, zap.String(name, msg))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DebugJSON 记录对象类型的 debug 日志，使用 json.Marshal 进行编码。调用示例：</span></span><br><span class="line"><span class="comment">//         logger.DebugJSON(&quot;Auth&quot;, &quot;读取登录用户&quot;, auth.CurrentUser())</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">DebugJSON</span><span class="params">(moduleName, name <span class="type">string</span>, value <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">   Logger.Debug(moduleName, zap.String(name, jsonString(value)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InfoJSON</span><span class="params">(moduleName, name <span class="type">string</span>, value <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">   Logger.Info(moduleName, zap.String(name, jsonString(value)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WarnJSON</span><span class="params">(moduleName, name <span class="type">string</span>, value <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">   Logger.Warn(moduleName, zap.String(name, jsonString(value)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ErrorJSON</span><span class="params">(moduleName, name <span class="type">string</span>, value <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">   Logger.Error(moduleName, zap.String(name, jsonString(value)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">FatalJSON</span><span class="params">(moduleName, name <span class="type">string</span>, value <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">   Logger.Fatal(moduleName, zap.String(name, jsonString(value)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">jsonString</span><span class="params">(value <span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">   b, err := json.Marshal(value)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      Logger.Error(<span class="string">&quot;Logger&quot;</span>, zap.String(<span class="string">&quot;JSON marshal error&quot;</span>, err.Error()))</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="type">string</span>(b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码分成两部分，第一部分是zap的初始化，后一部分是对zap方法的封装来用于多种场景</p><h3 id="zap的初始化"><a class="markdownIt-Anchor" href="#zap的初始化"></a> zap的初始化</h3><p>内容有点多😇，慢慢解析<code>initLogger()</code></p><blockquote><p>函数参数</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">filename:日志文件生成的位置</span><br><span class="line">maxSize:每个日志文件的最大大小</span><br><span class="line">maxBackups:保存日志文件的最大数量</span><br><span class="line">maxAge:保存每个日志文件的最长时间</span><br><span class="line">compress:是否压缩日志文件,会变成压缩文件</span><br><span class="line">logType:有&quot;daily&quot;和&quot;single&quot;两个选项，&quot;daily&quot;表示每天生成一个日志文件,&quot;single&quot;表示全部日志集中在一个文件中</span><br><span class="line">level:打印的日志文件级别</span><br></pre></td></tr></table></figure><blockquote><p>getLoggerWriter</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> logType == <span class="string">&quot;daily&quot;</span> &#123;</span><br><span class="line">   logname := time.Now().Format(<span class="string">&quot;2006-01-02.log&quot;</span>)</span><br><span class="line">   filename = strings.ReplaceAll(filename, <span class="string">&quot;logs.log&quot;</span>, logname)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原来默认生成的日志是一个日志文件<code>logs.log</code>，如果我们设置日志的种类是<code>daily</code>，那么就重新设置文件的位置和名称</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lumberJackLogger := &amp;lumberjack.Logger&#123;</span><br><span class="line">   Filename:   filename,</span><br><span class="line">   MaxSize:    maxSize,</span><br><span class="line">   MaxBackups: maxBackups,</span><br><span class="line">   MaxAge:     maxAge,</span><br><span class="line">   Compress:   compress,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化<code>lumberjack</code></p><blockquote><p>zap.AddSync</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> app.IsLocal() &#123;</span><br><span class="line">   <span class="keyword">return</span> zapcore.NewMultiWriteSyncer(zapcore.AddSync(os.Stdout), zapcore.AddSync(lumberJackLogger))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> zapcore.AddSync(lumberJackLogger)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加日志的输出流，如果是在本地，我们要求在本地和日志文件中同时打印，生成环境只需要打印在日志文件中就可以了</p><blockquote><p>获取日志等级</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">logLevel := <span class="built_in">new</span>(zapcore.Level)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := logLevel.UnmarshalText([]<span class="type">byte</span>(level)); err != <span class="literal">nil</span> &#123;</span><br><span class="line">   fmt.Println(<span class="string">&quot;日志级别设置错误&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们来看看这个方法可以解析哪些等级</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *Level)</span></span> UnmarshalText(text []<span class="type">byte</span>) <span class="type">error</span> &#123;</span><br><span class="line">   <span class="keyword">if</span> l == <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> errUnmarshalNilLevel</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> !l.unmarshalText(text) &amp;&amp; !l.unmarshalText(bytes.ToLower(text)) &#123;</span><br><span class="line">      <span class="keyword">return</span> fmt.Errorf(<span class="string">&quot;unrecognized level: %q&quot;</span>, text)</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *Level)</span></span> unmarshalText(text []<span class="type">byte</span>) <span class="type">bool</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> <span class="type">string</span>(text) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;debug&quot;</span>, <span class="string">&quot;DEBUG&quot;</span>:</span><br><span class="line">*l = DebugLevel</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;info&quot;</span>, <span class="string">&quot;INFO&quot;</span>, <span class="string">&quot;&quot;</span>: <span class="comment">// make the zero value useful</span></span><br><span class="line">*l = InfoLevel</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;warn&quot;</span>, <span class="string">&quot;WARN&quot;</span>:</span><br><span class="line">*l = WarnLevel</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;error&quot;</span>, <span class="string">&quot;ERROR&quot;</span>:</span><br><span class="line">*l = ErrorLevel</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;dpanic&quot;</span>, <span class="string">&quot;DPANIC&quot;</span>:</span><br><span class="line">*l = DPanicLevel</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;panic&quot;</span>, <span class="string">&quot;PANIC&quot;</span>:</span><br><span class="line">*l = PanicLevel</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;fatal&quot;</span>, <span class="string">&quot;FATAL&quot;</span>:</span><br><span class="line">*l = FatalLevel</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解析的等级包括了<code>debug</code>， <code>info</code>，<code>warn</code>等，解析过程中发现它会把字符串都变成小写，所以我们输入时不必关心大小写</p><blockquote><p>zapcore.NewCore()</p></blockquote><p>初始化<code>zap.Core</code></p><blockquote><p>getEncoder()</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getEncoder</span><span class="params">()</span></span> zapcore.Encoder &#123;</span><br><span class="line">   encoderConfig := zapcore.EncoderConfig&#123;</span><br><span class="line">      TimeKey:        <span class="string">&quot;time&quot;</span>,</span><br><span class="line">      LevelKey:       <span class="string">&quot;level&quot;</span>,</span><br><span class="line">      NameKey:        <span class="string">&quot;logger&quot;</span>,</span><br><span class="line">      CallerKey:      <span class="string">&quot;caller&quot;</span>,</span><br><span class="line">      FunctionKey:    zapcore.OmitKey,<span class="comment">//忽悠这个字段</span></span><br><span class="line">      MessageKey:     <span class="string">&quot;message&quot;</span>,</span><br><span class="line">      StacktraceKey:  <span class="string">&quot;stacktrace&quot;</span>,</span><br><span class="line">      LineEnding:     zapcore.DefaultLineEnding,<span class="comment">//默认换行&quot;\n&quot;</span></span><br><span class="line">      EncodeLevel:    zapcore.CapitalLevelEncoder,<span class="comment">//以大写字母输出</span></span><br><span class="line">      EncodeTime:     customTimeEncoder,<span class="comment">//自定义打印的时间格式</span></span><br><span class="line">      EncodeDuration: zapcore.SecondsDurationEncoder,<span class="comment">//把时间序列化位以秒为单位的浮点数</span></span><br><span class="line">      EncodeCaller:   zapcore.ShortCallerEncoder,<span class="comment">//只打印调信息发生的最终目录</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> app.IsLocal() &#123;</span><br><span class="line">      encoderConfig.EncodeLevel = zapcore.CapitalLevelEncoder</span><br><span class="line">      <span class="keyword">return</span> zapcore.NewConsoleEncoder(encoderConfig)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> zapcore.NewJSONEncoder(encoderConfig)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要作用是在这里配置了要打印哪些内容以及打印的效果，像<code>TimeKey</code>，<code>LevelKey</code>等<code>key</code>字段，加入我们没有配置这些选项，那么最后打印的结果中将没有这些内容。</p><blockquote><p>zap.New()</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Logger = zap.New(core,</span><br><span class="line">   zap.AddCaller(),<span class="comment">//打印信息发生的位置</span></span><br><span class="line">   zap.AddCallerSkip(<span class="number">1</span>),<span class="comment">//打印位置时从调用堆栈中回溯一级</span></span><br><span class="line">   zap.AddStacktrace(zap.ErrorLevel))<span class="comment">//只有在Error以上的错误时才会打印堆栈追踪</span></span><br><span class="line"></span><br><span class="line">zap.ReplaceGlobals(Logger)<span class="comment">//替换全局logger</span></span><br></pre></td></tr></table></figure><blockquote><p>caller</p></blockquote><p>在上述的解释中，<code>caller</code>讲的比较抽象，我们来举个例子说明一下，接下来我们通过删除<code>zap.New()</code>中的参数来看看这些参数的效果，我们采用Dump来测试，这个函数暂时还没有讲到,你可以理解这个函数的作用就是用户调试时打印日志的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">logInfo</span><span class="params">()</span></span> &#123;</span><br><span class="line">   logger.Dump(<span class="string">&quot;test&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   <span class="keyword">var</span> env <span class="type">string</span></span><br><span class="line">   flag.StringVar(&amp;env, <span class="string">&quot;env&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">   flag.Parse()</span><br><span class="line">   config.InitConfig(env)</span><br><span class="line"></span><br><span class="line">   bootstrap.SetupLogger()</span><br><span class="line"></span><br><span class="line">   logInfo()</span><br><span class="line"></span><br><span class="line">   router := gin.New()</span><br><span class="line"></span><br><span class="line">   bootstrap.SetupDB()</span><br><span class="line"></span><br><span class="line">   bootstrap.SetupRoute(router)</span><br><span class="line"></span><br><span class="line">   gin.SetMode(gin.ReleaseMode)</span><br><span class="line"></span><br><span class="line">   err := router.Run(<span class="string">&quot;:&quot;</span> + config.Get(<span class="string">&quot;app.port&quot;</span>))</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      fmt.Println(err)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>删除AddCaller()和AddCallerSkip()</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2022-08-28 09:25:46     WARN    Dump    &#123;&quot;data&quot;: &quot;\&quot;test\&quot;&quot;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>删除AddCallerSkip()</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2022-08-28 09:22:45 WARN   logger/logger.go:94    Dump   &#123;&quot;data&quot;: &quot;\&quot;test\&quot;&quot;&#125;</span><br></pre></td></tr></table></figure><p>添加了<code>AddCaller()</code>之后，那么调用这个函数的位置就被打印出来了，我们不难发现，因为打印日志调用的是<code>pkg</code>包中的函数，在实际debug过程中没有什么作用，但是我们如果跳过这一级，那么这时的日志就有所作用了</p><blockquote><p>全部保留</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2022-08-28 09:21:54 WARN   go-api-practice/main.go:18 Dump   &#123;&quot;data&quot;: &quot;\&quot;test\&quot;&quot;&#125;</span><br></pre></td></tr></table></figure><p>很明显发现添加了<code>AddCallerSkip(1)</code>的日志更具实际意义</p><h3 id="zap函数的封装"><a class="markdownIt-Anchor" href="#zap函数的封装"></a> zap函数的封装</h3><p>不难发现所有的工具类都是对zap中一组相似方法的封装，我就挑选一个来讲解</p><blockquote><p>Logger.Warn()</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(log *Logger)</span></span> Warn(msg <span class="type">string</span>, fields ...Field)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Field <span class="keyword">struct</span> &#123;</span><br><span class="line">Key       <span class="type">string</span></span><br><span class="line">Type      FieldType</span><br><span class="line">Integer   <span class="type">int64</span></span><br><span class="line">String    <span class="type">string</span></span><br><span class="line">Interface <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这类函数的第一个参数就是<code>message</code>，第二个参数是<code>zap.Field</code>结构体，内容的核心就是键值对，在最后的日志打印中，zap会把<code>Field</code>字段全部序列化成JSON</p><p>其它的函数都是在利用这些打印功能做封装，我就不一一讲解了😝</p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(六)封装验证器</title>
      <link href="/2022/08/27/go-api-practice-6/"/>
      <url>/2022/08/27/go-api-practice-6/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前的准备"><a class="markdownIt-Anchor" href="#开始前的准备"></a> 开始前的准备</h1><h1 id="抽离公共部分代码"><a class="markdownIt-Anchor" href="#抽离公共部分代码"></a> 抽离公共部分代码</h1><h3 id="抽离验证函数中的公共部分"><a class="markdownIt-Anchor" href="#抽离验证函数中的公共部分"></a> 抽离验证函数中的公共部分</h3><p>我们发现再验证手机号码和邮箱的过程中很多代码是类似的，所以我们可以把它们抽离出来重复使用</p><p><code>app/requests/signup_request.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置初始化</span></span><br><span class="line">opts := govalidator.Options&#123;</span><br><span class="line">   Data:          data,</span><br><span class="line">   Rules:         rules,</span><br><span class="line">   TagIdentifier: <span class="string">&quot;valid&quot;</span>, <span class="comment">// 模型中的 Struct 标签标识符</span></span><br><span class="line">   Messages:      messages,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开始验证</span></span><br><span class="line"><span class="keyword">return</span> govalidator.New(opts).ValidateStruct()</span><br></pre></td></tr></table></figure><p>我们发现这个部分是完全一致的</p><p><code>app/requests/requests.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">validate</span><span class="params">(data <span class="keyword">interface</span>&#123;&#125;, rules govalidator.MapData, messages govalidator.MapData)</span></span> <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span> &#123;</span><br><span class="line">   ops := govalidator.Options&#123;</span><br><span class="line">      Data:          data,</span><br><span class="line">      Rules:         rules,</span><br><span class="line">      TagIdentifier: <span class="string">&quot;valid&quot;</span>,</span><br><span class="line">      Messages:      messages,</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> govalidator.New(ops).ValidateStruct()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里把这一段代码单独取了出来，要注意这个<code>validate</code>是小写字母开头的，是一个私有函数，待会我们会创建一个共有的<code>Validate</code>函数以供控制器使用</p><h3 id="修改原来的代码"><a class="markdownIt-Anchor" href="#修改原来的代码"></a> 修改原来的代码</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SignupPhoneExistRequest <span class="keyword">struct</span> &#123;</span><br><span class="line">   Phone <span class="type">string</span> <span class="string">`json:&quot;phone,omitempty&quot; valid:&quot;phone&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ValidateSignupPhoneExist</span><span class="params">(data <span class="keyword">interface</span>&#123;&#125;, c *gin.Context)</span></span> <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span> &#123;</span><br><span class="line">   <span class="comment">// 自定义验证规则</span></span><br><span class="line">   rules := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;phone&quot;</span>: []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;digits:11&quot;</span>&#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 自定义验证出错时的提示</span></span><br><span class="line">   messages := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;phone&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:手机号为必填项，参数名称 phone&quot;</span>,</span><br><span class="line">         <span class="string">&quot;digits:手机号长度必须为 11 位的数字&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> validate(data, rules, messages)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> SignupEmailExistRequest <span class="keyword">struct</span> &#123;</span><br><span class="line">   Email <span class="type">string</span> <span class="string">`json:&quot;email,omitempty&quot; valid:&quot;email&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ValidateSignupEmailExist</span><span class="params">(data <span class="keyword">interface</span>&#123;&#125;, c *gin.Context)</span></span> <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 自定义验证规则</span></span><br><span class="line">   rules := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;email&quot;</span>: []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;min:4&quot;</span>, <span class="string">&quot;max:30&quot;</span>, <span class="string">&quot;email&quot;</span>&#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 自定义验证出错时的提示</span></span><br><span class="line">   messages := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;email&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:Email 为必填项&quot;</span>,</span><br><span class="line">         <span class="string">&quot;min:Email 长度需大于 4&quot;</span>,</span><br><span class="line">         <span class="string">&quot;max:Email 长度需小于 30&quot;</span>,</span><br><span class="line">         <span class="string">&quot;email:Email 格式不正确，请提供有效的邮箱地址&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> validate(data, rules, messages)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把公共部分修改即可，接下来我们来抽离控制器中的公共部分</p><h3 id="抽离控制器的公共部分"><a class="markdownIt-Anchor" href="#抽离控制器的公共部分"></a> 抽离控制器的公共部分</h3><p><code>app/http/controllers/api/v1/auth/signup_controller.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 解析 JSON 请求</span></span><br><span class="line"><span class="keyword">if</span> err := c.ShouldBindJSON(&amp;request); err != <span class="literal">nil</span> &#123;</span><br><span class="line">   <span class="comment">// 解析失败，返回 422 状态码和错误信息</span></span><br><span class="line">   c.AbortWithStatusJSON(http.StatusUnprocessableEntity, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;error&quot;</span>: err.Error(),</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="comment">// 打印错误信息</span></span><br><span class="line">   fmt.Println(err.Error())</span><br><span class="line">   <span class="comment">// 出错了，中断请求</span></span><br><span class="line">   <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 表单验证</span></span><br><span class="line">errs := requests.ValidateSignupEmailExist(&amp;request, c)</span><br><span class="line"><span class="comment">// errs 返回长度等于零即通过，大于 0 即有错误发生</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(errs) &gt; <span class="number">0</span> &#123;</span><br><span class="line">   <span class="comment">// 验证失败，返回 422 状态码和错误信息</span></span><br><span class="line">   c.AbortWithStatusJSON(http.StatusUnprocessableEntity, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;errors&quot;</span>: errs,</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们将会把这一段代码抽离</p><p><code>app/requests/requests.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ValidateFunc <span class="function"><span class="keyword">func</span><span class="params">(<span class="keyword">interface</span>&#123;&#125;, *gin.Context)</span></span> <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Validate</span><span class="params">(c *gin.Context, obj <span class="keyword">interface</span>&#123;&#125;, handler ValidateFunc)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">if</span> err := c.ShouldBind(obj); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      c.AbortWithStatusJSON(http.StatusUnprocessableEntity, gin.H&#123;</span><br><span class="line">         <span class="string">&quot;message&quot;</span>: <span class="string">&quot;数据格式错误&quot;</span>,</span><br><span class="line">         <span class="string">&quot;error&quot;</span>:   err.Error(),</span><br><span class="line">      &#125;)</span><br><span class="line">      fmt.Println(err.Error())</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   errs := handler(obj, c)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(errs) &gt; <span class="number">0</span> &#123;</span><br><span class="line">      c.AbortWithStatusJSON(http.StatusUnprocessableEntity, gin.H&#123;</span><br><span class="line">         <span class="string">&quot;message&quot;</span>: <span class="string">&quot;上传的数据格式出错&quot;</span>,</span><br><span class="line">         <span class="string">&quot;error&quot;</span>:   errs,</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里用<code>type</code>定义了一个新的类型来处理不同的验证要求</p><p>接下来再修改控制器中的代码就非常整洁了</p><p><code>app/http/controllers/api/v1/auth/signup_controller.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SignupController <span class="keyword">struct</span> &#123;</span><br><span class="line">   v1.BaseController</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sc *SignupController)</span></span> IsPhoneExist(c *gin.Context) &#123;</span><br><span class="line"></span><br><span class="line">   request := requests.SignupPhoneExistRequest&#123;&#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> ok := requests.Validate(c, &amp;request, requests.ValidateSignupPhoneExist); !ok &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;exist&quot;</span>: user.IsPhoneExist(request.Phone),</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sc *SignupController)</span></span> IsEmailExist(c *gin.Context) &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 初始化请求对象</span></span><br><span class="line">   request := requests.SignupEmailExistRequest&#123;&#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> ok := requests.Validate(c, &amp;request, requests.ValidateSignupEmailExist); !ok &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//  检查数据库并返回响应</span></span><br><span class="line">   c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;exist&quot;</span>: user.IsEmailExist(request.Email),</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个时候相当有必要再用之前再apifox创建好的接口再来请求一次来确定你的重构是否成功，这种环节很容易出问题，到了后面再修改就没那么简单了，这是个好习惯，在每部分完成你都可以这样取验证你的代码是否可以跑通。</p><p>验证成功那么重构就完成了，在我们写代码的过程中，经常的重构是有必要的，在项目开始时，代码量并不大，我们可以轻松的维护，但是加入我们不再初期就对这些有可能变得臃肿的代码进行一些可能的组织，代码很快就会变得难以维护。</p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(五)完成验证手机和邮箱是否存在接口</title>
      <link href="/2022/08/27/go-api-practice-5/"/>
      <url>/2022/08/27/go-api-practice-5/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前的准备"><a class="markdownIt-Anchor" href="#开始前的准备"></a> 开始前的准备</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get github.com/thedevsaddam/govalidator</span></span><br></pre></td></tr></table></figure><p>简单好用的go验证包，可以自定义验证规则和错误信息</p><h1 id="创建controller"><a class="markdownIt-Anchor" href="#创建controller"></a> 创建controller</h1><p><code>app/http/controllers/api/v1/base_api_controller.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> BaseController <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和前面一样，先创建一个Controller基类</p><p><code>app/http/controllers/api/v1/auth/signup_controller.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SignupController <span class="keyword">struct</span> &#123;</span><br><span class="line">   v1.BaseController</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sc *SignupController)</span></span> IsPhoneExist(c *gin.Context) &#123;</span><br><span class="line"></span><br><span class="line">   request := requests.SignupPhoneExistRequest&#123;&#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> err := c.ShouldBindJSON(&amp;request); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      c.AbortWithStatusJSON(http.StatusUnprocessableEntity, gin.H&#123;</span><br><span class="line">         <span class="string">&quot;error&quot;</span>: err.Error(),</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      fmt.Println(err.Error())</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   errs := requests.ValidateSignupPhoneExist(&amp;request, c)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(errs) &gt; <span class="number">0</span> &#123;</span><br><span class="line">      c.AbortWithStatusJSON(http.StatusUnprocessableEntity, gin.H&#123;</span><br><span class="line">         <span class="string">&quot;error&quot;</span>: errs,</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;exist&quot;</span>: user.IsPhoneExist(request.Phone),</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sc *SignupController)</span></span> IsEmailExist(c *gin.Context) &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 初始化请求对象</span></span><br><span class="line">   request := requests.SignupEmailExistRequest&#123;&#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 解析 JSON 请求</span></span><br><span class="line">   <span class="keyword">if</span> err := c.ShouldBindJSON(&amp;request); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="comment">// 解析失败，返回 422 状态码和错误信息</span></span><br><span class="line">      c.AbortWithStatusJSON(http.StatusUnprocessableEntity, gin.H&#123;</span><br><span class="line">         <span class="string">&quot;error&quot;</span>: err.Error(),</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">// 打印错误信息</span></span><br><span class="line">      fmt.Println(err.Error())</span><br><span class="line">      <span class="comment">// 出错了，中断请求</span></span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 表单验证</span></span><br><span class="line">   errs := requests.ValidateSignupEmailExist(&amp;request, c)</span><br><span class="line">   <span class="comment">// errs 返回长度等于零即通过，大于 0 即有错误发生</span></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(errs) &gt; <span class="number">0</span> &#123;</span><br><span class="line">      <span class="comment">// 验证失败，返回 422 状态码和错误信息</span></span><br><span class="line">      c.AbortWithStatusJSON(http.StatusUnprocessableEntity, gin.H&#123;</span><br><span class="line">         <span class="string">&quot;errors&quot;</span>: errs,</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//  检查数据库并返回响应</span></span><br><span class="line">   c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">      <span class="string">&quot;exist&quot;</span>: user.IsEmailExist(request.Email),</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>部分验证包中的结构体和相关函数还未创建</p><p>控制器中的逻辑：</p><ol><li>解析前端的数据到用户模型</li><li>验证这些数据是否符合规范</li><li>从数据库检查数据是否已经存在</li></ol><blockquote><p>ShouldBindJSON</p></blockquote><p>把上下文中的json信息解析到结构体中</p><h1 id="创建验证函数"><a class="markdownIt-Anchor" href="#创建验证函数"></a> 创建验证函数</h1><p><code>app/requests/signup_request.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SignupPhoneExistRequest <span class="keyword">struct</span> &#123;</span><br><span class="line">   Phone <span class="type">string</span> <span class="string">`json:&quot;phone,omitempty&quot; valid:&quot;phone&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ValidateSignupPhoneExist</span><span class="params">(data <span class="keyword">interface</span>&#123;&#125;, c *gin.Context)</span></span> <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span> &#123;</span><br><span class="line">   <span class="comment">// 自定义验证规则</span></span><br><span class="line">   rules := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;phone&quot;</span>: []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;digits:11&quot;</span>&#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 自定义验证出错时的提示</span></span><br><span class="line">   messages := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;phone&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:手机号为必填项，参数名称 phone&quot;</span>,</span><br><span class="line">         <span class="string">&quot;digits:手机号长度必须为 11 位的数字&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 配置初始化</span></span><br><span class="line">   opts := govalidator.Options&#123;</span><br><span class="line">      Data:          data,</span><br><span class="line">      Rules:         rules,</span><br><span class="line">      TagIdentifier: <span class="string">&quot;valid&quot;</span>, <span class="comment">// 模型中的 Struct 标签标识符</span></span><br><span class="line">      Messages:      messages,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 开始验证</span></span><br><span class="line">   <span class="keyword">return</span> govalidator.New(opts).ValidateStruct()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定制自己所需的验证信息，最后返回的错误信息保存在一个map中</p><p>验证邮箱的代码与验证手机类似</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SignupEmailExistRequest <span class="keyword">struct</span> &#123;</span><br><span class="line">   Email <span class="type">string</span> <span class="string">`json:&quot;email,omitempty&quot; valid:&quot;email&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ValidateSignupEmailExist</span><span class="params">(data <span class="keyword">interface</span>&#123;&#125;, c *gin.Context)</span></span> <span class="keyword">map</span>[<span class="type">string</span>][]<span class="type">string</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 自定义验证规则</span></span><br><span class="line">   rules := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;email&quot;</span>: []<span class="type">string</span>&#123;<span class="string">&quot;required&quot;</span>, <span class="string">&quot;min:4&quot;</span>, <span class="string">&quot;max:30&quot;</span>, <span class="string">&quot;email&quot;</span>&#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 自定义验证出错时的提示</span></span><br><span class="line">   messages := govalidator.MapData&#123;</span><br><span class="line">      <span class="string">&quot;email&quot;</span>: []<span class="type">string</span>&#123;</span><br><span class="line">         <span class="string">&quot;required:Email 为必填项&quot;</span>,</span><br><span class="line">         <span class="string">&quot;min:Email 长度需大于 4&quot;</span>,</span><br><span class="line">         <span class="string">&quot;max:Email 长度需小于 30&quot;</span>,</span><br><span class="line">         <span class="string">&quot;email:Email 格式不正确，请提供有效的邮箱地址&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 配置初始化</span></span><br><span class="line">   opts := govalidator.Options&#123;</span><br><span class="line">      Data:          data,</span><br><span class="line">      Rules:         rules,</span><br><span class="line">      TagIdentifier: <span class="string">&quot;valid&quot;</span>, <span class="comment">// 模型中的 Struct 标签标识符</span></span><br><span class="line">      Messages:      messages,</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 开始验证</span></span><br><span class="line">   <span class="keyword">return</span> govalidator.New(opts).ValidateStruct()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过这两个例子，我相信你可以大致理解这个包的用法，还是要提醒一点，在模仿代码过程中细节还是很容易出错的，你可以看看有没有以下问题</p><ul><li><code>&amp;</code></li><li><code>:</code></li><li><code>大小写</code></li></ul><p>​…</p><h1 id="分配路由"><a class="markdownIt-Anchor" href="#分配路由"></a> 分配路由</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">v1 := router.Group(<span class="string">&quot;/v1&quot;</span>)</span><br><span class="line">&#123; <span class="comment">//这个大括号是为了让结构更加清晰</span></span><br><span class="line">    v1.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">            <span class="string">&quot;hello&quot;</span>: <span class="string">&quot;world&quot;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    authGroup := v1.Group(<span class="string">&quot;/auth&quot;</span>)</span><br><span class="line">    &#123; <span class="comment">//这个大括号也是为了让结构更加清晰</span></span><br><span class="line">        suc := <span class="built_in">new</span>(auth.SignupController)</span><br><span class="line"></span><br><span class="line">        authGroup.POST(<span class="string">&quot;/signup/phone/exist&quot;</span>, suc.IsPhoneExist)</span><br><span class="line">        authGroup.POST(<span class="string">&quot;/signup/email/exist&quot;</span>, suc.IsEmailExist)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h1><p>我们在apifox中创建这两个auth文件夹，然后把这两个接口都放在其中</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220827093243047.png" alt="" /></p><p>这是一个长度只有10位的错误手机号，请求结果如下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220827093623168.png" alt="" /></p><p>我们向末尾多添加一个0，结果如下</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220827093723445.png" alt="" /></p><p>之后我们可以在数据库中手动创建包含这个手机号的用户然后再尝试，这些测试就交给你们自己了</p><ul><li>创建数据后尝试</li><li>请求邮箱接口</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(四)集成gorm</title>
      <link href="/2022/08/27/go-api-practice-4/"/>
      <url>/2022/08/27/go-api-practice-4/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前的准备"><a class="markdownIt-Anchor" href="#开始前的准备"></a> 开始前的准备</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get gorm.io/gorm</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get gorm.io/driver/mysql</span></span><br></pre></td></tr></table></figure><p>我们将使用gorm来使用数据库，项目中我们使用mysql数据库</p><h1 id="集成gorm"><a class="markdownIt-Anchor" href="#集成gorm"></a> 集成gorm</h1><h3 id="配置信息"><a class="markdownIt-Anchor" href="#配置信息"></a> 配置信息</h3><p><code>config/database.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">config.Add(<span class="string">&quot;database&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认数据库</span></span><br><span class="line"><span class="string">&quot;connection&quot;</span>: config.Env(<span class="string">&quot;DB_CONNECTION&quot;</span>, <span class="string">&quot;mysql&quot;</span>),</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;mysql&quot;</span>: <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数据库连接信息</span></span><br><span class="line"><span class="string">&quot;host&quot;</span>:     config.Env(<span class="string">&quot;DB_HOST&quot;</span>, <span class="string">&quot;127.0.0.1&quot;</span>),</span><br><span class="line"><span class="string">&quot;port&quot;</span>:     config.Env(<span class="string">&quot;DB_PORT&quot;</span>, <span class="string">&quot;3306&quot;</span>),</span><br><span class="line"><span class="string">&quot;database&quot;</span>: config.Env(<span class="string">&quot;DB_DATABASE&quot;</span>, <span class="string">&quot;go_api_practice&quot;</span>),</span><br><span class="line"><span class="string">&quot;username&quot;</span>: config.Env(<span class="string">&quot;DB_USERNAME&quot;</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line"><span class="string">&quot;password&quot;</span>: config.Env(<span class="string">&quot;DB_PASSWORD&quot;</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line"><span class="string">&quot;charset&quot;</span>:  <span class="string">&quot;utf8mb4&quot;</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接池配置</span></span><br><span class="line"><span class="string">&quot;max_idle_connections&quot;</span>: config.Env(<span class="string">&quot;DB_MAX_IDLE_CONNECTIONS&quot;</span>, <span class="number">100</span>),</span><br><span class="line"><span class="string">&quot;max_open_connections&quot;</span>: config.Env(<span class="string">&quot;DB_MAX_OPEN_CONNECTIONS&quot;</span>, <span class="number">25</span>),</span><br><span class="line"><span class="string">&quot;max_life_seconds&quot;</span>:     config.Env(<span class="string">&quot;DB_MAX_LIFE_SECONDS&quot;</span>, <span class="number">5</span>*<span class="number">60</span>),</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>.env</code></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">.</span></span><br><span class="line"><span class="attr">.</span></span><br><span class="line"><span class="attr">.</span></span><br><span class="line"><span class="attr">DB_CONNECTION</span>=<span class="string">mysql</span></span><br><span class="line"><span class="attr">DB_HOST</span>=<span class="string">127.0.0.1</span></span><br><span class="line"><span class="attr">DB_PORT</span>=<span class="string">3306</span></span><br><span class="line"><span class="attr">DB_DATABASE</span>=<span class="string">go_api_practice</span></span><br><span class="line"><span class="attr">DB_USERNAME</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">DB_PASSWORD</span>=<span class="string">123456</span></span><br><span class="line"><span class="attr">DB_DEBUG</span>=<span class="string">2</span></span><br></pre></td></tr></table></figure><p>先用前面的配置配置好数据库相关的参数</p><h3 id="连接数据库工具类"><a class="markdownIt-Anchor" href="#连接数据库工具类"></a> 连接数据库工具类</h3><p><code>pkg/database/database.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> DB *gorm.DB</span><br><span class="line"><span class="keyword">var</span> SQLDB *sql.DB</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Connect</span><span class="params">(dbConfig gorm.Dialector, _logger gormlogger.Interface)</span></span> &#123;</span><br><span class="line">   <span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line">   DB, err = gorm.Open(dbConfig, &amp;gorm.Config&#123;</span><br><span class="line">      Logger: _logger,</span><br><span class="line">   &#125;)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      fmt.Println(err.Error())</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   SQLDB, err = DB.DB()</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      fmt.Println(err.Error())</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="启动连接"><a class="markdownIt-Anchor" href="#启动连接"></a> 启动连接</h3><p>和前面启动gin的思路类似，我们在<code>bootstrap</code>包中编写启动类</p><p><code>bootstrap/database.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SetupDB</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> dbConfig gorm.Dialector</span><br><span class="line">   <span class="keyword">switch</span> config.Get(<span class="string">&quot;database.connection&quot;</span>) &#123;</span><br><span class="line">   <span class="keyword">case</span> <span class="string">&quot;mysql&quot;</span>:</span><br><span class="line">      <span class="comment">// 构建 DSN 信息</span></span><br><span class="line">      dsn := fmt.Sprintf(<span class="string">&quot;%v:%v@tcp(%v:%v)/%v?charset=%v&amp;parseTime=True&amp;multiStatements=true&amp;loc=Local&quot;</span>,</span><br><span class="line">         config.Get(<span class="string">&quot;database.mysql.username&quot;</span>),</span><br><span class="line">         config.Get(<span class="string">&quot;database.mysql.password&quot;</span>),</span><br><span class="line">         config.Get(<span class="string">&quot;database.mysql.host&quot;</span>),</span><br><span class="line">         config.Get(<span class="string">&quot;database.mysql.port&quot;</span>),</span><br><span class="line">         config.Get(<span class="string">&quot;database.mysql.database&quot;</span>),</span><br><span class="line">         config.Get(<span class="string">&quot;database.mysql.charset&quot;</span>),</span><br><span class="line">      )</span><br><span class="line">      dbConfig = mysql.New(mysql.Config&#123;</span><br><span class="line">         DSN: dsn,</span><br><span class="line">      &#125;)</span><br><span class="line">   <span class="keyword">default</span>:</span><br><span class="line">      <span class="built_in">panic</span>(errors.New(<span class="string">&quot;database connection not supported&quot;</span>))</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 连接数据库，并设置 GORM 的日志模式</span></span><br><span class="line">   database.Connect(dbConfig, logger.Default.LogMode(logger.Info))</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 设置最大连接数</span></span><br><span class="line">   database.SQLDB.SetMaxOpenConns(config.GetInt(<span class="string">&quot;database.mysql.max_open_connections&quot;</span>))</span><br><span class="line">   <span class="comment">// 设置最大空闲连接数</span></span><br><span class="line">   database.SQLDB.SetMaxIdleConns(config.GetInt(<span class="string">&quot;database.mysql.max_idle_connections&quot;</span>))</span><br><span class="line">   <span class="comment">// 设置每个链接的过期时间</span></span><br><span class="line">   database.SQLDB.SetConnMaxLifetime(time.Duration(config.GetInt(<span class="string">&quot;database.mysql.max_life_seconds&quot;</span>)) * time.Second)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用上前面的配置信息，连接数据库，最后我们在<code>main</code>中调用这个函数即可</p><p><code>main.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   <span class="keyword">var</span> env <span class="type">string</span></span><br><span class="line">   flag.StringVar(&amp;env, <span class="string">&quot;env&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">   flag.Parse()</span><br><span class="line">   config.InitConfig(env)</span><br><span class="line"></span><br><span class="line">   router := gin.New()</span><br><span class="line"></span><br><span class="line">   bootstrap.SetupDB()</span><br><span class="line"></span><br><span class="line">   bootstrap.SetupRoute(router)</span><br><span class="line"></span><br><span class="line">   err := router.Run(<span class="string">&quot;:&quot;</span> + config.Get(<span class="string">&quot;app.port&quot;</span>))</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      fmt.Println(err)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一部分的内容无非是配置一些基本信息，总体上没有什么难度，下面我们来创建用户模型</p><h1 id="创建用户模型"><a class="markdownIt-Anchor" href="#创建用户模型"></a> 创建用户模型</h1><p><code>app/models/model.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// BaseModel 模型基类</span></span><br><span class="line"><span class="keyword">type</span> BaseModel <span class="keyword">struct</span> &#123;</span><br><span class="line">   ID <span class="type">uint64</span> <span class="string">`gorm:&quot;column:id;primaryKey;autoIncrement;&quot; json:&quot;id,omitempty&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// CommonTimestampsField 时间戳</span></span><br><span class="line"><span class="keyword">type</span> CommonTimestampsField <span class="keyword">struct</span> &#123;</span><br><span class="line">   CreatedAt time.Time <span class="string">`gorm:&quot;column:created_at;index;&quot; json:&quot;created_at,omitempty&quot;`</span></span><br><span class="line">   UpdatedAt time.Time <span class="string">`gorm:&quot;column:updated_at;index;&quot; json:&quot;updated_at,omitempty&quot;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们先创建一些基本的字段以供将来的模型重复使用</p><p><code>app/models/user/user_model.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// User 用户模型</span></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">   models.BaseModel</span><br><span class="line"></span><br><span class="line">   Name     <span class="type">string</span> <span class="string">`json:&quot;name,omitempty&quot;`</span></span><br><span class="line">   Email    <span class="type">string</span> <span class="string">`json:&quot;-&quot;`</span></span><br><span class="line">   Phone    <span class="type">string</span> <span class="string">`json:&quot;-&quot;`</span></span><br><span class="line">   Password <span class="type">string</span> <span class="string">`json:&quot;-&quot;`</span></span><br><span class="line"></span><br><span class="line">   models.CommonTimestampsField</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们创建了用户模型，我们顺便为这个模型创建一些必要的工具函数</p><p><code>app/models/user/user_util.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsEmailExist</span><span class="params">(email <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">var</span> count <span class="type">int64</span></span><br><span class="line">   database.DB.Model(User&#123;&#125;).Where(<span class="string">&quot;email = ?&quot;</span>, email).Count(&amp;count)</span><br><span class="line">   <span class="keyword">return</span> count &gt; <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsPhoneExist</span><span class="params">(phone <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">var</span> count <span class="type">int64</span></span><br><span class="line">   database.DB.Model(User&#123;&#125;).Where(<span class="string">&quot;phone = ?&quot;</span>, phone).Count(&amp;count)</span><br><span class="line">   <span class="keyword">return</span> count &gt; <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，我们就完成了现阶段的数据库集成，我们此时还没有在数据库中建立数据表，我们可以使用<code>gorm</code>中的自动迁移功能来帮助我们自动创建数据库表</p><blockquote><p>数据库自动迁移</p></blockquote><p><code>bootstrap/database.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SetupDB</span><span class="params">()</span></span> &#123;</span><br><span class="line">.</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">   database.DB.AutoMigrate(&amp;user.User&#123;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>gorm</code>会根据<code>User</code>结构体的字段来自动创建数据表，但是不会覆盖已经创建的字段，如果你已经自己创建了自己的数据表，你可以删除后重试。</p><p>本节的内容并不难，主要是完成了一些基本信息的创建。</p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(三)集成viper</title>
      <link href="/2022/08/22/go-api-practice-3/"/>
      <url>/2022/08/22/go-api-practice-3/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前的准备"><a class="markdownIt-Anchor" href="#开始前的准备"></a> 开始前的准备</h1><ul><li>viper</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get github.com/spf13/viper</span></span><br></pre></td></tr></table></figure><p>viper是一个相当常用的配置管理包，功能相当强大。但是如果之前没有接触过这个包，第一次学习可能感到疑惑，你可以根据自己的情况去先学习viper的用法或者保持一定的疑惑。</p><ul><li>cast</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go get github.com/spf13/cast</span></span><br></pre></td></tr></table></figure><p>​一个非常方便的类型转换包</p><h1 id="编码"><a class="markdownIt-Anchor" href="#编码"></a> 编码</h1><h3 id="编写viper工具包"><a class="markdownIt-Anchor" href="#编写viper工具包"></a> 编写viper工具包</h3><p><code>pkg/config/config.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> config</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;github.com/spf13/cast&quot;</span></span><br><span class="line">   viperlib <span class="string">&quot;github.com/spf13/viper&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/helpers&quot;</span></span><br><span class="line">   <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> viper *viperlib.Viper</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ConfigFunc <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ConfigFuncs <span class="keyword">map</span>[<span class="type">string</span>]ConfigFunc</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">   viper = viperlib.New()</span><br><span class="line"></span><br><span class="line">   viper.SetConfigType(<span class="string">&quot;env&quot;</span>)</span><br><span class="line"></span><br><span class="line">   viper.AddConfigPath(<span class="string">&quot;.&quot;</span>)</span><br><span class="line"></span><br><span class="line">   viper.SetEnvPrefix(<span class="string">&quot;appenv&quot;</span>)</span><br><span class="line"></span><br><span class="line">   viper.AutomaticEnv()</span><br><span class="line"></span><br><span class="line">   ConfigFuncs = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]ConfigFunc)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitConfig</span><span class="params">(env <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   loadEnv(env)</span><br><span class="line">   loadConfig()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">loadConfig</span><span class="params">()</span></span> &#123;</span><br><span class="line">   <span class="keyword">for</span> name, fn := <span class="keyword">range</span> ConfigFuncs &#123;</span><br><span class="line">      viper.Set(name, fn())</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">loadEnv</span><span class="params">(envSuffix <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   envPath := <span class="string">&quot;.env&quot;</span></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(envSuffix) &gt; <span class="number">0</span> &#123;</span><br><span class="line">      filePath := envPath + envSuffix</span><br><span class="line">      <span class="keyword">if</span> _, err := os.Stat(filePath); err != <span class="literal">nil</span> &#123;</span><br><span class="line">         envPath = filePath</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   viper.SetConfigName(envPath)</span><br><span class="line">   <span class="keyword">if</span> err := viper.ReadInConfig(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="built_in">panic</span>(err)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   viper.WatchConfig()</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Env</span><span class="params">(envName <span class="type">string</span>, defaultValue ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(defaultValue) &gt; <span class="number">0</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> internalGet(envName, defaultValue[<span class="number">0</span>])</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> internalGet(envName)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Add</span><span class="params">(name <span class="type">string</span>, configFn ConfigFunc)</span></span> &#123;</span><br><span class="line">   ConfigFuncs[name] = configFn</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Get</span><span class="params">(path <span class="type">string</span>, defaultValue ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> GetString(path, defaultValue...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">internalGet</span><span class="params">(path <span class="type">string</span>, defaultValue ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">   <span class="keyword">if</span> !viper.IsSet(path) || helpers.Empty(viper.Get(path)) &#123;</span><br><span class="line">      <span class="keyword">if</span> <span class="built_in">len</span>(defaultValue) &gt; <span class="number">0</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> defaultValue[<span class="number">0</span>]</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> viper.Get(path)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetString</span><span class="params">(path <span class="type">string</span>, defaultValue ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> cast.ToString(internalGet(path, defaultValue...))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetInt</span><span class="params">(path <span class="type">string</span>, defaultValue ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> cast.ToInt(internalGet(path, defaultValue...))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetBool</span><span class="params">(path <span class="type">string</span>, defaultValue ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> cast.ToBool(internalGet(path, defaultValue...))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里内容有点复杂，我一点点慢慢讲</p><blockquote><p>viper实例</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">viper = viperlib.New()</span><br></pre></td></tr></table></figure><p>这里我们用<code>New()</code>方法去初始化一个<code>viper实例</code>，这样初始化的<code>viper</code>会有一些默认的配置，我们在使用的要注意，特别的，不要写成一下这种形式。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">viper := viperlib.New()</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">New</span><span class="params">()</span></span> *Viper &#123;</span><br><span class="line">   v := <span class="built_in">new</span>(Viper)</span><br><span class="line">   v.keyDelim = <span class="string">&quot;.&quot;</span></span><br><span class="line">   v.configName = <span class="string">&quot;config&quot;</span></span><br><span class="line">.</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">   <span class="keyword">return</span> v</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你看过viper的入门教程，那么你就会明白这些配置的作用，如果你现在还不能理解，我会在下面用到的时候在加以说明</p><blockquote><p>设置配置文件类型和位置</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">viper.SetConfigType(<span class="string">&quot;env&quot;</span>)</span><br><span class="line">viper.AddConfigPath(<span class="string">&quot;.&quot;</span>)</span><br></pre></td></tr></table></figure><p>这两行不难理解，配置文件类型为<code>env</code>，路径为当前目录<code>.(相对于main.go)</code></p><blockquote><p>自动读取环境变量</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">viper.SetEnvPrefix(<span class="string">&quot;appenv&quot;</span>)<span class="comment">//设置了配置文件的前缀</span></span><br><span class="line">viper.AutomaticEnv()<span class="comment">//自动读取环境变量</span></span><br></pre></td></tr></table></figure><p>对于程序员来说，我想配置环境变量并不陌生，借助于goland工具，我们可以快速配置环境变量，我们以此来举个例子</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220822101005029.png" alt="" /></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220822101100635.png" alt="" /></p><p>可以这样测试</p><p><code>main.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(config.Get(<span class="string">&quot;id&quot;</span>))<span class="comment">//在main函数中加上</span></span><br></pre></td></tr></table></figure><p>我们就可以看到打印值是<code>1</code></p><blockquote><p>ConfigFunc</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ConfigFunc <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;<span class="comment">//定义了一个类型，这个类型是一个函数，返回值是map[string]interface&#123;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ConfigFuncs <span class="keyword">map</span>[<span class="type">string</span>]ConfigFunc<span class="comment">//建立了一个从字符串向ConfigFunc映射的map</span></span><br></pre></td></tr></table></figure><p>这里比较考验Go的基础，看不懂的去回顾一下<code>type</code>的用法</p><blockquote><p>初始化配置(读取配置)</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitConfig</span><span class="params">(env <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   loadEnv(env)</span><br><span class="line">   loadConfig()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">loadConfig</span><span class="params">()</span></span> &#123;</span><br><span class="line">   <span class="keyword">for</span> name, fn := <span class="keyword">range</span> ConfigFuncs &#123;</span><br><span class="line">      viper.Set(name, fn())</span><br><span class="line">   &#125;</span><br><span class="line">&#125;<span class="comment">//这里待会用到再细说</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">loadEnv</span><span class="params">(envSuffix <span class="type">string</span>)</span></span> &#123;<span class="comment">//读入配置文件的后缀</span></span><br><span class="line">   envPath := <span class="string">&quot;.env&quot;</span></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(envSuffix) &gt; <span class="number">0</span> &#123;</span><br><span class="line">      filePath := envPath + envSuffix</span><br><span class="line">      <span class="keyword">if</span> _, err := os.Stat(filePath); err != <span class="literal">nil</span> &#123;</span><br><span class="line">         envPath = filePath</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   viper.SetConfigName(envPath)<span class="comment">//配置文件名</span></span><br><span class="line">   <span class="keyword">if</span> err := viper.ReadInConfig(); err != <span class="literal">nil</span> &#123;<span class="comment">//读取文件</span></span><br><span class="line">      <span class="built_in">panic</span>(err)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   viper.WatchConfig()<span class="comment">//不需要重新启动项目就可以更改并读取配置文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要讲一下<code>loadEnv</code>，这里的后缀可以让我们根据运行环境的不同读取不同的配置文件，默认情况下是<code>.env</code>，通过后缀我们可以读取<code>.env.test</code>，<code>.env.prod</code>，<code>.env.dev</code>等</p><p>此外，如果你注意到了前面的<code>viper.New()</code>，你就会发现下面的配置</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v.configName = <span class="string">&quot;config&quot;</span></span><br></pre></td></tr></table></figure><p>也就是说我们必须要手动设置一次<code>configName</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">viper.SetConfigName(envPath)</span><br></pre></td></tr></table></figure><p>否则默认的就是<code>config.env(当然，如果你愿意这么做的话)</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Env</span><span class="params">(envName <span class="type">string</span>, defaultValue ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">len</span>(defaultValue) &gt; <span class="number">0</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> internalGet(envName, defaultValue[<span class="number">0</span>])</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> internalGet(envName)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Add</span><span class="params">(name <span class="type">string</span>, configFn ConfigFunc)</span></span> &#123;</span><br><span class="line">   ConfigFuncs[name] = configFn</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回值是字符串的情况最为常见，我们为此多进行了一次封装</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Get</span><span class="params">(path <span class="type">string</span>, defaultValue ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> GetString(path, defaultValue...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//这里封装了一个私有的Get()</span></span><br><span class="line"><span class="comment">//helpers包还没有完成</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">internalGet</span><span class="params">(path <span class="type">string</span>, defaultValue ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">   <span class="keyword">if</span> !viper.IsSet(path) || helpers.Empty(viper.Get(path)) &#123;</span><br><span class="line">      <span class="keyword">if</span> <span class="built_in">len</span>(defaultValue) &gt; <span class="number">0</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> defaultValue[<span class="number">0</span>]</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> viper.Get(path)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//因为viper.Get()返回的是一个interface&#123;&#125;，为了方便使用，我们搭配cast转换成我们想要的类型</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetString</span><span class="params">(path <span class="type">string</span>, defaultValue ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> cast.ToString(internalGet(path, defaultValue...))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetInt</span><span class="params">(path <span class="type">string</span>, defaultValue ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> cast.ToInt(internalGet(path, defaultValue...))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetBool</span><span class="params">(path <span class="type">string</span>, defaultValue ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> cast.ToBool(internalGet(path, defaultValue...))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的<code>Env</code>和其它函数我都会在使用的时候统一讲解，现在留个印象即可，现在我们已经完成了viper工具类，下面我们完成<code>helpers</code>的小插曲，把最重要的<code>config</code>内容留到最后</p><h3 id="helpers工具包"><a class="markdownIt-Anchor" href="#helpers工具包"></a> helpers工具包</h3><p><code>helpers/helpers.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> helpers</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;reflect&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Empty</span><span class="params">(val <span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">   <span class="keyword">if</span> val == <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">   &#125;</span><br><span class="line">   v := reflect.ValueOf(val)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">switch</span> v.Kind() &#123;</span><br><span class="line">   <span class="keyword">case</span> reflect.String, reflect.Array:</span><br><span class="line">      <span class="keyword">return</span> v.Len() == <span class="number">0</span></span><br><span class="line">   <span class="keyword">case</span> reflect.Map, reflect.Slice:</span><br><span class="line">      <span class="keyword">return</span> v.Len() == <span class="number">0</span> || v.IsNil()</span><br><span class="line">   <span class="keyword">case</span> reflect.Bool:</span><br><span class="line">      <span class="keyword">return</span> !v.Bool()</span><br><span class="line">   <span class="keyword">case</span> reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64:</span><br><span class="line">      <span class="keyword">return</span> v.Int() == <span class="number">0</span></span><br><span class="line">   <span class="keyword">case</span> reflect.Uint, reflect.Uint8, reflect.Uint16, reflect.Uint32, reflect.Uint64:</span><br><span class="line">      <span class="keyword">return</span> v.Uint() == <span class="number">0</span></span><br><span class="line">   <span class="keyword">case</span> reflect.Float32, reflect.Float64:</span><br><span class="line">      <span class="keyword">return</span> v.Float() == <span class="number">0</span></span><br><span class="line">   <span class="keyword">case</span> reflect.Interface, reflect.Ptr:</span><br><span class="line">      <span class="keyword">return</span> v.IsNil()</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> reflect.DeepEqual(val, reflect.Zero(v.Type()).Interface())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为<code>viper.Get()</code>返回的是一个<code>interface&#123;&#125;</code>，所以我们特别的来处理一下它的判空</p><p>其中<code>reflect.DeepEqual()</code>就可以完全完成这个工作了</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reflect.DeepEqual(val, reflect.Zero(v.Type()).Interface())</span><br></pre></td></tr></table></figure><p>但是由于其中用了很多反射操作，速度比较慢，所以我们尽可能地处理一些自己可以处理的空类型判断，来加快程序的运行速度</p><h3 id="完成config包和对配置过程加载的全解析"><a class="markdownIt-Anchor" href="#完成config包和对配置过程加载的全解析"></a> 完成config包和对配置过程加载的全解析</h3><p>先贴上全部的代码，要注意，之前的<code>config</code>工具包是在<code>pkg</code>下的，现在我们要在根目录下新建一个<code>config</code>包</p><p><code>config/app.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> config</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;go-api-practice/pkg/config&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">   config.Add(<span class="string">&quot;app&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 应用名称</span></span><br><span class="line">         <span class="string">&quot;name&quot;</span>: config.Env(<span class="string">&quot;APP_NAME&quot;</span>, <span class="string">&quot;go-api-pratice&quot;</span>),</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 当前环境，用以区分多环境，一般为 local, stage, production, test</span></span><br><span class="line">         <span class="string">&quot;env&quot;</span>: config.Env(<span class="string">&quot;APP_ENV&quot;</span>, <span class="string">&quot;production&quot;</span>),</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 是否进入调试模式</span></span><br><span class="line">         <span class="string">&quot;debug&quot;</span>: config.Env(<span class="string">&quot;APP_DEBUG&quot;</span>, <span class="literal">false</span>),</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 应用服务端口</span></span><br><span class="line">         <span class="string">&quot;port&quot;</span>: config.Env(<span class="string">&quot;APP_PORT&quot;</span>, <span class="string">&quot;3000&quot;</span>),</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 加密会话、JWT 加密</span></span><br><span class="line">         <span class="string">&quot;key&quot;</span>: config.Env(<span class="string">&quot;APP_KEY&quot;</span>, <span class="string">&quot;33446a9dcf9ea060a0a6532b166da32f304af0de&quot;</span>),</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 用以生成链接</span></span><br><span class="line">         <span class="string">&quot;url&quot;</span>: config.Env(<span class="string">&quot;APP_URL&quot;</span>, <span class="string">&quot;http://localhost:3000&quot;</span>),</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 设置时区，JWT 里会使用，日志记录里也会使用到</span></span><br><span class="line">         <span class="string">&quot;timezone&quot;</span>: config.Env(<span class="string">&quot;TIMEZONE&quot;</span>, <span class="string">&quot;Asia/Shanghai&quot;</span>),</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>config/config.go</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">package config</span><br><span class="line"></span><br><span class="line">func Initialize() &#123;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>.env</code></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">APP_ENV</span>=<span class="string">local</span></span><br><span class="line"><span class="attr">APP_KEY</span>=<span class="string">zBqYyQrPNaIUsnRhsGtHLivjqiMjBVLS</span></span><br><span class="line"><span class="attr">APP_DEBUG</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">APP_URL</span>=<span class="string">http://localhost:3000</span></span><br><span class="line"><span class="attr">APP_LOG_LEVEL</span>=<span class="string">debug</span></span><br><span class="line"><span class="attr">APP_PORT</span>=<span class="string">3000</span></span><br></pre></td></tr></table></figure><p>这里的配置文件名就叫做<code>.env</code></p><h4 id="加载过程分析"><a class="markdownIt-Anchor" href="#加载过程分析"></a> 加载过程分析</h4><p>我们会从<code>config.Add()</code>函数开始，按照函数执行步骤做一步一步的分析，函数细节请自己翻阅上面的代码，可能有点绕，请静下心来慢慢看</p><blockquote><p>config.Add()</p></blockquote><p>这里我们添加一个映射，从<code>&quot;app&quot;</code>到一个<code>func() map[string]interface&#123;&#125;</code>函数</p><blockquote><p>loadEnv()</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">viper.SetConfigName(envPath)</span><br><span class="line"><span class="keyword">if</span> err := viper.ReadInConfig(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">   <span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一步viper读取了<code>.env(或者别的环境)</code>文件，并且把这些键值对都加载到了viper中，形式如下</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app_env</span>=<span class="string">local</span></span><br><span class="line"><span class="attr">...</span></span><br><span class="line"><span class="comment"># 把键都变成小写</span></span><br><span class="line"><span class="comment"># 实际上是键值对，这里表示一下</span></span><br></pre></td></tr></table></figure><blockquote><p>loadConfig()</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">loadConfig</span><span class="params">()</span></span> &#123;</span><br><span class="line">   <span class="keyword">for</span> name, fn := <span class="keyword">range</span> ConfigFuncs &#123;</span><br><span class="line">      viper.Set(name, fn())</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们去调用所有的<code>ConfigFuncs</code>函数来设置键值对，这里的键目前只有<code>&quot;app&quot;</code>，目前实际的内容是这样的</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span></span><br><span class="line"><span class="string">name:XXX</span></span><br><span class="line"><span class="string">env:XXX</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p><code>app</code>下面的所有内容都是<code>fn()</code>的返回值，我们来分析一下这个函数的返回内容</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">config.Add(<span class="string">&quot;app&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line">       <span class="comment">// 应用服务端口</span></span><br><span class="line">       <span class="string">&quot;port&quot;</span>: config.Env(<span class="string">&quot;APP_PORT&quot;</span>, <span class="string">&quot;3000&quot;</span>),</span><br><span class="line">       <span class="comment">// 设置时区，JWT 里会使用，日志记录里也会使用到</span></span><br><span class="line">       <span class="string">&quot;timezone&quot;</span>: config.Env(<span class="string">&quot;TIMEZONE&quot;</span>, <span class="string">&quot;Asia/Shanghai&quot;</span>),</span><br><span class="line">       <span class="comment">// 当前环境，用以区分多环境，一般为 local, stage, production, test</span></span><br><span class="line">       <span class="string">&quot;env&quot;</span>: config.Env(<span class="string">&quot;APP_ENV&quot;</span>, <span class="string">&quot;production&quot;</span>),</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>我们就以这个<code>env</code>为例</p><blockquote><p>config.Env()</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">func Env(envName string, defaultValue ...interface&#123;&#125;) interface&#123;&#125; &#123;</span><br><span class="line">   if len(defaultValue) &gt; 0 &#123;</span><br><span class="line">      return internalGet(envName, defaultValue[0])</span><br><span class="line">   &#125;</span><br><span class="line">   return internalGet(envName)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没什么可说的，根据情况调用<code>internalGet()</code></p><blockquote><p>internalGet()</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">internalGet</span><span class="params">(path <span class="type">string</span>, defaultValue ...<span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">   <span class="keyword">if</span> !viper.IsSet(path) || helpers.Empty(viper.Get(path)) &#123;</span><br><span class="line">      <span class="keyword">if</span> <span class="built_in">len</span>(defaultValue) &gt; <span class="number">0</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> defaultValue[<span class="number">0</span>]</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> viper.Get(path)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这部分是关键，首先，方法会判断这个键是否存在，那么此时viper内部已经读入了什么呢，</p><p>没错，就是配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app_env</span>=<span class="string">local</span></span><br><span class="line"><span class="attr">...</span></span><br></pre></td></tr></table></figure><p>这个时候的<code>path</code>是<code>APP_ENV(在Get时都会统一转化成小写)</code>，所以这个时候键存在，调用<code>viper.Get(path)</code>，值为<code>local</code>，所以返回值是<code>local</code>，那么这样一个配置就确定下来了，下面的逻辑都是相同的</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span></span><br><span class="line"><span class="string">name:XXX</span></span><br><span class="line"><span class="string">env:local</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p>反之，加入我们在配置文件中如果没有<code>app_env=local</code>，我们会发现我们调用函数的时候传入了一个默认值<code>production</code>，所以，加入我们没有配置这一项，返回值就是<code>production</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span></span><br><span class="line"><span class="string">name:XXX</span></span><br><span class="line"><span class="string">env:production</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p>这就是全部的加载过程了，如果你了解viper，就会知道<code>viper.Set()</code>的优先级高于配置文件，但是我们最后发现在这个转换中，配置文件都被加载到了<code>viper.Set()</code>中</p><h3 id="使用配置"><a class="markdownIt-Anchor" href="#使用配置"></a> 使用配置</h3><p><code>main.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;flag&quot;</span></span><br><span class="line">   <span class="string">&quot;fmt&quot;</span></span><br><span class="line">   <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/bootstrap&quot;</span></span><br><span class="line">   btsconfig <span class="string">&quot;go-api-practice/config&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/pkg/config&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">   btsconfig.Initialize()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   <span class="keyword">var</span> env <span class="type">string</span></span><br><span class="line">   flag.StringVar(&amp;env, <span class="string">&quot;env&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">   flag.Parse()</span><br><span class="line">   config.InitConfig(env)</span><br><span class="line"></span><br><span class="line">   router := gin.New()</span><br><span class="line"></span><br><span class="line">   bootstrap.SetupRoute(router)</span><br><span class="line"></span><br><span class="line">   err := router.Run(<span class="string">&quot;:&quot;</span> + config.Get(<span class="string">&quot;app.port&quot;</span>))</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      fmt.Println(err)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里我相信你依然可能会有几个疑惑的点，我们来一一解答</p><blockquote><p>btsconfig.Initialize()的作用</p></blockquote><p>我们知道Go中的<code>init()</code>函数会在<code>main</code>函数之前被调用，而对于别的包的<code>init()</code>函数而言，它们被调用的时候就是这个包被引用的时候，如果你细心的话就会发现<code>app.go</code>的内容是写在<code>init()</code>函数中的，所以<code>btsconfig.Initialize()</code>的作用就是调用<code>config</code>包下的所有<code>init()</code>函数</p><blockquote><p>关于flag包</p></blockquote><p>作用是读取命令行参数，这里就简单的说明一下作用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">go run main.go --<span class="built_in">env</span> .dev</span></span><br></pre></td></tr></table></figure><p>这样我们在运行的时候就可以读取<code>.env.dev</code>配置文件啦(结合InitConfig函数)</p><blockquote><p>关于app.port</p></blockquote><p>还记得最前面的viper初始化时的<code>viper.New()</code>吗</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v.keyDelim = <span class="string">&quot;.&quot;</span></span><br></pre></td></tr></table></figure><p>对于配置的多层嵌套，viper自有它的读取方法，我们使用<code>viper.Get()</code>时中间用<code>.</code>隔开</p><p>到这里，viper集成就完成了，这部分内容有些复杂，慢慢来，你可以休息一下，好好总结上面的内容然后再开启下一节。</p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(二)集成gin</title>
      <link href="/2022/08/22/go-api-practice-2/"/>
      <url>/2022/08/22/go-api-practice-2/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前的准备"><a class="markdownIt-Anchor" href="#开始前的准备"></a> 开始前的准备</h1><ul><li>gin</li></ul><p><code>go get github.com/gin-gonic/gin</code></p><h1 id="编码"><a class="markdownIt-Anchor" href="#编码"></a> 编码</h1><h3 id="构建main函数"><a class="markdownIt-Anchor" href="#构建main函数"></a> 构建main函数</h3><p><code>main.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;fmt&quot;</span></span><br><span class="line">   <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   router := gin.New()</span><br><span class="line"></span><br><span class="line">   bootstrap.SetupRoute(router)</span><br><span class="line"></span><br><span class="line">   err := router.Run(<span class="string">&quot;:3000&quot;</span>)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      fmt.Println(err)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们会在<code>bootstrap</code>包中的<code>SetupRoute()</code>中初始化<code>router</code>，下面我们去完成这个函数</p><h3 id="初始化router"><a class="markdownIt-Anchor" href="#初始化router"></a> 初始化router</h3><p><code>bootstrap/route.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> bootstrap</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">   <span class="string">&quot;go-api-practice/routes&quot;</span></span><br><span class="line">   <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SetupRoute</span><span class="params">(router *gin.Engine)</span></span> &#123;</span><br><span class="line">   registerGlobalMiddleware(router)</span><br><span class="line">   routes.RegisterAPIRoutes(router)</span><br><span class="line">   setup404Handler(router)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">registerGlobalMiddleware</span><span class="params">(router *gin.Engine)</span></span> &#123;</span><br><span class="line">   router.Use(</span><br><span class="line">      gin.Recovery(),</span><br><span class="line">      gin.Logger(),</span><br><span class="line">   )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">setup404Handler</span><span class="params">(router *gin.Engine)</span></span> &#123;</span><br><span class="line">   router.NoRoute(<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">      c.JSON(http.StatusNotFound, gin.H&#123;</span><br><span class="line">         <span class="string">&quot;error_code&quot;</span>:    <span class="number">404</span>,</span><br><span class="line">         <span class="string">&quot;error_message&quot;</span>: <span class="string">&quot;页面不存在&quot;</span>,</span><br><span class="line">      &#125;)</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>registerGlobalMiddleware()</p></blockquote><p><code>registerGlobalMiddleware(router *gin.Engine)</code>，在这个函数中我们去注册需要使用的中间件，这里我们使用gin自带的中间件即可，此外<code>setup404Handler(router *gin.Engine)</code>设置了<code>404</code>时的返回结果。</p><blockquote><p>gin.H</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> H <span class="keyword">map</span>[<span class="type">string</span>]any</span><br><span class="line"><span class="keyword">type</span> any = <span class="keyword">interface</span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>可以看到<code>gin.H</code>是一个<code>map[string]interface&#123;&#125;</code>类型，借助于<code>gin.H</code>我们可以快速的构建想要返回的JSON数据</p><p>到这里我们就配置好了我们的<code>gin.Engine</code>，接下来我们在<code>routes</code>包下的<code>api.go</code>中注册路由</p><h3 id="注册路由"><a class="markdownIt-Anchor" href="#注册路由"></a> 注册路由</h3><p><code>routes/api.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> routes</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">   <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RegisterAPIRoutes</span><span class="params">(router *gin.Engine)</span></span> &#123;</span><br><span class="line">   v1 := router.Group(<span class="string">&quot;/v1&quot;</span>)</span><br><span class="line"></span><br><span class="line">   v1.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">      c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">         <span class="string">&quot;hello&quot;</span>: <span class="string">&quot;world&quot;</span>,</span><br><span class="line">      &#125;)</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里我们通过路由组的形式去控制API的版本，我们可以通过这种方式来很方便的管理不同版本的API</p><h3 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h3><p>通过Apifox来测试一下这两个API</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220821221623020.png" alt="" /></p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220821221648095.png" alt="" /></p><p>设置好之后运行，如果结果和我们预期一致，那么就成功了</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220821221946788.png" alt="" /></p><p>如果你测试失败了，可能是默认的环境端口错了，你可以在测试环境中进行配置</p><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/image-20220821222149668.png" alt="" /></p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(一)项目基础信息和说明</title>
      <link href="/2022/08/21/go-api-practice-1/"/>
      <url>/2022/08/21/go-api-practice-1/</url>
      
        <content type="html"><![CDATA[<h1 id="所需要的go语言基础"><a class="markdownIt-Anchor" href="#所需要的go语言基础"></a> 所需要的Go语言基础</h1><p>这并不是一个完全零基础的Go语言Web项目教程，你需要对包括但不限于<code>gin</code>，<code>gorm</code>等常用框架有一定的了解。此外，如果你之前有过其它语言的Web开发经验，那么我相信你也可以很快学会这些内容。如果没有这些基础，你可以跟着本教程做下去，我们会在每一部分的练习中写上所需要的基础，你可以自己去找资料学习，也可以看博客中的教程(如果有的话)，总而言之，只要有耐心，完成这个项目并不会太困难，而且你会学习到很多😃。</p><h1 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h1><ul><li>在学习的过程中我们会遇到陌生的知识和内容，第一遍使用时不需要了解这些内容的细节，在适当的时候<code>不求甚解</code>可以让我们的学习进度更加流畅</li><li>完成这些部分的时候，我会按照结构由外而内的讲解编码。也就是写下这份代码时可能还有一些函数没有完成，如果你不习惯这种顺序，可以先翻到下面完成这些函数</li><li>每个代码块的前面都会附上代码所在的包和文件的位置，请按照这个位置去建立文件，所有的文件说明默认都是从根目录开始的。</li><li>对于代码的讲解，我会偏向于这个工具在这个项目中是如何使用的，而不会从零开始去讲解一个包怎么使用，如果你还完全不会，那么建议先自学一下基础内容</li><li>这是Go技术论坛上的一个实战，不过是付费的，如果你想要去体验一下，那么链接再这里<a href="https://learnku.com/courses/go-api/1.19">《G02 Go API 实战》 | Go 技术论坛 (learnku.com)</a></li></ul><h1 id="开始之前你需要的准备和基础"><a class="markdownIt-Anchor" href="#开始之前你需要的准备和基础"></a> 开始之前，你需要的准备和基础</h1><ul><li>Go语言的基础语法</li><li>接口调试工具<a href="https://www.apifox.cn/">Apifox</a>(如果是其它工具也可以)</li><li>开发环境<a href="https://www.jetbrains.com/go/">GoLand</a></li><li>一颗热爱编程的心</li></ul><h1 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h1><blockquote><p>已经按照要求下载了包，但是编译时缺少依赖</p></blockquote><p>可以尝试使用<code>go mod tidy</code>去下载缺少的依赖</p><blockquote><p>出错时检查了很多遍你的代码和我的标准代码之间的区别，始终找不到问题</p></blockquote><p>可能有如下问题</p><ul><li>环境问题，版本不同</li><li>我的博客写错了，如果发现这个问题请反馈给我，我会非常感谢你的帮助</li><li>代码相同，但是顺序错了，有些时候会造成一些难以预料的问题</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AtCoder Beginner Contest 248</title>
      <link href="/2022/04/17/AtCoder-Beginner-Contest-248/"/>
      <url>/2022/04/17/AtCoder-Beginner-Contest-248/</url>
      
        <content type="html"><![CDATA[<h1 id="atcoder-beginner-contest-248"><a class="markdownIt-Anchor" href="#atcoder-beginner-contest-248"></a> AtCoder Beginner Contest 248</h1><blockquote><p>下载<a href="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Atcoder/AtCoder%20Beginner%20Contest%20248/AtCoder%20Beginner%20Contest%20248/AtCoder-Beginner-Contest-248.pdf">PDF</a>，获得别样的观看体验</p></blockquote><p><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Atcoder/AtCoder%20Beginner%20Contest%20248/AtCoder%20Beginner%20Contest%20248/1650191469761.jpg.jpg" alt=""></p><h2 id="a-lacked-number"><a class="markdownIt-Anchor" href="#a-lacked-number"></a> A - Lacked Number</h2><p><strong>题意：</strong></p><blockquote><p>给出10个数字，输出0~9中未出现的那个数字。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>统计数字出现情况即可。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Atcoder/AtCoder%20Beginner%20Contest%20248/AtCoder%20Beginner%20Contest%20248/%28NKG%7D7TF7Z%7EZBHKIM%40E%60EZ5.png" alt=""></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = <span class="number">2e5</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">32768</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> cnt[<span class="number">10</span>] = {<span class="number">0</span>};</span><br><span class="line">    std::string s;</span><br><span class="line">    std::cin&gt;&gt;s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> c : s)cnt[c-<span class="string">'0'</span>]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">10</span> ; i++)<span class="keyword">if</span>(!cnt[i])std::cout&lt;&lt;i;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="b-slimes"><a class="markdownIt-Anchor" href="#b-slimes"></a> B - Slimes</h2><p><strong>题意：</strong></p><blockquote><p>给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">A,B,K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>三个数字,每次操作可以使<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mi>A</mi><mo>∗</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">A=A*K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>,输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>≥</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A\geq B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>的最小次数</p></blockquote><p><strong>思路：</strong></p><blockquote><p>直接模拟即可。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mfrac><mi>B</mi><mrow><mi>A</mi><mi>K</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\frac{B}{AK})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Atcoder/AtCoder%20Beginner%20Contest%20248/AtCoder%20Beginner%20Contest%20248/U%7EO%40K272%246%7D2%5DH4N54A%2949E.png" alt=""></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = <span class="number">2e5</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">32768</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    ll a,b,k;</span><br><span class="line">    std::cin&gt;&gt;a&gt;&gt;b&gt;&gt;k;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b &gt; a)cnt++,a *= k;</span><br><span class="line">    std::cout&lt;&lt;cnt;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="c-dice-sum"><a class="markdownIt-Anchor" href="#c-dice-sum"></a> C - Dice Sum</h2><p><strong>题意：</strong></p><blockquote><p>现要求找到一个长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>的序列，对于其中的每一个元素，满足如下要求：</p><blockquote><ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><msub><mi>A</mi><mi>i</mi></msub><mo>≤</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">1\leq A_i\leq M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msub><mi>A</mi><mi>i</mi></msub><mo>≤</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">\sum _{i=1}^{N}A_i\leq K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span></li></ol></blockquote><p>询问满足要求的序列个数。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>考虑动态规划</p><p>设有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>N</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>K</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[N][K]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">]</span></span></span></span>：</p><blockquote><ol><li>第一维表示当前序列长度</li><li>第二维表示当前序列的和</li><li>数组的值表示方案数</li></ol></blockquote><p>枚举所有长度以及序列和，进行状态转移即可。</p></blockquote><p>转移方程：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= m ; j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> o = i + j - <span class="number">1</span>; o &lt;= k ; o++)</span><br><span class="line">            {</span><br><span class="line">                dp[i][o] = (dp[i][o] + dp[i<span class="number">-1</span>][o-j])%mod;</span><br><span class="line">            }</span><br></pre></td></tr></table></figure><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mi>K</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(NK)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Atcoder/AtCoder%20Beginner%20Contest%20248/AtCoder%20Beginner%20Contest%20248/%28LM%7B4TAT5UY%25N3D8%5DBT%29%7DZC.png" alt=""></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">60</span>,M = <span class="number">2e5</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line">ll dp[N][N*N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> n,m,k;</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= m ; j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> o = i + j - <span class="number">1</span>; o &lt;= k ; o++)</span><br><span class="line">            {</span><br><span class="line">                dp[i][o] = (dp[i][o] + dp[i<span class="number">-1</span>][o-j])%mod;</span><br><span class="line">            }</span><br><span class="line">    ll sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n ; i&lt;= k ; i++)sum = (sum + dp[n][i])%mod;</span><br><span class="line">    std::cout&lt;&lt;sum;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="d-range-count-query"><a class="markdownIt-Anchor" href="#d-range-count-query"></a> D - Range Count Query</h2><p><strong>题意：</strong></p><blockquote><p>给定一个长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>的序列，和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>个询问，询问格式如下：</p><blockquote><p>给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo separator="true">,</mo><mi>R</mi><mo separator="true">,</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">L,R,X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>,要求输出序列中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>区间内值为$X的个数。</p></blockquote></blockquote><p><strong>思路：</strong></p><blockquote><p>因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><msub><mi>A</mi><mi>i</mi></msub><mo>≤</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">1\leq A_i\leq N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，所以我们可以用一个数组，把每一个数字的所有下标分别存起来，然后用二分解决询问即可。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>q</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(qlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Atcoder/AtCoder%20Beginner%20Contest%20248/AtCoder%20Beginner%20Contest%20248/7%24HC7%7DA5%7E%28SKIB3P%60D%5B35MO.png" alt=""></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = <span class="number">2e5</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="type">int</span>&gt; v[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> n,q;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        std::cin&gt;&gt;x;</span><br><span class="line">        v[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">    }</span><br><span class="line">    std::cin&gt;&gt;q;</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> l,r,x;</span><br><span class="line">        std::cin&gt;&gt;l&gt;&gt;r&gt;&gt;x;</span><br><span class="line">        <span class="keyword">auto</span> it1 = std::<span class="built_in">lower_bound</span>(v[x].<span class="built_in">begin</span>(),v[x].<span class="built_in">end</span>(),l);</span><br><span class="line">        <span class="keyword">if</span>(it1==v[x].<span class="built_in">end</span>())</span><br><span class="line">        {</span><br><span class="line">            std::cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">auto</span> it2 = std::<span class="built_in">upper_bound</span>(v[x].<span class="built_in">begin</span>(),v[x].<span class="built_in">end</span>(),r);</span><br><span class="line">        <span class="keyword">if</span>(it2==v[x].<span class="built_in">begin</span>())</span><br><span class="line">        {</span><br><span class="line">            std::cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">        it2--;</span><br><span class="line">        std::cout&lt;&lt;(it2-it1<span class="number">+1</span>)&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="e-k-colinear-line"><a class="markdownIt-Anchor" href="#e-k-colinear-line"></a> E - K-colinear Line</h2><p><strong>题意：</strong></p><blockquote><p>在坐标平面内存在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>个点，每个点的坐标为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(X_i,Y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，询问存在多少条不同的直线，穿过至少<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>个点。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>因为两点可以确定一条直线，而且点数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>≤</mo><mn>300</mn></mrow><annotation encoding="application/x-tex">N\leq 300</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">0</span><span class="mord">0</span></span></span></span>，所以可以进行如下处理：</p><blockquote><ol><li>两两枚举所有的点</li><li>在确定完一条直线后，枚举所有的点判断这条直线穿过了多少点</li></ol></blockquote><p>三个点在一条直线上，显然有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>A</mi><mi>C</mi></mrow><mo>⃗</mo></mover><mo>=</mo><mi>k</mi><mover accent="true"><mrow><mi>A</mi><mi>B</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{AC}=k \vec{AB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9663299999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9663299999999999em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><msub><mi>y</mi><mn>3</mn></msub><mo>−</mo><msub><mi>y</mi><mn>2</mn></msub></mrow><mrow><msub><mi>x</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><msub><mi>y</mi><mn>3</mn></msub><mo>−</mo><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><msub><mi>x</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac><mo>⇒</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mn>3</mn></msub><mo>−</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mn>3</mn></msub><mo>−</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{y_3-y_2}{x_3-x_2}=\frac{y_3-y_1}{x_3-x_1}\Rightarrow(y_3-y_2)(x_3-x_1)=(x_3-x_2)(y_3-y_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2995389999999998em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854439em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2995389999999998em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854439em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>将所有满足条件的直线统计出来即可。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Atcoder/AtCoder%20Beginner%20Contest%20248/AtCoder%20Beginner%20Contest%20248/071690%602%28%60YJ%604WK%7DRJ%7BEDI.png" alt=""></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">310</span>,M = <span class="number">2e5</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>{</span><br><span class="line">    ll x,y;</span><br><span class="line">}a[N];</span><br><span class="line"><span class="type">bool</span> book[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">OK</span><span class="params">(Node x,Node y,Node z)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> (z.y-y.y)*(z.x-x.x)==(z.y-x.y)*(z.x-y.x);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        std::cout&lt;&lt;<span class="string">"Infinity"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)std::cin&gt;&gt;a[i].x&gt;&gt;a[i].y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; n ; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = i + <span class="number">1</span> ; j &lt;= n ; j++)</span><br><span class="line">            <span class="keyword">if</span>(!book[i][j])</span><br><span class="line">            {</span><br><span class="line">                <span class="type">int</span> cnt = <span class="number">2</span>;</span><br><span class="line">                std::vector&lt;<span class="type">int</span>&gt; b;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> o = <span class="number">1</span> ; o &lt;= n ; o++)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">if</span>(o == i || o == j)<span class="keyword">continue</span>;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="built_in">OK</span>(a[i],a[j],a[o]))</span><br><span class="line">                    {</span><br><span class="line">                        cnt++;</span><br><span class="line">                        b.<span class="built_in">push_back</span>(o);</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                b.<span class="built_in">push_back</span>(i);</span><br><span class="line">                b.<span class="built_in">push_back</span>(j);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">auto</span> x : b)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">auto</span> y : b)book[x][y] = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span>(cnt &gt;= k)ans++;</span><br><span class="line">            }</span><br><span class="line">    std::cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="f-keep-connect"><a class="markdownIt-Anchor" href="#f-keep-connect"></a> F - Keep Connect</h2><p><strong>题意：</strong></p><blockquote><p>给出这样的一个连通图，对于每一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i(1\leq i\leq n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，输出删除<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>条边并且仍然保持连通性的方案数。<br><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Atcoder/AtCoder%20Beginner%20Contest%20248/AtCoder%20Beginner%20Contest%20248/HQBQUN%29N%7E4W1C%24TJQ7Y%28EUU.png" alt=""></p></blockquote><p><strong>思路：</strong></p><blockquote><p>考虑动态规划</p><p>设有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][j][2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span></span></span></span>:</p><blockquote><ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>表示前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>组点</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>表示删除的边数</li><li>第三维记录的是第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>组点之间的连通性(第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>组的两个点当前能否连通)</li><li>数组值表示方案数<br><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Atcoder/AtCoder%20Beginner%20Contest%20248/AtCoder%20Beginner%20Contest%20248/2.png" alt=""></li></ol></blockquote><p>我们用三个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mi>o</mi><mi>o</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">bool</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">o</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">a,b,c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span></span></span></span>来代表三条边，表示这条边是否删除。</p><blockquote><ol><li>那么当第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>组点是不连通的时候，显然是要保证<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span></span></span></span>两条边都相连，否则整张图必然失去连通性。</li><li>当第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>组点是连通的时候，我们只需要保证<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span></span></span></span>有一条边是连通的即可，如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">a,b,c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span></span></span></span>三边中相连了至少两条边，那么就可以保证第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>组点是连通的。<br><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Atcoder/AtCoder%20Beginner%20Contest%20248/AtCoder%20Beginner%20Contest%20248/3.png" alt=""></li></ol></blockquote></blockquote><p>有转移方程</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!k)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span>(!a||!b)<span class="keyword">continue</span>;</span><br><span class="line">    dp[i<span class="number">+1</span>][j<span class="number">+1</span>-c][c] = (dp[i<span class="number">+1</span>][j<span class="number">+1</span>-dp[i][j][k])%Mod;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span>(!a&amp;&amp;!b)<span class="keyword">continue</span>;</span><br><span class="line">    dp[i<span class="number">+1</span>][j<span class="number">+3</span>-a-b-c][(a+b+c)&gt;=<span class="number">2</span>] = [j<span class="number">+3</span>-a-b-c][(a+b+c)&gt;=<span class="number">2</span>] + dp[i%Mod;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Atcoder/AtCoder%20Beginner%20Contest%20248/AtCoder%20Beginner%20Contest%20248/4%7EXO%5B%25R%29%25A8NHXEKU51HFIJ.png" alt=""></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">3010</span>,M = <span class="number">2e5</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line">ll dp[N][N][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    dp[<span class="number">1</span>][<span class="number">0</span>][<span class="number">1</span>] = dp[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    ll Mod;</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;Mod;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; n ; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt;= n ; j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span> ; k &lt; <span class="number">2</span> ; k++)</span><br><span class="line">                <span class="keyword">if</span>(dp[i][j][k])</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> a = <span class="number">0</span> ; a &lt; <span class="number">2</span> ; a++)</span><br><span class="line">                        <span class="keyword">for</span>(<span class="type">int</span> b = <span class="number">0</span> ; b &lt; <span class="number">2</span> ; b++)</span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> c = <span class="number">0</span> ; c &lt; <span class="number">2</span> ; c++)</span><br><span class="line">                            {</span><br><span class="line">                               <span class="keyword">if</span>(!k)</span><br><span class="line">                               {</span><br><span class="line">                                   <span class="keyword">if</span>(!a||!b)<span class="keyword">continue</span>;</span><br><span class="line">                                   dp[i<span class="number">+1</span>][j<span class="number">+1</span>-c][c] = (dp[i<span class="number">+1</span>][j<span class="number">+1</span>-c][c] + dp[i][j][k])%Mod;</span><br><span class="line">                               }</span><br><span class="line">                               <span class="keyword">else</span></span><br><span class="line">                               {</span><br><span class="line">                                   <span class="keyword">if</span>(!a&amp;&amp;!b)<span class="keyword">continue</span>;</span><br><span class="line">                                   dp[i<span class="number">+1</span>][j<span class="number">+3</span>-a-b-c][(a+b+c)&gt;=<span class="number">2</span>] = (dp[i<span class="number">+1</span>][j<span class="number">+3</span>-a-b-c][(a+b+c)&gt;=<span class="number">2</span>] + dp[i][j][k])%Mod;</span><br><span class="line">                               }</span><br><span class="line">                            }</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; n ; i++)std::cout&lt;&lt;dp[n][i][<span class="number">1</span>]&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="ex-beautiful-subsequences"><a class="markdownIt-Anchor" href="#ex-beautiful-subsequences"></a> Ex - Beautiful Subsequences</h2><p><strong>题意：</strong></p><blockquote><p>给定一个长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>的全排列,询问满足如下条件的区间个数：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>L</mi><mo>≤</mo><mi>R</mi><mo>≤</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">1\leq L\leq R\leq N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>P</mi><mi>L</mi></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>P</mi><mi>R</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>P</mi><mi>L</mi></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>P</mi><mi>R</mi></msub><mo stretchy="false">)</mo><mo>≤</mo><mi>R</mi><mo>−</mo><mi>L</mi><mo>+</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">max(P_L,\dots,P_R)-min(P_L,\dots,P_R)\leq R-L+K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span></li></ul></blockquote><p><strong>思路：</strong></p><blockquote><p><strong>线段树+单调栈：</strong></p><blockquote><ol><li>线段树：我们先固定一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>,然后尝试去维护一个序列，这个序列中的第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个点记录的值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>P</mi><mi>R</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>P</mi><mi>R</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mi>R</mi><mo>+</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">max(P_i,\dots,P_R)-min(P_i,\dots,P_R)-R+i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>，如果这个值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mo>≤</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">val\leq K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>,那么这个点所代表的区间就是一个合法区间，此外，因为这个序列是全排列，所以不难发现<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">val</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>不会是负数。我们用线段树去维护这一段区间，区间内记录<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">val</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>的最小值，并且记录下<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>v</mi><mi>a</mi><mi>l</mi><mo>+</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>v</mi><mi>a</mi><mi>l</mi><mo>+</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">val+1,val+2,\dots,val+k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>的点的个数。<br>然后就可以通过根节点的信息推知答案。</li><li>单调栈：我们可以通过单调栈动态的确定区间最值，确定完最值以后通过线段树区间修改即可。</li></ol></blockquote></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mi>K</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(NKlogN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br><img src="https://skynesserblog.oss-cn-hangzhou.aliyuncs.com/Atcoder/AtCoder%20Beginner%20Contest%20248/AtCoder%20Beginner%20Contest%20248/%7E%7EX0VT2W9%5B%5BW%5D02EUZ9%40%609S.png" alt=""></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">150000</span>,M = <span class="number">2e5</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>{</span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">    <span class="type">int</span> val,add,cnt[<span class="number">4</span>];</span><br><span class="line">}tr[N*<span class="number">4</span>];</span><br><span class="line"><span class="type">int</span> w[N],k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    tr[u].val = std::<span class="built_in">min</span>(tr[u&lt;&lt;<span class="number">1</span>].val,tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt;= k ; i++)</span><br><span class="line">    {</span><br><span class="line">        tr[u].cnt[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> temp = tr[u].val - tr[u&lt;&lt;<span class="number">1</span>].val + i;</span><br><span class="line">        <span class="keyword">if</span>(temp &gt;= <span class="number">0</span>)tr[u].cnt[i] += tr[u&lt;&lt;<span class="number">1</span>].cnt[temp];</span><br><span class="line">        temp = tr[u].val - tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val + i;</span><br><span class="line">        <span class="keyword">if</span>(temp &gt;= <span class="number">0</span>)tr[u].cnt[i] += tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].cnt[temp];</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(tr[u].add)</span><br><span class="line">    {</span><br><span class="line">        tr[u&lt;&lt;<span class="number">1</span>].val += tr[u].add;</span><br><span class="line">        tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val += tr[u].add;</span><br><span class="line">        tr[u&lt;&lt;<span class="number">1</span>].add += tr[u].add;</span><br><span class="line">        tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].add += tr[u].add;</span><br><span class="line">        tr[u].add = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    {</span><br><span class="line">        tr[u] = {l,r};</span><br><span class="line">        tr[u].cnt[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        tr[u].val = INF;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        tr[u] = {l,r};</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">build</span>(u&lt;&lt;<span class="number">1</span>,l,mid),<span class="built_in">build</span>(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid<span class="number">+1</span>,r);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(l &gt; r)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(tr[u].l &gt;= l &amp;&amp; tr[u].r &lt;= r)</span><br><span class="line">    {</span><br><span class="line">        tr[u].val += v;</span><br><span class="line">        tr[u].add += v;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">pushdown</span>(u);</span><br><span class="line">        <span class="type">int</span> mid = tr[u].l + tr[u].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(l &lt;= mid)<span class="built_in">modify</span>(u&lt;&lt;<span class="number">1</span>,l,r,v);</span><br><span class="line">        <span class="keyword">if</span>(r &gt; mid)<span class="built_in">modify</span>(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r,v);</span><br><span class="line">        <span class="built_in">pushup</span>(u);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)std::cin&gt;&gt;w[i];</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    std::stack&lt;std::pair&lt;std::pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;,<span class="type">int</span>&gt;&gt; stk1,stk2;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">modify</span>(<span class="number">1</span>,i,i,-INF);</span><br><span class="line">        <span class="built_in">modify</span>(<span class="number">1</span>,<span class="number">1</span>,i<span class="number">-1</span>,<span class="number">-1</span>);</span><br><span class="line">        <span class="type">int</span> x1 = i,x2 = i;</span><br><span class="line">        <span class="keyword">while</span>(!stk<span class="number">1.</span><span class="built_in">empty</span>())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(w[i] &lt; stk<span class="number">1.</span><span class="built_in">top</span>().second)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">modify</span>(<span class="number">1</span>,stk<span class="number">1.</span><span class="built_in">top</span>().first.first,stk<span class="number">1.</span><span class="built_in">top</span>().first.second,stk<span class="number">1.</span><span class="built_in">top</span>().second);</span><br><span class="line">                x1 = stk<span class="number">1.</span><span class="built_in">top</span>().first.first;</span><br><span class="line">                stk<span class="number">1.</span><span class="built_in">pop</span>();</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span>(!stk<span class="number">2.</span><span class="built_in">empty</span>())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(w[i] &gt; stk<span class="number">2.</span><span class="built_in">top</span>().second)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">modify</span>(<span class="number">1</span>,stk<span class="number">2.</span><span class="built_in">top</span>().first.first,stk<span class="number">2.</span><span class="built_in">top</span>().first.second,-stk<span class="number">2.</span><span class="built_in">top</span>().second);</span><br><span class="line">                x2 = stk<span class="number">2.</span><span class="built_in">top</span>().first.first;</span><br><span class="line">                stk<span class="number">2.</span><span class="built_in">pop</span>();</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        stk<span class="number">1.</span><span class="built_in">push</span>({{x1,i},w[i]});</span><br><span class="line">        stk<span class="number">2.</span><span class="built_in">push</span>({{x2,i},w[i]});</span><br><span class="line">        <span class="built_in">modify</span>(<span class="number">1</span>,x1,i,-w[i]);</span><br><span class="line">        <span class="built_in">modify</span>(<span class="number">1</span>,x2,i,w[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> c = <span class="number">0</span> ; c &lt;= k ; c++)</span><br><span class="line">            <span class="keyword">if</span>(tr[<span class="number">1</span>].val + c &lt;= k)ans += tr[<span class="number">1</span>].cnt[c];</span><br><span class="line">    }</span><br><span class="line">    std::cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><blockquote><p>此外，大家也可以看<a href="https://www.bilibili.com/video/BV1v44y1G7qj">dls的视频讲解</a>，在这里附上链接</p></blockquote><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="https://www.bilibili.com/video/BV1v44y1G7qj" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Atcoder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces Round 781 (Div. 2)</title>
      <link href="/2022/04/12/Codeforces-Round-781-Div-2/"/>
      <url>/2022/04/12/Codeforces-Round-781-Div-2/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/3e0c9e6545784e64b4cf89832e9fc83f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2t5bmVzc2Vy,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述" /></p><hr /><h2 id="a-gcd-vs-lcm"><a class="markdownIt-Anchor" href="#a-gcd-vs-lcm"></a> A. GCD vs LCM</h2><p><strong>题意：</strong></p><blockquote><p>给定数n，找到a,b,c,d四个数满足下列条件：</p><blockquote><p>1.<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mo>+</mo><mi>c</mi><mo>+</mo><mi>d</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">a+b+c+d=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span><br />2.<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>l</mi><mi>c</mi><mi>m</mi><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(a,b)=lcm(c,d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">c</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span></p></blockquote></blockquote><p><strong>思路：</strong></p><blockquote><p>取特殊情况，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">gcd(a,b)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>即可。<br />即构造<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>b</mi><mo>=</mo><mi>n</mi><mo>−</mo><mn>3</mn><mo separator="true">,</mo><mi>c</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>d</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a=1,b=n-3,c=1,d=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p>所需时间与输入规模无关:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/69cc329cf70d4bf98dc95222e120f632.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e2</span><span class="number">+10</span>,M = <span class="number">2e5</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    std::cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;n<span class="number">-3</span>&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    std::ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="comment">//    std::cin.tie(nullptr);</span></span><br><span class="line"><span class="comment">//    std::cout.tie(nullptr);</span></span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr /><h2 id="b-array-cloning-technique"><a class="markdownIt-Anchor" href="#b-array-cloning-technique"></a> B. Array Cloning Technique</h2><p><strong>题意：</strong></p><blockquote><p>给定一个长度为n的初始数组副本，你可以进行以下两种操作：</p><blockquote><ol><li>选择任意一个数组副本，将其复制出一个新的数组副本。</li><li>选择两个数组副本，交换它们的两个元素。</li></ol></blockquote><p>询问将其中任意一个数组副本的全部元素变相同的最少操作次数。</p></blockquote><p><strong>思路：</strong></p><blockquote><ol><li>首先，我们贪心的选择第一个数组副本作为目标，将这个数组的全部元素变成相同。</li><li>然后，我们记录下初始数组副本中的最大相同数字出现次数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">max</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span></span></span></span>,那么将其他所有元素变成相同的交换(操作1)次数显然是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">n-max</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span></span></span></span>。</li><li>接着我们计算复制数组副本的次数(操作2)，我们不难发现每次复制并交换结束后，相同数的个数都会翻倍，所以我们通过这种方式找到最小复制次数即可。</li></ol><p>最后，将操作1和操作2的次数相加即可。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p>统计相同数字的最大出现次数中使用了map来完成，所以时间复杂度为：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/bee7ce6348544de49308edbfe0afd11b.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e2</span><span class="number">+10</span>,M = <span class="number">2e5</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> max = <span class="number">0</span>;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    std::map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        std::cin&gt;&gt;x;</span><br><span class="line">        mp[x]++;</span><br><span class="line">        <span class="keyword">if</span>(mp[x] &gt; max)max = mp[x];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>,cnt = n - max;</span><br><span class="line">    <span class="keyword">if</span>(cnt==<span class="number">0</span>)std::cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(;max &lt; n;max &lt;&lt;= <span class="number">1</span>)res++;</span><br><span class="line">        res += cnt;</span><br><span class="line">        std::cout&lt;&lt;res&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    std::ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="comment">//    std::cin.tie(nullptr);</span></span><br><span class="line"><span class="comment">//    std::cout.tie(nullptr);</span></span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr /><h2 id="c-tree-infection"><a class="markdownIt-Anchor" href="#c-tree-infection"></a> C. Tree Infection</h2><p><strong>题意：</strong></p><blockquote><p>给定一棵树，现在要去感染这棵树的全部节点，我们可以在每个单位时间内执行以下两种操作(同时进行)：</p><blockquote><ol><li>对于所有的节点，如果他的某个孩子节点被感染，那么可以感染一个其它健康的孩子节点。<br />2.任意选择一个健康的节点，并感染它。</li></ol></blockquote><p>询问将整棵树感染的最少时间。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>首先，我们可以发现，感染传播(操作1)只会在一个个&quot;孩子群体&quot;中进行，实际上感染与树并没有太大的关系，我们完全可以把这一个个&quot;孩子群体&quot;取出来。<br />还是举个例子(第一个案例)：</p><blockquote><p>7<br />1 1 1 2 2 4<br />很显然，这里的&quot;群体&quot;有这些：<br />{1},{2,3,4},{5,6},{7}</p></blockquote><p>我们可以先把所有的群体找出来，然后采用贪心策略，从数量大的群体开始感染，采用如下判断方法：</p><blockquote><ol><li>我们从大到小感染所有&quot;群体&quot;(依次对所有&quot;群体&quot;使用操作1一次，然后让它们内部传播)，我们记录下完成上述操作后所有群体还剩下的未感染个数(如果已经全部感染则不用管)。</li><li>如果此时还有剩余节点未被感染，我们让它们内部传播，并手动感染剩余节点最多的&quot;群体&quot;。</li></ol></blockquote><p>即在贪心后模拟感染的过程(实现上可能还是有点复杂了)。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p>使用了map和优先队列，总时间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/16d3352593b742aba78eca793a507b5d.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e2</span><span class="number">+10</span>,M = <span class="number">2e5</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,t = <span class="number">0</span>;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    std::priority_queue&lt;<span class="type">int</span>&gt; que;</span><br><span class="line">    std::map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line">    mp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        std::cin&gt;&gt;x;</span><br><span class="line">        mp[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    std::vector&lt;<span class="type">int</span>&gt; num;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> map : mp)num.<span class="built_in">push_back</span>(map.second);<span class="comment">//从大到小排序&quot;群体&quot;</span></span><br><span class="line">    std::<span class="built_in">sort</span>(num.<span class="built_in">begin</span>(),num.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> val : num)<span class="comment">//第一步</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(val - <span class="number">1</span> - t &gt; <span class="number">0</span>)que.<span class="built_in">push</span>(val - <span class="number">1</span> - t);</span><br><span class="line">        t++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(que.<span class="built_in">empty</span>()||que.<span class="built_in">top</span>() - res &lt;= <span class="number">0</span>)<span class="keyword">break</span>;<span class="comment">//第二步</span></span><br><span class="line">        que.<span class="built_in">push</span>(que.<span class="built_in">top</span>()<span class="number">-1</span>);</span><br><span class="line">        que.<span class="built_in">pop</span>();</span><br><span class="line">        res++;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;res+t&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    std::ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="comment">//    std::cin.tie(nullptr);</span></span><br><span class="line"><span class="comment">//    std::cout.tie(nullptr);</span></span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr /><h2 id="d-gcd-guess"><a class="markdownIt-Anchor" href="#d-gcd-guess"></a> D. GCD Guess</h2><p><strong>题意：</strong></p><blockquote><p>交互题：<br />先要猜测一个整数x的大小，你可以按照以下规则询问最多30次：</p><blockquote><p>给出数字<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>，返回<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mi>x</mi><mo separator="true">,</mo><mi>b</mi><mo>+</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(a+x,b+x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></p></blockquote></blockquote><p><strong>思路：</strong></p><blockquote><p>30次的询问次数，我们应该尝试从位的角度取解决。<br />那么我们怎么知道每一位取0还是1呢，按照如下方法：</p><blockquote><ol><li>假设我们已知<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><msup><mn>2</mn><mi>k</mi></msup><mo>=</mo><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">x\ mod\ 2^k = ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace"> </span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span></span></span></span></li><li>那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>−</mo><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">x-ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span></span></span></span>的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>位应该全是0</li><li>我们可以用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo separator="true">,</mo><msup><mn>2</mn><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(x-ans,2^{k+1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是否等于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>来判断<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>位取0还是1。</li><li>若等于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>，则取1，若不等，则取0。</li><li>此时询问的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mo>−</mo><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">a=-ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span></span></span></span>，而询问数应该大于0，所以我们询问<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo>+</mo><msup><mn>2</mn><mi>k</mi></msup><mo separator="true">,</mo><msup><mn>2</mn><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(x-ans+2^{k},2^{k+1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li><li>若等于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>，则取0，若不等，则取1。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo>+</mo><msup><mn>2</mn><mi>k</mi></msup><mo separator="true">,</mo><msup><mn>2</mn><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo>+</mo><msup><mn>2</mn><mi>k</mi></msup><mo separator="true">,</mo><msup><mn>2</mn><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>+</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo>+</mo><msup><mn>2</mn><mi>k</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(x-ans+2^{k},2^{k+1})=gcd(x-ans+2^{k},2^{k+1}+(x-ans+2^{k}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>（这个转换是为了凑出a和b）,所以询问为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mo>−</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo>+</mo><msup><mn>2</mn><mi>k</mi></msup><mo separator="true">,</mo><mi>b</mi><mo>=</mo><mo>−</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo>+</mo><msup><mn>2</mn><mi>k</mi></msup><mo>+</mo><msup><mn>2</mn><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">a=-ans+2^k,b=-ans+2^k+2^{k+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.932438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>。</li></ol></blockquote></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p>我们每次询问可以确定数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>的某一位：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/62afe2ea13ac4c5bbeec96fc44644586.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e2</span><span class="number">+10</span>,M = <span class="number">2e5</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout&lt;&lt;<span class="string">&quot;? &quot;</span>&lt;&lt;x&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;y&lt;&lt;std::endl;</span><br><span class="line">    <span class="type">int</span> res;</span><br><span class="line">    std::cin&gt;&gt;res;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= <span class="number">30</span> ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="built_in">query</span>((<span class="number">1</span>&lt;&lt;i<span class="number">-1</span>)-ans,(<span class="number">1</span>&lt;&lt;i)+(<span class="number">1</span>&lt;&lt;i<span class="number">-1</span>)-ans);</span><br><span class="line">        <span class="keyword">if</span>(res != (<span class="number">1</span>&lt;&lt;i<span class="number">-1</span>))ans += (<span class="number">1</span>&lt;&lt;i<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;<span class="string">&quot;! &quot;</span>&lt;&lt;ans&lt;&lt;std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    std::ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="comment">//    std::cin.tie(nullptr);</span></span><br><span class="line"><span class="comment">//    std::cout.tie(nullptr);</span></span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr /><h2 id="e-minimizor"><a class="markdownIt-Anchor" href="#e-minimizor"></a> E. MinimizOR</h2><p><strong>题意：</strong></p><blockquote><p>给定长度为n的数组，定义花费为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mtext> </mtext><mo stretchy="false">!</mo><mo>=</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_i|a_j(i\ !=j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace"> </span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>，现在给出q个询问：</p><blockquote><p>给出整数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>，找出区间内的最小花费。</p></blockquote></blockquote><p><strong>思路：</strong></p><blockquote><p>本题最重要的是证明一个性质：</p><blockquote><p>如果区间内的最大数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>&lt;</mo><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">A_{max} &lt; 2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>(即最大数不超过k位),那么答案一定在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个区间最小数内按位或产生。<br />证明如下：</p><blockquote><p>对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>,只有0和1两个数，显然成立。<br />现在我们将设结论对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>成立，我们尝试证明对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>也成立。<br />分类讨论：</p><ol><li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>位全是1，那么答案必然出现在之前已经选择的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个数中，而且此时选择的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个最小数与之前应该是一致的。</li><li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>位0的个数大于等于2，那么答案必然出现在之前已经选择的k+1个数中，而且此时选择的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个最小数与之前应该是一致的。</li><li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>位0的个数恰好等于1，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>应该取1，所以答案还是出现在之前选择的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个数中，但是此时选择的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个最小数与之前不一定一致，因为最坏情况就是之前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>位全是1，而此时<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>位是0的一个数会取代其中的一个数，所以我们这个时候要多取一个数，取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">k+2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>个最小数即可。</li></ol></blockquote></blockquote><blockquote><p>通过以上说明，我们证明结论：</p><blockquote><p>如果区间内的最大数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>&lt;</mo><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">A_{max} &lt; 2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>(即最大数不超过k位),那么答案一定在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个区间最小数内按位或产生</p></blockquote></blockquote><p>现在的任务就是找到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>区间最小数，这个可以用线段树完成。<br />此外，因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">A_{max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的范围并不会很大，所以我们每次并不会真的求出它，我们每次都假定它在边界最大值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>=</mo><msup><mn>2</mn><mn>30</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">A_{max}=2^{30}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，所以每次最多找到31个最小数。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p>这题的常数会特别大，因为每次询问都需要查找最多31次。<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>q</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>m</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo>+</mo><msup><mi>m</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>m</mi><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>r</mi><mo>−</mo><mi>l</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mn>31</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(q*(mlogn+m^2))(m=min(r-l+1,31))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/4a16027cb1fb4304af68c7cd2afe335e.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span><span class="number">+10</span>,M = <span class="number">2e5</span><span class="number">+10</span>,INF = (<span class="number">1ll</span>&lt;&lt;<span class="number">31</span>)<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">    <span class="type">int</span> l,r,v,id;</span><br><span class="line">&#125;tr[N*<span class="number">4</span>];</span><br><span class="line"><span class="type">int</span> w[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tr[u].v = std::<span class="built_in">min</span>(tr[u&lt;&lt;<span class="number">1</span>].v,tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].v);</span><br><span class="line">    <span class="keyword">if</span>(tr[u&lt;&lt;<span class="number">1</span>].v &lt; tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].v)tr[u].id = tr[u&lt;&lt;<span class="number">1</span>].id;</span><br><span class="line">    <span class="keyword">else</span> tr[u].id = tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    &#123;</span><br><span class="line">        tr[u] = &#123;l,r,w[r],r&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        tr[u] = &#123;l,r&#125;;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">build</span>(u&lt;&lt;<span class="number">1</span>,l,mid),<span class="built_in">build</span>(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid<span class="number">+1</span>,r);</span><br><span class="line">        <span class="built_in">pushup</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; <span class="title">query</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tr[u].l &gt;= l &amp;&amp; tr[u].r &lt;= r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> std::<span class="built_in">make_pair</span>(tr[u].v,tr[u].id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = tr[u].l + tr[u].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        std::pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; ans = &#123;INF,INF&#125;;</span><br><span class="line">        <span class="keyword">if</span>(l &lt;= mid)ans = std::<span class="built_in">min</span>(ans,<span class="built_in">query</span>(u&lt;&lt;<span class="number">1</span>,l,r));</span><br><span class="line">        <span class="keyword">if</span>(r &gt; mid)ans = std::<span class="built_in">min</span>(ans,<span class="built_in">query</span>(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r));</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> x,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tr[u].l==x&amp;&amp;tr[u].r==x)</span><br><span class="line">    &#123;</span><br><span class="line">        tr[u].v = v;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = tr[u].l + tr[u].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(x &lt;= mid)<span class="built_in">modify</span>(u&lt;&lt;<span class="number">1</span>,x,v);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">modify</span>(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,x,v);</span><br><span class="line">        <span class="built_in">pushup</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,q;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)std::cin&gt;&gt;w[i];</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    std::cin&gt;&gt;q;</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l,r;</span><br><span class="line">        std::vector&lt;<span class="type">int</span>&gt; res,id;</span><br><span class="line">        std::cin&gt;&gt;l&gt;&gt;r;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= std::<span class="built_in">min</span>(<span class="number">31</span>,r - l + <span class="number">1</span>) ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            std::pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; temp = <span class="built_in">query</span>(<span class="number">1</span>,l,r);</span><br><span class="line">            res.<span class="built_in">push_back</span>(temp.first);</span><br><span class="line">            id.<span class="built_in">push_back</span>(temp.second);</span><br><span class="line">            <span class="built_in">modify</span>(<span class="number">1</span>,temp.second,INF);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans = INF;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; res.<span class="built_in">size</span>() ; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = i + <span class="number">1</span> ; j &lt; res.<span class="built_in">size</span>() ; j++)ans = std::<span class="built_in">min</span>(ans,res[i]|res[j]);</span><br><span class="line">        std::cout&lt;&lt;ans&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> _id : id)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">modify</span>(<span class="number">1</span>,_id,w[_id]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces Round 780 (Div. 3)</title>
      <link href="/2022/04/12/Codeforces-Round-780-Div-3/"/>
      <url>/2022/04/12/Codeforces-Round-780-Div-3/</url>
      
        <content type="html"><![CDATA[<h2 id="a-vasya-and-coins"><a class="markdownIt-Anchor" href="#a-vasya-and-coins"></a> A. Vasya and Coins</h2><p><strong>题意：</strong></p><blockquote><p>小明有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>枚1元硬币和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>枚2元硬币，输出小明无法支付的最小金额。</p></blockquote><p><strong>思路：</strong></p><blockquote><ol><li>没有1元硬币：</li></ol><blockquote><p>答案为1</p></blockquote><ol start="2"><li>有1元硬币：</li></ol><blockquote><p>答案为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>+</mo><mn>2</mn><mo>∗</mo><mi>b</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a+2*b+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p></blockquote></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/bc0d0d82bbfc435e99dd480b21eb9bd2.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">在这里插入代码片<span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">20</span>,M = <span class="number">2e4</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    std::cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">if</span>(!a)</span><br><span class="line">    &#123;</span><br><span class="line">        std::cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;a+b*<span class="number">2</span><span class="number">+1</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="b-vlad-and-candies"><a class="markdownIt-Anchor" href="#b-vlad-and-candies"></a> B. Vlad and Candies</h2><p><strong>题意：</strong></p><blockquote><p>有n种糖果，每个糖果有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>份。</p><blockquote><p>每次都吃掉份数最多的糖果，但是小明不希望连续两次吃一样的糖果，他是否可以按照这个要求吃掉所有糖果。</p></blockquote></blockquote><p><strong>思路：</strong></p><blockquote><p>只需要考虑最大值和次大值即可。</p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>最大值</mtext><mo>−</mo><mtext>次大值</mtext><mo>&gt;</mo><mn>1</mn><mo>:</mo><mi>N</mi><mi>O</mi></mrow><annotation encoding="application/x-tex">最大值 - 次大值 &gt; 1:NO</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">值</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">次</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">值</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>最大值</mtext><mo>−</mo><mtext>次大值</mtext><mo>≤</mo><mn>1</mn><mo>:</mo><mi>Y</mi><mi>E</mi><mi>S</mi></mrow><annotation encoding="application/x-tex">最大值 - 次大值 \leq 1:YES</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">值</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord cjk_fallback">次</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">值</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></p></blockquote></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/9ea9e5afcc554493a150aa81f7b8dc78.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">20</span>,M = <span class="number">2e4</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> max1 = <span class="number">0</span>,max2 = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        std::cin&gt;&gt;x;</span><br><span class="line">        <span class="keyword">if</span>(x &gt; max1)std::<span class="built_in">swap</span>(max1,x);</span><br><span class="line">        <span class="keyword">if</span>(x &gt; max2)std::<span class="built_in">swap</span>(max2,x);</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;(max1-max2 &gt; <span class="number">1</span> ?<span class="string">&quot;NO&quot;</span>:<span class="string">&quot;YES&quot;</span>)&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="c-get-an-even-string"><a class="markdownIt-Anchor" href="#c-get-an-even-string"></a> C. Get an Even String</h2><p><strong>题意：</strong></p><blockquote><p>给定一个字符串S，要求你删除最少的字母，让字符串S满足如下要求：</p><blockquote><ol><li>长度为偶数</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>=</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>i</mi><mtext>为奇数</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_{i}=a_{i+1}(i为奇数)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">奇</span><span class="mord cjk_fallback">数</span><span class="mclose">)</span></span></span></span></li></ol></blockquote></blockquote><p><strong>思路：</strong></p><blockquote><p>很显然，我们要把相同的字母匹配起来。<br />我们考虑如下贪心策略:</p><blockquote><p>形如测试案例：bmefbmuyw</p><ol><li>删除字母最少，就是保留字母最多</li><li>我们把上述字符串中，最近的匹配字母取出，组成区间</li><li>有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>5</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mo stretchy="false">[</mo><mn>2</mn><mo separator="true">,</mo><mn>6</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1,5],[2,6]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mclose">]</span></span></span></span></li><li>即在这些区间中，找到尽可能多的不相交区间。</li><li>而选择的标准就是右端点越小，那么选择一定是越好的，因为右端点越小，后面可供选择的区间一定会更多。</li></ol></blockquote><p>所以实际操作过程中，每当存在一对可以匹配的字母，我们就匹配他们，并把他们中间的字母全部删除(让右端点尽可能小)。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p>使用了map去存字母，所以时间复杂度增加<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">logn</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/8f6c88fb9ac54dd5bf990f59c7c7dc74.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">20</span>,M = <span class="number">2e4</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::map&lt;<span class="type">char</span>,<span class="type">bool</span>&gt; mp;</span><br><span class="line">    std::string s;</span><br><span class="line">    std::cin&gt;&gt;s;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; s.<span class="built_in">size</span>() ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(mp.<span class="built_in">count</span>(s[i]))</span><br><span class="line">        &#123;</span><br><span class="line">            res += <span class="number">2</span>;</span><br><span class="line">            mp.<span class="built_in">clear</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> mp[s[i]] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;s.<span class="built_in">size</span>() - res &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="d-maximum-product-strikes-back"><a class="markdownIt-Anchor" href="#d-maximum-product-strikes-back"></a> D. Maximum Product Strikes Back</h2><p><strong>题意：</strong></p><blockquote><p>给定长度为n的数组，而且其中的每一个元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mo>≤</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">|a_{i}|\leq 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>。<br />要求从右和从左删除一定个数的元素，使得剩下元素相乘之积最大:</p><blockquote><p>选择<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><br />求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><msubsup><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mi>x</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>y</mi></mrow></msubsup><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">max\prod_{i=x}^{n-y}a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.210941em;vertical-align:-0.29971000000000003em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.911231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></blockquote></blockquote><p><strong>思路：</strong></p><blockquote><p>因为空数组是1，所以0是必然被删除的，所以0把整个数组划分成了若干个区间，我们对每个这样的区间求取最大值,对每个区间，我们做这样的处理：</p><blockquote><ol><li>区间的值应该保持为正数</li><li>我们记录区间中负数的个数和2的个数</li><li>2的个数决定乘积大小，负数个数决定乘积是否为负。</li><li>在乘积已经是正数的基础上，那么区间的数留下的越多肯定是越好的。</li><li>区间内负数个数为偶数：</li></ol><blockquote><p>直接把当前区间乘积最为备选答案，与此时的答案相比。</p></blockquote></blockquote><blockquote><ol start="6"><li>区间内负数个数为奇数：</li></ol><blockquote><p>分别从左和从右寻找第一个负数，取两者更优的情况。</p></blockquote></blockquote></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/5208dfa82708426c904e25f7540c3cfd.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = <span class="number">2e4</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> cnt_two = <span class="number">0</span>,cnt_negative = <span class="number">0</span>,ans = <span class="number">0</span>,last = <span class="number">0</span>;</span><br><span class="line">    std::pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; res;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)std::cin&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] == <span class="number">0</span>||i == n + <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(cnt_negative&amp;<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j = last + <span class="number">1</span> ; j &lt; i ; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[j] == <span class="number">2</span>||a[j] == <span class="number">-2</span>)t++;</span><br><span class="line">                    <span class="keyword">if</span>(a[j] &lt; <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(cnt_two - t &gt; ans)</span><br><span class="line">                        &#123;</span><br><span class="line">                            ans = cnt_two - t;</span><br><span class="line">                            res = &#123;j, n + <span class="number">1</span> - i&#125;;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                t = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j = i - <span class="number">1</span>; j &gt; last ; j--)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[j] == <span class="number">2</span>||a[j] == <span class="number">-2</span>)t++;</span><br><span class="line">                    <span class="keyword">if</span>(a[j] &lt; <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(cnt_two - t &gt; ans)</span><br><span class="line">                        &#123;</span><br><span class="line">                            ans = cnt_two - t;</span><br><span class="line">                            res = &#123;last,n + <span class="number">1</span> - j&#125;;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(cnt_two &gt; ans)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans = cnt_two;</span><br><span class="line">                    res = &#123;last,n + <span class="number">1</span> - i&#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            last = i;</span><br><span class="line">            cnt_negative = cnt_two = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] == <span class="number">2</span>)cnt_two++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[i]==<span class="number">-2</span>)cnt_two++,cnt_negative++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[i]==<span class="number">-1</span>)cnt_negative++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans == <span class="number">0</span>)std::cout&lt;&lt;n&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> std::cout&lt;&lt;res.first&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;res.second&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="e-matrix-and-shifts"><a class="markdownIt-Anchor" href="#e-matrix-and-shifts"></a> E. Matrix and Shifts</h2><p><strong>题意：</strong></p><blockquote><p>有一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>∗</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n*n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>的矩阵，里面的每个元素都是0和1，可以任意执行以下4种操作(无需任何代价)：</p><blockquote><ol><li>全体上移一行(第一行到最后一行)</li><li>全体下移一行(最后行到第一行)</li><li>全体左移一行(最左边一行到最右边一行)</li><li>全体右移一行(最右边一行到最左边一行)</li></ol></blockquote><p>操作完后，我们可以花费一个代价，执行这样的操作：</p><blockquote><p>把某个元素从0变成1，或者从1变成0。</p></blockquote><p>要求变完以后，只有对角线元素是1，其余均是0。<br />输出最小代价。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>我们只要让尽可能多的1落在对角线上就可以了。<br />即以如下方式遍历矩阵：</p><blockquote><p><img src="https://img-blog.csdnimg.cn/d2e71003700a4bc292dfc8863a9ae50a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAdGltZXJfY2F0Y2g=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述" /><br /><img src="https://img-blog.csdnimg.cn/e4f7a24946154fb7a828022a888efec7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAdGltZXJfY2F0Y2g=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述" /><br /><img src="https://img-blog.csdnimg.cn/a09800fbeac7420097bd92f9680fd7e2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAdGltZXJfY2F0Y2g=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述" /><br /><img src="https://img-blog.csdnimg.cn/f75ea7bd70b34ee686f81f1750b310c9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAdGltZXJfY2F0Y2g=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述" /></p></blockquote><p>记录下 1 最多的数量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">max</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span></span></span></span>。<br />那么最后要修改的数量就是：</p><ol><li>在对角线上的 0 元素(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">n-max</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span></span></span></span>)</li><li>不在对角线上的 1 元素(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>n</mi><mi>t</mi><mo>−</mo><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">cnt-max</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span></span></span></span>)</li></ol><p>记录矩阵中 1 的个数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>n</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">cnt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span></span></span></span>：<br />所以最终答案为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>c</mi><mi>n</mi><mi>t</mi><mo>−</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n-max)+(cnt-max)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/f3c5de4c7aaa4860be2a12ef2ae468ce.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e3</span><span class="number">+10</span>,M = <span class="number">2e4</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,cnt = <span class="number">0</span>,max = <span class="number">0</span>;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        std::string s;</span><br><span class="line">        std::cin&gt;&gt;s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= n ; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i][j] = s[j<span class="number">-1</span>] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            cnt += (a[i][j] == <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= n ; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> y = j,temp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i][y] == <span class="number">1</span>)temp++;</span><br><span class="line">            y++;</span><br><span class="line">            <span class="keyword">if</span>(y==n<span class="number">+1</span>)y = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        max = std::<span class="built_in">max</span>(max,temp);</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;cnt - max + (n - max)&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="f1-promising-string-easy-version"><a class="markdownIt-Anchor" href="#f1-promising-string-easy-version"></a> F1. Promising String (easy version)</h2><p><strong>题意：</strong></p><blockquote><p>给定一个由’+'和‘-’组成的字符串S，定义有希望的字符串如下：</p><blockquote><p>字符串可以进行如下操作：</p><blockquote><p>相邻的两个’-‘可以合并为’+’</p></blockquote></blockquote><blockquote><p>可以通过上述操作，使得字符串中’+'和‘-’的数量相同。</p></blockquote><p>输出字符串S中所有满足条件的子串的个数。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>因为数据量只有3000，所以我们直接暴力枚举所有区间。<br />检查区间合法的方法如下：</p><blockquote><ol><li>记录下区间中‘+‘的数量cnt1，‘-‘的数量cnt0，以及可以合并的减号的最大对数cnt。</li><li>假设合并的减号对数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>:</li></ol><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>n</mi><msub><mi>t</mi><mn>0</mn></msub><mo>−</mo><mn>2</mn><mo>∗</mo><mi>x</mi><mo>=</mo><mi>c</mi><mi>n</mi><msub><mi>t</mi><mn>1</mn></msub><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">cnt_{0}-2*x=cnt_{1}+x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>n</mi><msub><mi>t</mi><mn>0</mn></msub><mo>−</mo><mi>c</mi><mi>n</mi><msub><mi>t</mi><mn>1</mn></msub><mo>=</mo><mn>3</mn><mo>∗</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">cnt_{0}-cnt_{1}=3*x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span></p></blockquote></blockquote><blockquote><p>那么只需要满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>为整数，而且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>≤</mo><mi>c</mi><mi>n</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">x \leq cnt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span></span></span></span>，区间就是合法的。</p></blockquote></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong></p><p><img src="https://img-blog.csdnimg.cn/2d95a67192e148e68097926876261354.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e3</span><span class="number">+10</span>,M = <span class="number">2e4</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    std::string s;</span><br><span class="line">    std::cin&gt;&gt;s;</span><br><span class="line">    <span class="type">bool</span> tag = <span class="literal">false</span>;</span><br><span class="line">    <span class="type">int</span> cnt1,cnt0,cnt,res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt = <span class="number">0</span>,cnt1 = <span class="number">0</span>,cnt0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = i ; j &lt; n ; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[j] == <span class="string">&#x27;+&#x27;</span>)cnt1++,tag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(tag)</span><br><span class="line">                &#123;</span><br><span class="line">                    cnt++;</span><br><span class="line">                    cnt0++;</span><br><span class="line">                    tag = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    cnt0++;</span><br><span class="line">                    tag = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(cnt0==cnt1)res++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(cnt0 &gt; cnt1 &amp;&amp; (cnt0 - cnt1) % <span class="number">3</span> == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(cnt &gt;= (cnt0 - cnt1)/<span class="number">3</span> )res++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;res&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces Round 779 (Div. 2)(Permutationforces)</title>
      <link href="/2022/04/12/Codeforces-Round-779-Div-2-Permutationforces/"/>
      <url>/2022/04/12/Codeforces-Round-779-Div-2-Permutationforces/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/10dbb89dba6041cbbd91a9c0776d5a27.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAdGltZXJfY2F0Y2g=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述" /></p><h2 id="a-marin-and-photoshoot"><a class="markdownIt-Anchor" href="#a-marin-and-photoshoot"></a> A. Marin and Photoshoot</h2><p><strong>题意：</strong></p><blockquote><p>给定一个由0和1组成的序列，现在可以往这个序列中添加1，是的这个序列满足如下要求：<br />对于任意长度大于等于2的区间，要求这个区间中1的个数大于等于0的个数。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>添加1，使得序列中不存在如下情况：<br />00或者010<br />即保证两个0之间的距离大于等于2。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/6789fdb575c8426c9b1f9489886e1a9c.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = N * <span class="number">4</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    std::string s;</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;s;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>,last = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(last==<span class="number">-1</span>)last = i;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i-last&lt;=<span class="number">2</span>)res += <span class="number">3</span> - (i - last);</span><br><span class="line">                last = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;res&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="b-marin-and-anti-coprime-permutation"><a class="markdownIt-Anchor" href="#b-marin-and-anti-coprime-permutation"></a> B. Marin and Anti-coprime Permutation</h2><p><strong>题意：</strong></p><blockquote><p>要求构造一个长度为n的全排列，满足如下要求：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mn>1</mn><mo>∗</mo><msub><mi>p</mi><mn>1</mn></msub><mo separator="true">,</mo><mn>2</mn><mo>∗</mo><msub><mi>p</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>∗</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mi>n</mi><mo>∗</mo><msub><mi>p</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">gcd(1*p_{1},2*p_{2},\dots n-1*p_{n-1},n*p_{n}) &gt; 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.673611em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br />询问有几种方案满足上述要求。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>选取任意的k，那么存在k的因子的数必然k的倍数。<br />因此不难推知n个数里面包含k的因子的数有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">⌈</mo><mfrac><mi>n</mi><mi>k</mi></mfrac><mo fence="true">⌉</mo></mrow><annotation encoding="application/x-tex">\left \lceil \frac{n}{k} \right \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">⌈</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">⌉</span></span></span></span></span></span>个，那么加上要乘的数，所以包含k的因子的个数应该是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>∗</mo><mrow><mo fence="true">⌈</mo><mfrac><mi>n</mi><mi>k</mi></mfrac><mo fence="true">⌉</mo></mrow></mrow><annotation encoding="application/x-tex">2*\left \lceil \frac{n}{k} \right \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">⌈</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">⌉</span></span></span></span></span></span>个。<br />我们我保证<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>∗</mo><mrow><mo fence="true">⌈</mo><mfrac><mi>n</mi><mi>k</mi></mfrac><mo fence="true">⌉</mo></mrow><mo>≥</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">2*\left \lceil \frac{n}{k} \right \rceil \geq n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">⌈</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">⌉</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>，因此只能取k=2。<br />那么就让所有的数相乘后为偶数，即让奇数乘偶数位，偶数乘奇数位即可。<br />1.若n为偶数,结果为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mfrac><mi>n</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mo>∗</mo><mo stretchy="false">(</mo><mfrac><mi>n</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow><annotation encoding="application/x-tex">(\frac{n}{2})!*(\frac{n}{2})!</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mclose">!</span></span></span></span><br />2.若n为奇数，结果为0。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/e8aefd71c06b4a2e8496785850636429.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = N * <span class="number">4</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">998244353</span> ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    ll res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(n&amp;<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        std::cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n/<span class="number">2</span> ; i++)</span><br><span class="line">        res = (i*res) % mod;</span><br><span class="line">    std::cout&lt;&lt;res*res%mod&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="c-shinju-and-the-lost-permutation"><a class="markdownIt-Anchor" href="#c-shinju-and-the-lost-permutation"></a> C. Shinju and the Lost Permutation</h2><p><strong>题意：</strong></p><blockquote><p>给定一个全排列：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>p</mi><mn>2</mn></msub><mo>…</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">p_{1},p_{2}\dots p_{n-1},p_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br />再由这个全排列可以得到另一个数组a<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo>…</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mtext> </mtext><mo stretchy="false">(</mo><msub><mi>p</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_{1},a_{2}\dots a_{n-1},a_{n},a_{i}=max\ (p_{j}(1\leq j\leq i))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><br />定义 c 为数组a中不同数的个数，并称 c 是数组 a 的幂。<br />那么我们把这个数组p全体向右移动一个单位，这样又可以确定一个数组a，进而确定 c 的值。<br />我们让<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示全排列向右移动<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>次的值。<br />现给定数组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，询问能否存在全排列，使得移动<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>次的值等于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>产生的数组 c 要满足如下要求：<br />1.移动过程中，我们考虑当最大数移动到第一个位置时，此时的 c 必然是 1，且只有这种情况 c 为 1。<br />2.将1中的全排列向右移动一个单位，此时 c 必然是 2。<br />3.那么在之后的移动过程中，c 每次最多可以增加 1(要注意，最大数以后的数必然只能为 c 提供 1 的 贡献)，或者可以减小若干。<br />因此，我们只需要判断 c 是否满足如下情况：<br />1.c = 1 应该有且只有一个。<br />2.从1的位置开始判断，每次最多只会增加1，或者减小若干。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/54f6b69552224331bec1551c07d57cb8.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span><span class="number">+10</span>,M = N * <span class="number">4</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">998244353</span> ;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> index = <span class="number">-1</span>,cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        std::cin&gt;&gt;a[i];</span><br><span class="line">        <span class="keyword">if</span>(a[i] == <span class="number">1</span>)index = i,cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(index==<span class="number">-1</span>||cnt&gt;<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        std::cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x = index + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(x==n<span class="number">+1</span>)x = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[x] - a[index] &gt;= <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            std::cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        index++;</span><br><span class="line">        <span class="keyword">if</span>(index==n<span class="number">+1</span>)index = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="d1-388535-easy-version"><a class="markdownIt-Anchor" href="#d1-388535-easy-version"></a> D1. 388535 (Easy Version)</h2><p><strong>题意：</strong></p><blockquote><p>给定从L(L = 0)到R的一个全排列和一个整数 x 。现在对这个全排列的每个数都执行如下操作：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub><mo>⨁</mo><mi>x</mi><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_{i} = a_{i}\bigoplus x(1\leq i \leq n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨁</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span><br />给出操作完后的数组，询问是否存在 x 。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>因为全排列是从0开始，我们可以发现在每一位数字上0的个数必然大于等于1的个数，因此我们我们只要保证这一条件即可构造出答案 x ：<br />对于第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 位，我们构造如下：<br />1.若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>n</mi><msub><mi>t</mi><mn>1</mn></msub><mo>&gt;</mo><mi>c</mi><mi>n</mi><msub><mi>t</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">cnt_{1} &gt; cnt_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，该位取1<br />2.若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>n</mi><msub><mi>t</mi><mn>1</mn></msub><mo>≤</mo><mi>c</mi><mi>n</mi><msub><mi>t</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">cnt_{1} \leq cnt_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，该位取0</p></blockquote><blockquote><p>举例：<br />0~7<br />0000<br />0001<br />0010<br />0011<br />0100<br />0101<br />0110<br />0111<br />每一位上显然有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>n</mi><msub><mi>t</mi><mn>1</mn></msub><mo>≤</mo><mi>c</mi><mi>n</mi><msub><mi>t</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">cnt_{1} \leq cnt_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/e436b793be9a49fc856e7a078975da5e.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span><span class="number">+10</span>,M = N * <span class="number">4</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">998244353</span> ;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">20</span>][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">    std::cin&gt;&gt;l&gt;&gt;r;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= r - l + <span class="number">1</span> ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        std::cin&gt;&gt;x;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt;= <span class="number">17</span> ; j++)a[j][x&gt;&gt;j&amp;<span class="number">1</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt;= <span class="number">17</span> ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i][<span class="number">1</span>] &gt; a[i][<span class="number">0</span>])res += <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;res&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeTON Round 1 (Div. 1 + Div. 2, Rated, Prizes)</title>
      <link href="/2022/04/12/CodeTON-Round-1-Div-1-Div-2-Rated-Prizes/"/>
      <url>/2022/04/12/CodeTON-Round-1-Div-1-Div-2-Rated-Prizes/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/91f06a1f167d48afbbd9ea07cfff4316.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAdGltZXJfY2F0Y2g=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" /></p><h1 id="a-good-pairs"><a class="markdownIt-Anchor" href="#a-good-pairs"></a> A. Good Pairs</h1><p><strong>题意：</strong></p><blockquote><p>给定一个长度为n的序列：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_{1},a_{2},\dots,a_{n-1},a_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br />现在要找到一对下标<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>满足：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><msub><mi>a</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi><mo>+</mo><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mi>j</mi></msub><mo>−</mo><msub><mi>a</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi><mo>=</mo><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><msub><mi>a</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|a_{i}-a_{k}|+|a_{j}-a_{k}|=|a_{i}-a_{j}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><br />对所有的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k(1\leq k\leq n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>成立</p></blockquote><p><strong>思路：</strong></p><blockquote><p>显然只要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mtext>和</mtext><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}和a_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>是最大值是最小值即可。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码:</strong><br /><img src="https://img-blog.csdnimg.cn/e5423e37a0db45089f0223d4c30ba540.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = N * <span class="number">2</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)std::cin&gt;&gt;a[i];</span><br><span class="line">    std::cout&lt;&lt;std::<span class="built_in">max_element</span>(a<span class="number">+1</span>,a<span class="number">+1</span>+n) - a&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;std::<span class="built_in">min_element</span>(a<span class="number">+1</span>,a<span class="number">+1</span>+n)-a&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-subtract-operation"><a class="markdownIt-Anchor" href="#b-subtract-operation"></a> B. Subtract Operation</h1><p><strong>题意：</strong></p><blockquote><p>给定一个长度为n的序列：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>3</mn></msub><mo>…</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_{1},a_{2},a_{3}\dots a_{n-1},a_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br />现在可以从中选择一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<br />将其删除，并让其余所有数减<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">a{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">i</span></span></span></span></span>：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>3</mn></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo>…</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{1}-a_{i},a_{2}-a_{i},a_{3}-a_{i}\dots a_{n-1}-a_{i},a_{n}-a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br />执行这样的操作若干次，直至序列中只剩下一个数。<br />是否存在某种操作顺序，可以使最后剩下的数等于k。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>假设最后留下的数是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，最后一次删除的数是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">a_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>（原序列中的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">a_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>），那么最后留下来的数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}-a_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。</p></blockquote><blockquote><p>证明如下：<br />设第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>次删除了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，得到：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>a</mi><mn>1</mn></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">]</mo><mo separator="true">,</mo><mo stretchy="false">[</mo><msub><mi>a</mi><mn>2</mn></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">]</mo><mo>…</mo><mo stretchy="false">[</mo><msub><mi>a</mi><mi>j</mi></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">]</mo><mo>…</mo><mo stretchy="false">[</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">]</mo><mo separator="true">,</mo><mo stretchy="false">[</mo><msub><mi>a</mi><mi>n</mi></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[a_{1}-a_{i}],[a_{2}-a_{i}]\dots [a_{j}-a_{i}]\dots [a_{n-1}-a_{i}],[a_{n}-a_{i}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。<br />设第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>次删除了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{j}-a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，得到：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>a</mi><mn>1</mn></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mi>j</mi></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo separator="true">,</mo><mo stretchy="false">[</mo><msub><mi>a</mi><mn>2</mn></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mi>j</mi></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">[</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mi>j</mi></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo separator="true">,</mo><mo stretchy="false">[</mo><msub><mi>a</mi><mi>n</mi></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mi>j</mi></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[a_{1}-a_{i}-(a_{j}-a_{i})],[a_{2}-a_{i}-(a_{j}-a_{i})],\dots [a_{n-1}-a_{i}-(a_{j}-a_{i})],[a_{n}-a_{i}-(a_{j}-a_{i}])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mclose">)</span></span></span></span>。<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">-&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>a</mi><mn>1</mn></msub><mo>−</mo><msub><mi>a</mi><mi>j</mi></msub><mo stretchy="false">]</mo><mo separator="true">,</mo><mo stretchy="false">[</mo><msub><mi>a</mi><mn>2</mn></msub><mo>−</mo><msub><mi>a</mi><mi>j</mi></msub><mo stretchy="false">]</mo><mo>…</mo><mo stretchy="false">[</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>a</mi><mi>j</mi></msub><mo stretchy="false">]</mo><mo separator="true">,</mo><mo stretchy="false">[</mo><msub><mi>a</mi><mi>n</mi></msub><mo>−</mo><msub><mi>a</mi><mi>j</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[a_{1}-a_{j}],[a_{2}-a_{j}]\dots [a_{n-1}-a_{j}],[a_{n}-a_{j}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。</p></blockquote><blockquote><p>因此，整个序列减小的数只与最后一次删除有关。<br />最终留下的数即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}-a_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。<br />那么我们只需要寻找是否存在这样的一对数，满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><msub><mi>a</mi><mi>j</mi></msub><mo>=</mo><mo>=</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">a_{i}-a_{j}==k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>即可。<br />这里在排序后二分就可以完成查找。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/c755ce0da0ce443da5316a4f1e8f6eeb.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = N * <span class="number">2</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)std::cin&gt;&gt;a[i];</span><br><span class="line">    std::<span class="built_in">sort</span>(a<span class="number">+1</span>,a<span class="number">+1</span>+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> index = std::<span class="built_in">lower_bound</span>(a<span class="number">+1</span>,a+n<span class="number">+1</span>,a[i]+k) - a;</span><br><span class="line">        <span class="keyword">if</span>(index &lt;= n &amp;&amp; a[index] - a[i] == k)</span><br><span class="line">        &#123;</span><br><span class="line">            std::cout &lt;&lt; <span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-make-equal-with-mod"><a class="markdownIt-Anchor" href="#c-make-equal-with-mod"></a> C. Make Equal With Mod</h1><p><strong>题意：</strong></p><blockquote><p>给定一个序列：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>3</mn></msub><mo>…</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_{1},a_{2},a_{3}\dots a_{n-1},a_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br />选择一个数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>x</mi><mo>≥</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x(x\geq 2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span>，对所有数取模：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mi mathvariant="normal">%</mi><mi>x</mi><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mi mathvariant="normal">%</mi><mi>x</mi><mo separator="true">,</mo><msub><mi>a</mi><mn>3</mn></msub><mi mathvariant="normal">%</mi><mi>x</mi><mo>…</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">%</mi><mi>x</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mi mathvariant="normal">%</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">a_{1}\%x,a_{2}\%x,a_{3}\%x\dots a_{n-1}\%x,a_{n}\%x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.958331em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">%</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">%</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">%</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">%</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">%</span><span class="mord mathnormal">x</span></span></span></span>。<br />在若干次操作后是否可能使所有数相等。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>第一种情况，原序列没有1：<br />我们考虑把所有数变成0，即每次选择最大的数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x = a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<br />则一次操作后只有最大的数变成0，其余数均不变。<br />所以该情况一定有解。</p></blockquote><blockquote><p>第一种情况，原序列存在1：<br />那么我们只能考虑把所有数变成1。<br />每次选择最大的数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x = a_{i} - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，那么取模后最大数变成1。<br />若在此过程中序列中存在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a_{i} - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a_{i} - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>变成 0 ，那么不存在方案。<br />否则存在方案。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/9cc71c654a4a42c9b627500fb7e12ba8.png" alt="在这里插入图片描述" /><br /><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = N * <span class="number">2</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)std::cin&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        flag = (a[i]==<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(flag)<span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag)</span><br><span class="line">    &#123;</span><br><span class="line">        std::cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">        std::<span class="built_in">sort</span>(a<span class="number">+1</span>,a<span class="number">+1</span>+n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span>  i = <span class="number">1</span> ; i &lt; n ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            flag = (a[i<span class="number">+1</span>] - a[i] == <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(flag)<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)</span><br><span class="line">        &#123;</span><br><span class="line">            std::cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            std::cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h1 id="e-equal-tree-sums"><a class="markdownIt-Anchor" href="#e-equal-tree-sums"></a> E. Equal Tree Sums</h1><p><strong>题意：</strong></p><blockquote><p>给定一个无根树，每个节点有一个权值，现在我们要对节点分配一个权值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，使得无论删除哪一个点，剩余的每个连通块权值之和相等。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>从一个点开始遍历整棵树，起点染为白色。<br />在遍历的时候，与白色相邻的点染为黑色，与黑色相邻的点染为白色。<br />染色完成后，设每个点的度数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">d[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span>，并令：<br />1.白色点的权值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mi>d</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">-d[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord mathnormal">d</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span><br />2.黑色点的权值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">d[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span><br />赋值显然后所有整棵树的权值和为0，并且每条边对权值和的贡献为0。</p></blockquote><blockquote><p>我们可以把一条边分裂成两条边，一条由黑色点指向白色点，权值为1，一条由白色点指向黑色点，权值为-1，那么一个白色点的权值就是由所有这个白色点指向黑色点的边加和而成。</p></blockquote><blockquote><p>现在证明删除一个点后剩余连通块权值和相等：<br />1.假设删除了一个黑点，权值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">d[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span><br />2.那么很显然此时有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">d[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span>连通块<br />3.现在我们根据上面的分边，为每个点重新赋值，那么每个连通块内部权值都为0<br />4.对于所有与黑点相连的白色点，权值相差的只是与黑点相连的这一条边的权值，其余所有点权值不变。<br />5.所以实际上每个连通块变化的和都是一样的，为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p>O(n+m)</p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/1a89bea36c614420917506e3f82862dc.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span><span class="number">+10</span>,M = N * <span class="number">2</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> h[N],e[M],ne[M],idx;</span><br><span class="line"><span class="type">int</span> w[N],d[N];</span><br><span class="line"><span class="type">bool</span> color[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b,ne[idx] = h[a],h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa,<span class="type">bool</span> st)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    color[u] = st;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = h[u] ; ~i ; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> v = e[i];</span><br><span class="line">        d[u]++;</span><br><span class="line">        <span class="keyword">if</span>(v==fa)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(v,u,st^<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)h[i] = <span class="number">-1</span>,d[i] = <span class="number">0</span>;</span><br><span class="line">    idx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">        std::cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="built_in">add</span>(a,b),<span class="built_in">add</span>(b,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">-1</span>,<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)color[i] == <span class="number">0</span> ? std::cout&lt;&lt;-d[i]&lt;&lt;<span class="string">&quot; &quot;</span>:std::cout&lt;&lt;d[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    std::cout&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AtCoder Beginner Contest 245</title>
      <link href="/2022/04/12/AtCoder-Beginner-Contest-245/"/>
      <url>/2022/04/12/AtCoder-Beginner-Contest-245/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/be3f62f6376d4d898e9a15001524cbf7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAdGltZXJfY2F0Y2g=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述" /></p><h1 id="a-good-morning"><a class="markdownIt-Anchor" href="#a-good-morning"></a> A - Good morning</h1><p><strong>题意：</strong></p><blockquote><p>语法题：<br />给定两个起床时间。<br />若第一个早于等于第二个，输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Red"><mi>T</mi><mi>a</mi><mi>k</mi><mi>a</mi><mi>h</mi><mi>a</mi><mi>s</mi><mi>h</mi><mi>i</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Red}Takahashi }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:Red;">T</span><span class="mord mathnormal" style="color:Red;">a</span><span class="mord mathnormal" style="margin-right:0.03148em;color:Red;">k</span><span class="mord mathnormal" style="color:Red;">a</span><span class="mord mathnormal" style="color:Red;">h</span><span class="mord mathnormal" style="color:Red;">a</span><span class="mord mathnormal" style="color:Red;">s</span><span class="mord mathnormal" style="color:Red;">h</span><span class="mord mathnormal" style="color:Red;">i</span></span></span></span></span>，<br />反之输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Red"><mi>A</mi><mi>o</mi><mi>k</mi><mi>i</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Red}Aoki}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="color:Red;">A</span><span class="mord mathnormal" style="color:Red;">o</span><span class="mord mathnormal" style="margin-right:0.03148em;color:Red;">k</span><span class="mord mathnormal" style="color:Red;">i</span></span></span></span></span>。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>见代码</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/d0468c5126aa40d28e2c3fe5ca1d2158.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e2</span><span class="number">+10</span>,M = N * <span class="number">2</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> a,b,c,d;</span><br><span class="line">    std::cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</span><br><span class="line">    <span class="keyword">if</span>(a*<span class="number">60</span>+b&lt;=c*<span class="number">60</span>+d)std::cout&lt;&lt;<span class="string">&quot;Takahashi&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> std::cout&lt;&lt;<span class="string">&quot;Aoki&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-mex"><a class="markdownIt-Anchor" href="#b-mex"></a> B - Mex</h1><p><strong>题意：</strong></p><blockquote><p>给定一个长度为n的序列，输出这个序列中未出现的最小自然数。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>用一个数组统计数字出现次数，然后寻找这个序列中未出现的最小自然数。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/d8b1d4bf46df46ff816ee1c4ea000ff9.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e3</span><span class="number">+10</span>,M = N * <span class="number">2</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> cnt[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        std::cin&gt;&gt;x;</span><br><span class="line">        cnt[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!cnt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            std::cout&lt;&lt;i;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-choose-elements"><a class="markdownIt-Anchor" href="#c-choose-elements"></a> C - Choose Elements</h1><p><strong>题意：</strong></p><blockquote><p>给定两个序列和一个整数k：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo>…</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_{1},a_{2}\dots a_{n-1},a_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo>…</mo><msub><mi>b</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>b</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">b_{1},b_{2}\dots b_{n-1},b_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br />要求构造出一个序列：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>2</mn></msub><mo>…</mo><msub><mi>c</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>n</mi></msub><mo stretchy="false">(</mo><msub><mi>c</mi><mi>i</mi></msub><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub><mtext>或</mtext><msub><mi>c</mi><mi>i</mi></msub><mo>=</mo><msub><mi>b</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_{1},c_{2}\dots c_{n-1},c_{n}(c_{i}=a_{i}或c_{i}=b_{i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">或</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br />使得对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_{i}(1\leq i \leq n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>有:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>−</mo><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">|c[i]-c[i+1]|\leq k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span></p></blockquote><p><strong>思路：</strong></p><blockquote><p>如果对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext> </mtext><mi>i</mi><mtext> </mtext><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\ i\ (1\leq i\leq n-2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mspace"> </span><span class="mord mathnormal">i</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span>都满足如上要求。<br />那么显然此时是否满足要求只与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>b</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>b</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_{n-1},a_{n},b_{n-1},b_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>有关。<br />这种性质满足无后效性，考虑使用动态规划。<br />我们设有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span></span></span></span>：<br />若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">dp[i][0]=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>表示第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>可用<br />若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">dp[i][0]=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>表示第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>不可用<br />若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">dp[i][1]=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>表示第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">b_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>可用<br />若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">dp[i][1]=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>表示第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">b_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>不可用<br />(这里可能用1表示可用更好，但是当时我不想初始化)<br />即可以按如下方式转移：</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt;= n ; i++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">if</span>(!dp[i<span class="number">-1</span>][<span class="number">0</span>]&amp;&amp;<span class="built_in">abs</span>(a[i]-a[i<span class="number">-1</span>])&lt;=k||!dp[i<span class="number">-1</span>][<span class="number">1</span>]&amp;&amp;<span class="built_in">abs</span>(a[i]-b[i<span class="number">-1</span>])&lt;=k)dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">else</span> dp[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">       <span class="keyword">if</span>(!dp[i<span class="number">-1</span>][<span class="number">0</span>]&amp;&amp;<span class="built_in">abs</span>(b[i]-a[i<span class="number">-1</span>])&lt;=k||!dp[i<span class="number">-1</span>][<span class="number">1</span>]&amp;&amp;<span class="built_in">abs</span>(b[i]-b[i<span class="number">-1</span>])&lt;=k)dp[i][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">else</span> dp[i][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><blockquote><p>那么最后<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[n][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[n][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>存在一个可用即可。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p>O(n)</p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/f9e7926d468842efa9801a2fb96ea4eb.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = N * <span class="number">2</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N],b[N],dp[N][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)std::cin&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)std::cin&gt;&gt;b[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dp[i<span class="number">-1</span>][<span class="number">0</span>]&amp;&amp;<span class="built_in">abs</span>(a[i]-a[i<span class="number">-1</span>])&lt;=k||!dp[i<span class="number">-1</span>][<span class="number">1</span>]&amp;&amp;<span class="built_in">abs</span>(a[i]-b[i<span class="number">-1</span>])&lt;=k)dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> dp[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(!dp[i<span class="number">-1</span>][<span class="number">0</span>]&amp;&amp;<span class="built_in">abs</span>(b[i]-a[i<span class="number">-1</span>])&lt;=k||!dp[i<span class="number">-1</span>][<span class="number">1</span>]&amp;&amp;<span class="built_in">abs</span>(b[i]-b[i<span class="number">-1</span>])&lt;=k)dp[i][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> dp[i][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!dp[n][<span class="number">0</span>]||!dp[n][<span class="number">1</span>])std::cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> std::cout&lt;&lt;<span class="string">&quot;No&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-polynomial-division"><a class="markdownIt-Anchor" href="#d-polynomial-division"></a> D - Polynomial division</h1><p><strong>题意：</strong></p><blockquote><p>存在多项式：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>0</mn></msub><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><msup><mi>x</mi><mn>1</mn></msup><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mo>…</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mi>x</mi><mi>n</mi></msup><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub><msup><mi>x</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">a_{0}+a_{1}x^{1}+a_{2}x^{2}\dots a_{n-1}x^{n}+a_{n}x^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0224389999999999em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.814392em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mn>0</mn></msub><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><msup><mi>x</mi><mn>1</mn></msup><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mo>…</mo><msub><mi>b</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mi>x</mi><mi>m</mi></msup><mo>+</mo><msub><mi>b</mi><mi>m</mi></msub><msup><mi>x</mi><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">b_{0}+b_{1}x^{1}+b_{2}x^{2}\dots b_{m-1}x^{m}+b_{m}x^{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0224389999999999em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span></span><br />将两个多项式相乘得到：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>0</mn></msub><msub><mi>b</mi><mn>0</mn></msub><mo>+</mo><mo stretchy="false">(</mo><msub><mi>b</mi><mn>1</mn></msub><msub><mi>a</mi><mn>0</mn></msub><mo>+</mo><msub><mi>b</mi><mn>0</mn></msub><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">)</mo><msup><mi>x</mi><mn>1</mn></msup><mo>…</mo><msub><mi>a</mi><mi>n</mi></msub><msub><mi>b</mi><mi>m</mi></msub><msup><mi>x</mi><mi>n</mi></msup><msup><mi>x</mi><mi>m</mi></msup><mo>−</mo><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">a_{0}b_{0}+(b_{1}a_{0}+b_{0}a_{1})x^{1}\dots a_{n}b_{m}x^{n}x^{m}-&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mn>0</mn></msub><mo>+</mo><msub><mi>c</mi><mn>1</mn></msub><msup><mi>x</mi><mn>1</mn></msup><mo>…</mo><msub><mi>c</mi><mrow><mi>n</mi><mo>+</mo><mi>m</mi></mrow></msub><msup><mi>x</mi><mi>n</mi></msup><msup><mi>x</mi><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">c_{0}+c_{1}x^{1}\dots c_{n+m}x^{n}x^{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0224389999999999em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span></span><br />现在给出所有系数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，请输出所有的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">b_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p></blockquote><p><strong>思路:</strong></p><blockquote><p>开始时，有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><mfrac><mrow><mi>c</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">b[0]=\frac{c[0]}{a[0]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，并做如下处理：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>−</mo><mi>b</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>∗</mo><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">(</mo><mn>0</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c[i]=c[i]-b[0]*a[i](0\leq i\leq n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。<br />处理完后显然有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mfrac><mrow><mi>c</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">b[1]=\frac{c[1]}{a[0]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mopen mtight">[</span><span class="mord mtight">1</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，并重复上述处理：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><mi>b</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>∗</mo><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">(</mo><mn>0</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c[i+1]=c[i+1]-b[1]*a[i](0\leq i\leq n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。<br />因此我们可以重复上述步骤直至求出所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mn>0</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">b_{j}(0\leq j\leq n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mfrac><mrow><mi>c</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">b[j]=\frac{c[j]}{a[0]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mopen mtight">[</span><span class="mord mtight">0</span><span class="mclose mtight">]</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mopen mtight">[</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mi>j</mi><mo stretchy="false">]</mo><mo>−</mo><mi>b</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>∗</mo><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">c[i+j]=c[i+j]-b[j]*a[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span>。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nm)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/e951f3e325d84d99ab95cf888bee56de.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = N * <span class="number">2</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N],b[N],c[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    std::ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="comment">//    std::cin.tie(nullptr);</span></span><br><span class="line"><span class="comment">//    std::cout.tie(nullptr);</span></span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n ; i &gt;= <span class="number">0</span> ; i--)std::cin&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = m + n; i &gt;= <span class="number">0</span> ; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        std::cin&gt;&gt;c[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt;= m ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i] = c[i]/a[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= n ; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            c[i+j] -= (b[i] * a[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = m ; i &gt;= <span class="number">0</span> ; i--)std::cout&lt;&lt;b[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-wrapping-chocolate"><a class="markdownIt-Anchor" href="#e-wrapping-chocolate"></a> E - Wrapping Chocolate</h1><blockquote><p>题意：<br />有n个巧克力，宽度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">b_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br />有m个盒子，宽度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br />如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>≤</mo><msub><mi>c</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>b</mi><mi>i</mi></msub><mo>≤</mo><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}\leq c_{i},b_{i}\leq d_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，那么第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>盒子就可以装下第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个巧克力。<br />询问是否存在一种方案，可以用盒子把所有的巧克力装下。</p></blockquote><p><strong>思路：</strong></p><blockquote><p><s>没看数据之前，还想着暴力跑二分图最大匹配</s><br />无序查找必然超时，考虑对某个关键字排序。<br />我们把巧克力和盒子一起按照宽度降序排序(如果宽度相同则把盒子排在前面)，遍历排序后的数组，并维护一个集合S，按照如下方式处理：<br /><strong>1.如果当前位置为盒子：将长度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>加入集合。<br />2.如果当前位置为巧克力：找到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>d</mi><mi>i</mi><mo>≥</mo><msub><mi>b</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>d</mi><mi>i</mi></msub><mo>∈</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d_{i}(min(di\geq b_{i}),d_{i}\in S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span>，并将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>删除，如果查找失败，则不存在方案。<br />易证明上述操作可以完成题目要求，上述操作可以用multiset完成。</strong></p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p>O(nlogn)</p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/18ae96e3e0704f1b99626ddc99997bae.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">4e5</span><span class="number">+10</span>,M = N * <span class="number">4</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    <span class="type">bool</span> box;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> Node &amp;a)<span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a.x == x)<span class="keyword">return</span> a.box &lt; box;</span><br><span class="line">        <span class="keyword">return</span> a.x &lt; x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[N];</span><br><span class="line">std::multiset&lt;<span class="type">int</span>&gt; st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        std::cin&gt;&gt;x;</span><br><span class="line">        a[i].x = x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        std::cin&gt;&gt;x;</span><br><span class="line">        a[i].y = x;</span><br><span class="line">        a[i].box = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n + <span class="number">1</span> ; i &lt;= m + n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        std::cin&gt;&gt;x;</span><br><span class="line">        a[i].x = x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n + <span class="number">1</span> ; i &lt;= m + n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        std::cin&gt;&gt;x;</span><br><span class="line">        a[i].y = x;</span><br><span class="line">        a[i].box = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    std::<span class="built_in">sort</span>(a<span class="number">+1</span>,a<span class="number">+1</span>+n+m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n + m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].box)</span><br><span class="line">        &#123;</span><br><span class="line">            st.<span class="built_in">insert</span>(a[i].y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> it = st.<span class="built_in">lower_bound</span>(a[i].y);</span><br><span class="line">            <span class="keyword">if</span>(it!=st.<span class="built_in">end</span>())st.<span class="built_in">erase</span>(it);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                std::cout&lt;&lt;<span class="string">&quot;No&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="f-endless-walk"><a class="markdownIt-Anchor" href="#f-endless-walk"></a> F - Endless Walk</h1><p><strong>题意：</strong></p><blockquote><p>给定一张有向图，寻找这样的点，满足如下要求：<br />从这个点出发，存在一条无限长的路径。<br />输出有几个点满足上述要求。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>满足上述的点存在两种情况：<br /><strong>1.该点在环内<br />2.从这个点出发可以走到环</strong><br />我的处理可能复杂些，按照如下步骤：<br />1.强连通分量跑tarjan缩点，对于任意的强连通分量，若内部点数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><msub><mi>e</mi><mi>i</mi></msub><mo>≥</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">size_{i}\geq2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.15em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>，则这些点都在环内。<br />2.若选择这样的做法，细节较多：<br />从其他点开始搜索，尝试是否能走到环。<br />尝试采用另一种方法：<br /><strong>建立反向图，从环开始搜索，对于所有搜索到的点，都满足要求。</strong></p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p>O(n+m)</p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/440f40aa5eb544b080f1032c70600b7d.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = N * <span class="number">4</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> h[N],hs[N],e[M],ne[M],idx;</span><br><span class="line"><span class="type">int</span> id[N],dfn[N],low[N],stk[N],size[N],scc,top,ts;</span><br><span class="line"><span class="type">bool</span> book[N],vis[N],OK[N];</span><br><span class="line"><span class="type">int</span> res;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> h[],<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b,ne[idx] = h[a],h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dfn[u] = low[u] = ++ts;</span><br><span class="line">    book[u] = <span class="literal">true</span>,stk[++top] = u;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = h[u] ; ~i ; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> v = e[i];</span><br><span class="line">        <span class="keyword">if</span>(!dfn[v])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">tarjan</span>(v);</span><br><span class="line">            low[u] = std::<span class="built_in">min</span>(low[u],low[v]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(book[v])low[u] = std::<span class="built_in">min</span>(low[u],dfn[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(low[u]==dfn[u])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> temp;</span><br><span class="line">        scc++;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            temp = stk[top--];</span><br><span class="line">            book[temp] = <span class="literal">false</span>;</span><br><span class="line">            id[temp] = scc;</span><br><span class="line">            size[scc]++;</span><br><span class="line">        &#125;<span class="keyword">while</span>(temp!=u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    res++,vis[u] = OK[u] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = hs[u] ; ~i ; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> v = e[i];</span><br><span class="line">        <span class="keyword">if</span>(vis[v])<span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">    <span class="built_in">memset</span>(hs,<span class="number">-1</span>,<span class="keyword">sizeof</span> hs);</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">        std::cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="built_in">add</span>(h,a,b),<span class="built_in">add</span>(hs,b,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)<span class="keyword">if</span>(!dfn[i])<span class="built_in">tarjan</span>(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">        <span class="keyword">if</span>(size[id[i]] &gt; <span class="number">1</span>)OK[i] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)<span class="keyword">if</span>(OK[i]&amp;&amp;!vis[i])<span class="built_in">dfs</span>(i);</span><br><span class="line">    std::cout&lt;&lt;res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="g-foreign-friends"><a class="markdownIt-Anchor" href="#g-foreign-friends"></a> G - Foreign Friends</h1><p><strong>题意：</strong></p><blockquote><p>现有N个人，这些人属于K个国家，这N个人中有L个人是受欢迎的人，这L个人分别属于不同的国家。<br />小明是个中间人，存在M对关系：<br />小明可以让某一对中的两个人相互认识，但是要花费一定的金额。<br />对于这N个人中的每一个人<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，他们都想要认识一个不在自己国家的受欢迎的人,分别输出这N个人所需的最小花费。<br />(若a认识b，b认识c，那么有a认识c)</p></blockquote><p><strong>思路：</strong></p><blockquote><p>比较显然的，这是一个最短路问题,可以使用Dijkstra(使用优先队列)。<br />正向考虑跑最短路显然不行，我们反向考虑让每个受欢迎的人去认识每一个人，但是我们如果让每个受欢迎的人去跑最短路，时间复杂度也会达到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>L</mi><mi>N</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(LNlogN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>，但是这题比较特殊，我们可以进行如下考虑：<br /><strong>1.我们把所有受欢迎的人放在优先队列里同时跑最短路，并记录他们所属的国家,在这个过程中我们通过记录，保证每个国家只会更新<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>一次。<br />2.那么当人<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>被第一次和第二次取出的时候，所需的花费分别是最小，次小的，并且更新这两次的国家不同。因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>只会属于一个国家，所以这两个最小数中一定有一个和自己的国家不同。<br />3.如果与更新最小值的国家不同，输出最小值即可，反之输出次小值。</strong></p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p>O(nlogn)</p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/6b704365f2614635921b42b08cbfc72e.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = N * <span class="number">4</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">    ll dist;</span><br><span class="line">    <span class="type">int</span> u,city;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> &lt;(<span class="type">const</span> Node &amp;a)<span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> a.dist &lt; dist;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> h[N],e[N],ne[N],w[N],idx;</span><br><span class="line"><span class="type">int</span> vis[N],city[N],type[N];</span><br><span class="line">ll dist1[N],dist2[N];</span><br><span class="line"><span class="type">int</span> n,m,k,l;</span><br><span class="line">std::priority_queue&lt;<span class="keyword">struct</span> Node&gt; que;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b,ne[idx] = h[a],w[idx] = c,h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dijkstra</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(!que.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> temp = que.<span class="built_in">top</span>();</span><br><span class="line">        que.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span>(vis[temp.u] &lt; <span class="number">2</span> &amp;&amp; type[temp.u] != temp.city)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[temp.u] == <span class="number">0</span>) type[temp.u] = temp.city,dist1[temp.u] = temp.dist;</span><br><span class="line">            <span class="keyword">else</span> dist2[temp.u] = temp.dist;</span><br><span class="line">            vis[temp.u]++;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = h[temp.u] ; ~i ; i = ne[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> v = e[i];</span><br><span class="line">                que.<span class="built_in">push</span>(&#123;temp.dist+w[i],v,temp.city&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;m&gt;&gt;k&gt;&gt;l;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)std::cin&gt;&gt;city[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= l ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        std::cin&gt;&gt;x;</span><br><span class="line">        que.<span class="built_in">push</span>(&#123;<span class="number">0ll</span>,x,city[x]&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a,b,c;</span><br><span class="line">        std::cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">        <span class="built_in">add</span>(a,b,c),<span class="built_in">add</span>(b,a,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Dijkstra</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(type[i] != city[i]&amp;&amp;dist1[i])std::cout&lt;&lt;dist1[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(dist2[i])std::cout&lt;&lt;dist2[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> std::cout&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Atcoder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AtCoder Beginner Contest 246</title>
      <link href="/2022/04/12/AtCoder-Beginner-Contest-246/"/>
      <url>/2022/04/12/AtCoder-Beginner-Contest-246/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/575e994279a24ffb92a1ea7a71037e04.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAdGltZXJfY2F0Y2g=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述" /></p><hr /><h2 id="a-four-points"><a class="markdownIt-Anchor" href="#a-four-points"></a> A - Four Points</h2><p><strong>题意：</strong></p><blockquote><p>给出三个点，找到一个点，让这4个点组成一个矩形</p></blockquote><p><strong>思路：</strong></p><blockquote><p>分别找到横纵坐标中只有一个的值。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/c6d852d3d1ed4e5e8f7a483db5acfcf3.png" alt="!在这里插入图片描述(https://img-blog.csdnimg.cn/aa8cfb2912ee42e683d85a44" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e2</span><span class="number">+5</span>,M = <span class="number">2e4</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    std::ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="comment">//    std::cin.tie(nullptr);</span></span><br><span class="line"><span class="comment">//    std::cout.tie(nullptr);</span></span><br><span class="line">    <span class="type">int</span> x,y,ans_x = <span class="number">0</span>,ans_y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= <span class="number">3</span> ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        std::cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        ans_x ^= x,ans_y ^= y;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;ans_x&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;ans_y;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr /><h2 id="b-get-closer"><a class="markdownIt-Anchor" href="#b-get-closer"></a> B - Get Closer</h2><p><strong>题意：</strong></p><blockquote><p>给出一个向量，将其变成单位向量。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>将向量除以他的模即可。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong></p><p><img src="https://img-blog.csdnimg.cn/ee08775b42d546c99946cc23b4231b2d.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e2</span><span class="number">+5</span>,M = <span class="number">2e4</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    std::ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="comment">//    std::cin.tie(nullptr);</span></span><br><span class="line"><span class="comment">//    std::cout.tie(nullptr);</span></span><br><span class="line">    <span class="type">double</span> x,y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.10f %.10f&quot;</span>,x / <span class="built_in">sqrt</span>(x*x+y*y),y / <span class="built_in">sqrt</span>(x*x+y*y));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr /><h2 id="c-coupon"><a class="markdownIt-Anchor" href="#c-coupon"></a> C - Coupon</h2><p><strong>题意：</strong></p><blockquote><p>给定n个商品，每个商品的价格是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，现在有k张优惠券，每张优惠券可以减少某个商品x元(不得低于0)，询问购买全部商品的最小花费。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>先保证不浪费优惠券的情况下，把尽可能多的商品价格减免到x元以下，然后如果还有优惠券剩余，我们对剩下的商品价格从高到低使用优惠券。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = <span class="number">2e4</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    std::ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="comment">//    std::cin.tie(nullptr);</span></span><br><span class="line"><span class="comment">//    std::cout.tie(nullptr);</span></span><br><span class="line">    <span class="type">int</span> n,k,x;</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;k&gt;&gt;x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        std::cin&gt;&gt;a[i];</span><br><span class="line">        <span class="keyword">if</span>(k == <span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(k &gt;= a[i]/x)</span><br><span class="line">        &#123;</span><br><span class="line">            k -= a[i]/x;</span><br><span class="line">            a[i] %= x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            a[i] -= k * x;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll sum = <span class="number">0</span>;</span><br><span class="line">    std::<span class="built_in">sort</span>(a<span class="number">+1</span>,a<span class="number">+1</span>+n,std::<span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> + k ; i &lt;= n ; i++)sum += a[i];</span><br><span class="line">    std::cout&lt;&lt;sum;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr /><h2 id="d-2-variable-function"><a class="markdownIt-Anchor" href="#d-2-variable-function"></a> D - 2-variable Function</h2><p><strong>题意：</strong></p><blockquote><p>给定一个数n，找到一个数x，满足下列两个条件：</p><blockquote><ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>≥</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">x\geq n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∃</mi><mi>a</mi><mi mathvariant="normal">∃</mi><mi>b</mi><mo separator="true">,</mo><mtext>使得</mtext><mi>x</mi><mo>=</mo><msup><mi>a</mi><mn>3</mn></msup><mo>+</mo><msup><mi>a</mi><mn>2</mn></msup><mi>b</mi><mo>+</mo><mi>a</mi><msup><mi>b</mi><mn>2</mn></msup><mo>+</mo><msup><mi>b</mi><mn>3</mn></msup><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>∈</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\exists a\exists b,使得x=a^3+a^2b+ab^2+b^3(a,b\in N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">∃</span><span class="mord mathnormal">a</span><span class="mord">∃</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">得</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></li></ol></blockquote></blockquote><p><strong>思路：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∵</mo><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>18</mn></msup></mrow><annotation encoding="application/x-tex">\because n\leq 10^{18}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∴</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">\therefore a,b\leq10^{6}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></span><br />我们可以使用双指针，从小到大枚举<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>，从大到小<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>，从而枚举出所有的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><msup><mi>a</mi><mn>3</mn></msup><mo>+</mo><msup><mi>a</mi><mn>2</mn></msup><mi>b</mi><mo>+</mo><mi>a</mi><msup><mi>b</mi><mn>2</mn></msup><mo>+</mo><msup><mi>b</mi><mn>3</mn></msup><mo>≥</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">x=a^3+a^2b+ab^2+b^3\geq n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.950078em;vertical-align:-0.13597em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>，并从中找到最小值。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mroot><mi>n</mi><mn>3</mn></mroot><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\sqrt[3]{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.05028em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6585560000000001em;"><span style="top:-2.836336em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">n</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/78966db3a96845ca92c3d9d25cc195ee.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1500</span><span class="number">+10</span>,M = <span class="number">2e4</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    std::ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="comment">//    std::cin.tie(nullptr);</span></span><br><span class="line"><span class="comment">//    std::cout.tie(nullptr);</span></span><br><span class="line">    ll n;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    ll res = <span class="number">1e18</span>;</span><br><span class="line">    ll j = <span class="number">1e6</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">0</span> ; i &lt;= <span class="number">1e6</span> ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll temp = i*i*i+i*i*j+i*j*j+j*j*j;</span><br><span class="line">        <span class="keyword">while</span>(temp &gt;= n &amp;&amp; j &gt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            res = std::<span class="built_in">min</span>(res,temp);</span><br><span class="line">            j--;</span><br><span class="line">            temp = i*i*i+i*i*j+i*j*j+j*j*j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr /><h2 id="e-bishop-2"><a class="markdownIt-Anchor" href="#e-bishop-2"></a> E - Bishop 2</h2><p><strong>题意：</strong></p><blockquote><p>给出一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>∗</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n*n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>的地图，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mi mathvariant="normal">.</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">&#x27;.&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord">.</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>是平地，其中#是障碍，并给出一个起点和终点，在不跨越障碍的情况下，可以往左上，右上，右下，左下四个斜角方向一次移动任意个单位，询问从起点移动到终点的最小步数，若不存在路径，则输出-1。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>修改正常BFS的拓展方式即可，每次拓展的时候把四个斜角方向可以拓展的点全部拓展。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/5b9ac310fc3746399327794cbd0739f2.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1500</span><span class="number">+10</span>,M = <span class="number">2e4</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y,step;</span><br><span class="line">&#125;que[N*N];</span><br><span class="line"><span class="type">char</span> a[N][N];</span><br><span class="line"><span class="type">bool</span> book[N][N];</span><br><span class="line"><span class="type">int</span> ne[<span class="number">4</span>][<span class="number">2</span>] = &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="type">int</span> n,start_x,start_y,end_x,end_y;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">OK</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">1</span>||y&lt;<span class="number">1</span>||x&gt;n||y&gt;n||a[x][y]==<span class="string">&#x27;#&#x27;</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> head = <span class="number">0</span>,tail = <span class="number">-1</span>;</span><br><span class="line">    que[++tail] = &#123;start_x,start_y,<span class="number">0</span>&#125;;</span><br><span class="line">    book[start_x][start_y] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span>(tail&gt;=head)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> temp = que[head++];</span><br><span class="line">        <span class="keyword">if</span>(temp.x == end_x &amp;&amp; temp.y == end_y)</span><br><span class="line">        &#123;</span><br><span class="line">            std::cout&lt;&lt;temp.step;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">4</span> ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> tx = temp.x + ne[i][<span class="number">0</span>];</span><br><span class="line">            <span class="type">int</span> ty = temp.y + ne[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">while</span>(<span class="built_in">OK</span>(tx,ty))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(!book[tx][ty])que[++tail] = &#123;tx,ty,temp.step<span class="number">+1</span>&#125;;</span><br><span class="line">                book[tx][ty] = <span class="literal">true</span>;</span><br><span class="line">                tx += ne[i][<span class="number">0</span>];</span><br><span class="line">                ty += ne[i][<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    std::ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="comment">//    std::cin.tie(nullptr);</span></span><br><span class="line"><span class="comment">//    std::cout.tie(nullptr);</span></span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;start_x&gt;&gt;start_y&gt;&gt;end_x&gt;&gt;end_y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)std::cin&gt;&gt;(a[i]<span class="number">+1</span>);</span><br><span class="line">    <span class="built_in">bfs</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr /><h2 id="f-typewriter"><a class="markdownIt-Anchor" href="#f-typewriter"></a> F - typewriter</h2><p><strong>题意：</strong></p><blockquote><p>给出n个键盘，每个键盘可以打印字母由一个字符串表示，现在要打印一个长度为L的字符串，每次选择一个键盘打印字符串，可以打印出多少不同的字符串。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>应用容斥原理，以n=3为例：</p><blockquote><p>ans =<br />+（只使用第一个键盘）+（只使用第二个键盘）+（只使用第三个键盘）-（只使用第一个键盘和第二个键盘共有的字母打印）-（只使用第一个键盘和第三个键盘共有的字母打印）-（只使用第二个键盘和第三个键盘共有的字母打印）+（使用所用键盘共有的字母打印）。</p></blockquote><p>因此我们只需要枚举上述所有情况，求出答案即可。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p>N个字母所能打印的长度为L的字符串的个数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>N</mi><mi>L</mi></msup></mrow><annotation encoding="application/x-tex">N^{L}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span></span></span></span></span></span></span></span></span></span></span></span>。<br />使用快速幂会花费<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>L</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logL)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">L</span><span class="mclose">)</span></span></span></span>的时间。<br />此外，枚举所有的情况是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br />所以总时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mi>l</mi><mi>o</mi><mi>g</mi><mi>L</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(2^nlogL)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">L</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/2130c6d073b9419daf26d8453aaa2b3a.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">30</span>,M = <span class="number">2e4</span><span class="number">+10</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> temp[N],a[N][N];</span><br><span class="line">ll ans,n,len;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">quickPow</span><span class="params">(ll x,ll k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k&amp;<span class="number">1</span>)res = (x * res) % mod;</span><br><span class="line">        x = x * x % mod;</span><br><span class="line">        k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt==<span class="number">0</span>)<span class="keyword">return</span>;</span><br><span class="line">        <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">26</span> ; i++)<span class="keyword">if</span>(temp[i])count++;</span><br><span class="line">        <span class="keyword">if</span>(cnt&amp;<span class="number">1</span>)ans = (ans + <span class="built_in">quickPow</span>(count,len)) % mod;</span><br><span class="line">        <span class="keyword">else</span> ans = (ans - <span class="built_in">quickPow</span>(count,len) + mod) % mod;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(u<span class="number">+1</span>,cnt);</span><br><span class="line">    <span class="type">bool</span> last[N];</span><br><span class="line">    <span class="built_in">memcpy</span>(last,temp,<span class="keyword">sizeof</span> temp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">26</span> ; i++)temp[i] &amp;= a[u][i];</span><br><span class="line">    <span class="built_in">dfs</span>(u<span class="number">+1</span>,cnt<span class="number">+1</span>);</span><br><span class="line">    <span class="built_in">memcpy</span>(temp,last,<span class="keyword">sizeof</span> temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;len;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        std::string s;</span><br><span class="line">        std::cin&gt;&gt;s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; s.<span class="built_in">size</span>() ; j++) a[i][s[j]-<span class="string">&#x27;a&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">26</span> ; i++)temp[i] = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    std::cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr /><h2 id="g-game-on-tree-3"><a class="markdownIt-Anchor" href="#g-game-on-tree-3"></a> G - Game on Tree 3</h2><p><strong>题意：</strong></p><blockquote><p>给定一棵根为1的树，除了根，每个点都有一个权值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，现在小明和小红从根节点开始按照如下规则玩一个游戏：</p><blockquote><ol><li>小红任意选择一个点，把这个点的权值变为0</li><li>小明从当前点出发，可以走到任意一个儿子节点</li><li>然后小明可以决定是否结束游戏(如果小明在叶子节点则必须结束游戏)</li></ol></blockquote><p>最后小明获得的分数就是小明所在点的权值，小明希望获得的分数尽可能得高，小红希望小明获得的分数尽可能的低,假设两人都足够聪明的情况下(即总是做出对当前最有利的操作)，小明可以获得的最大分数是多少。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>使用动态规划(树形dp)和二分答案。<br />考虑对于某一个分数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>，小明是否存在方案可以获得比<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>大的分数：</p><blockquote><p>我们令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>u</mi></msub><mo>≥</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">w_u\geq x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>的点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">v_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为1，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>u</mi></msub><mo>&lt;</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">w_u&lt; x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>的点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">v_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为0，。<br />如果要使小明无法获得分数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>，那么必须要使这些为1的点变成0，我们假设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span>为小明在点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>开始游戏小红所需要的消除次数。<br />那么对于某个点的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span>，我们可以用如下式子求出：</p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mi>v</mi><mi>i</mi></msub><mo>+</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><msub><mo>∑</mo><mi>c</mi></msub><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>c</mi><mo stretchy="false">]</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>c</mi><mo>∈</mo><mi>c</mi><mi>h</mi><mi>i</mi><mi>l</mi><mi>d</mi><mi>r</mi><mi>e</mi><msub><mi>n</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dp[i]=v_i+max(0,\sum_{c}dp[c]-1)(c\in children_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">c</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></blockquote></blockquote><blockquote><p>如果当前点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">v_i=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>,那么肯定是要消除的，在小明走到儿子节点之前，我们还有一次消除机会(开始游戏时小红是先手)，所以还要加上<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mo>∑</mo><mi>c</mi></msub><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>c</mi><mo stretchy="false">]</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(max(\sum_{c}dp[c]-1,0))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">c</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>。</p></blockquote><blockquote><p>最后可以求得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>，如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">!</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">dp[0]!=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，那么小明是可以获得一个比<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>大的分数的。</p></blockquote><p>最后用二分找到最大值即可。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>m</mi><mi>a</mi><mi>x</mi><msub><mi>A</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlog(maxA_i))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/395c1cd329ad486dbbf7fd4a6aa145a7.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span><span class="number">+10</span>,M = N * <span class="number">2</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> h[N],e[M],ne[M],idx;</span><br><span class="line"><span class="type">int</span> w[N],dp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b,ne[idx] = h[a],h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa,<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dp[u] = (w[u] &gt;= val);</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = h[u] ; ~i ; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> v = e[i];</span><br><span class="line">        <span class="keyword">if</span>(v==fa)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(v,u,val);</span><br><span class="line">        sum += dp[v];</span><br><span class="line">    &#125;</span><br><span class="line">    dp[u] += std::<span class="built_in">max</span>(<span class="number">0</span>,sum<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">-1</span>,val);</span><br><span class="line">    <span class="keyword">return</span> dp[<span class="number">1</span>] != <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    std::cin&gt;&gt;n;</span><br><span class="line">    <span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">    <span class="type">int</span> max = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt;= n ; i++)std::cin&gt;&gt;w[i],max = std::<span class="built_in">max</span>(max,w[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">        std::cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="built_in">add</span>(a,b),<span class="built_in">add</span>(b,a);</span><br><span class="line">    &#125;</span><br><span class="line">    w[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="type">int</span> L = <span class="number">0</span>,R = max;</span><br><span class="line">    <span class="keyword">while</span>(R&gt;L)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = L + R + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid))L = mid;</span><br><span class="line">        <span class="keyword">else</span> R = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt;L;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr /><h2 id="ex-01-queries"><a class="markdownIt-Anchor" href="#ex-01-queries"></a> Ex - 01? Queries</h2><p><strong>题意：</strong></p><blockquote><p>给定一个由’0’,‘1’和’?'组成的字符串,我们可以任意得将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo stretchy="false">?</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">&#x27;?&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">?</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>替换成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">&#x27;0&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">&#x27;1&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>,求字符串的所有子串可以形成的不同的01串有多少种。<br />现在存在q个操作,每次操作将第x个字符变成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo separator="true">,</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mtext>或</mtext><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo stretchy="false">?</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">&#x27;0&#x27;,&#x27;1&#x27;或&#x27;?&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct"><span class="mpunct">,</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord cjk_fallback">或</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">?</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>,询问每次操作后的答案。</p></blockquote><p><strong>思路：</strong></p><blockquote><p>我们先考虑在某种情况下的01串种数。<br />考虑动态规划,定义<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mtext>和</mtext><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][0]和dp[i][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>分别表示前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个字母所能组成的以0结尾的和以1结尾的种数。<br />那么应该有如下状态转移方程:</p><blockquote><ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">s[i]=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>+</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">dp[i][0]=dp[i-1][0]+dp[i-1][1]+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][1]=dp[i-1][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">s[i]=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][0]=dp[i-1][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">dp[i][1]=dp[i-1][1]+dp[i-1][0]+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mtext> </mtext><mo stretchy="false">?</mo></mrow><annotation encoding="application/x-tex">s[i]= \ ?</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mclose">?</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>=</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>+</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">dp[i][0]=dp[i-1][0]+dp[i-1][1]+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">dp[i][1]=dp[i-1][1]+dp[i-1][0]+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li></ol></blockquote><p>我们将上述状态转移方程用矩阵表示:</p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><msub><mi>A</mi><msub><mi>s</mi><mi>i</mi></msub></msub><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix} dp[i][0] \\dp[i][1] \\1  \end{bmatrix}=A_{s_{i}}\begin{bmatrix} dp[i-1][0]\\ dp[i-1][1]\\1 \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span><br />分别的,对于不同的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><msub><mi>s</mi><mi>i</mi></msub></msub></mrow><annotation encoding="application/x-tex">A_{s_{i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span>,有:</p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn><mo>:</mo></mrow><annotation encoding="application/x-tex">s[i]=0:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><msub><mi>s</mi><mi>i</mi></msub></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A_{s_{i}}=\begin{bmatrix}1&amp; 1 &amp;1 \\ 0&amp;1  &amp; 0\\ 0&amp; 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mn>1</mn><mo>:</mo></mrow><annotation encoding="application/x-tex">s[i]=1:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><msub><mi>s</mi><mi>i</mi></msub></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A_{s_{i}}=\begin{bmatrix}1&amp; 0 &amp;0 \\ 1&amp;1  &amp; 1\\ 0&amp; 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mtext> </mtext><mo stretchy="false">?</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">s[i]=\ ?:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mclose">?</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><msub><mi>s</mi><mi>i</mi></msub></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A_{s_{i}}=\begin{bmatrix}1&amp; 1 &amp;1 \\ 1&amp;1  &amp; 1\\ 0&amp; 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p></blockquote></blockquote><blockquote><p>此外有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><msub><mi>A</mi><msub><mi>s</mi><mi>i</mi></msub></msub><msub><mi>A</mi><msub><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></msub><mo>…</mo><msub><mi>A</mi><msub><mi>s</mi><mn>1</mn></msub></msub><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><msub><mi>A</mi><msub><mi>s</mi><mi>i</mi></msub></msub><msub><mi>A</mi><msub><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></msub><mo>…</mo><msub><mi>A</mi><msub><mi>s</mi><mn>1</mn></msub></msub><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix} dp[i][0] \\dp[i][1] \\1  \end{bmatrix}=A_{s_{i}}A_{s_{i-1}}\dots A_{s_{1}}\begin{bmatrix} dp[0][0]\\ dp[0][1]\\1 \end{bmatrix}=A_{s_{i}}A_{s_{i-1}}\dots A_{s_{1}}\begin{bmatrix} 0\\ 0\\1 \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32808571428571426em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20252142857142857em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.291765em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32808571428571426em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20252142857142857em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.291765em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p></blockquote><p>我们可以用线段树维护每一个矩阵,这样修改操作可以在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">logn</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span></span></span></span>时间内完成。</p></blockquote><p><strong>时间复杂度：</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>q</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(qlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><p><strong>AC代码：</strong><br /><img src="https://img-blog.csdnimg.cn/bc5a7997abb347ce8011788c81a0cddc.png" alt="在这里插入图片描述" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span><span class="number">+10</span>,M = N * <span class="number">2</span>,INF = <span class="number">0x3f3f3f3f</span>,mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">    ll a[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">&#125;tr[N*<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s[N];</span><br><span class="line"><span class="type">int</span> n,q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(tr[u].a,<span class="number">0</span>,<span class="keyword">sizeof</span> tr[u].a);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">3</span> ; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; <span class="number">3</span> ; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span> ; k &lt; <span class="number">3</span> ; k++)</span><br><span class="line">                tr[u].a[i][j] = (tr[u].a[i][j] + tr[u&lt;&lt;<span class="number">1</span>].a[i][k]*tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].a[k][j])%mod;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">assign</span><span class="params">(Node &amp;root,<span class="type">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ch==<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        root.a[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        root.a[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">        root.a[<span class="number">2</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        root.a[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        root.a[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        root.a[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        root.a[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">        root.a[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">2</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        root.a[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        root.a[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        root.a[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        root.a[<span class="number">2</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        root.a[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        root.a[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    &#123;</span><br><span class="line">        tr[u] = &#123;l,r&#125;;</span><br><span class="line">        <span class="built_in">assign</span>(tr[u],s[r]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        tr[u] = &#123;l,r&#125;;</span><br><span class="line">        <span class="built_in">build</span>(u&lt;&lt;<span class="number">1</span>,l,mid),<span class="built_in">build</span>(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid<span class="number">+1</span>,r);</span><br><span class="line">        <span class="built_in">pushup</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> x,<span class="type">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tr[u].l==x&amp;&amp;tr[u].r==x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">assign</span>(tr[u],ch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = tr[u].l + tr[u].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(x &lt;= mid)<span class="built_in">modify</span>(u&lt;&lt;<span class="number">1</span>,x,ch);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">modify</span>(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,x,ch);</span><br><span class="line">        <span class="built_in">pushup</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    std::cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    std::cin&gt;&gt;(s<span class="number">+1</span>);</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="type">char</span> ch;</span><br><span class="line">        std::cin&gt;&gt;x&gt;&gt;ch;</span><br><span class="line">        <span class="built_in">modify</span>(<span class="number">1</span>,x,ch);</span><br><span class="line">        std::cout&lt;&lt;(tr[<span class="number">1</span>].a[<span class="number">0</span>][<span class="number">2</span>]+tr[<span class="number">1</span>].a[<span class="number">1</span>][<span class="number">2</span>])%mod&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr />]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Atcoder </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
